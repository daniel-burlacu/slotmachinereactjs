{"ast":null,"code":"var inherits = require(\"util\").inherits;\n\nvar to = require(\"./to\");\n\nvar abi = require(\"ethereumjs-abi\");\n\ninherits(RuntimeError, Error); // Note: ethereumjs-vm will return an object that has a \"results\" and \"receipts\" keys.\n// You should pass in the whole object.\n\nfunction RuntimeError(transactions, vmOutput) {\n  // Why not just Error.apply(this, [message])? See\n  // https://gist.github.com/justmoon/15511f92e5216fa2624b#anti-patterns\n  Error.captureStackTrace(this, this.constructor);\n  this.name = this.constructor.name;\n  this.results = {};\n  this.hashes = []; // handles creating this.message\n\n  this.combine(transactions, vmOutput);\n}\n\nRuntimeError.prototype.combine = function (transactions, vmOutput) {\n  // Can be combined with vmOutput or another RuntimeError.\n  if (transactions instanceof RuntimeError) {\n    var err = transactions;\n    var keys = Object.keys(err.results);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      this.results[key] = err.results[key];\n      Array.prototype.push.apply(this.hashes, err.hashes);\n    }\n  } else {\n    var results = vmOutput.results;\n\n    for (i = 0; i < transactions.length; i++) {\n      var tx = transactions[i];\n      var result = results[i]; // 1 means no error, oddly.\n\n      if (result.execResult.exceptionError) {\n        var hash = to.hex(tx.hash());\n        this.hashes.push(hash);\n        var reason;\n        var returnData = result.execResult.returnValue;\n\n        if (returnData && returnData.slice(0, 4).toString(\"hex\") === \"08c379a0\") {\n          try {\n            reason = abi.rawDecode([\"string\"], returnData.slice(4))[0];\n          } catch (_) {// if decoding fails, we'll just leave the reason empty\n          }\n        }\n\n        const runState = result.execResult.runState;\n        this.results[hash] = {\n          error: result.execResult.exceptionError.error || result.execResult.exceptionError,\n          program_counter: runState && runState.programCounter,\n          return: to.hex(returnData),\n          reason: reason\n        };\n      }\n    }\n  } // Once combined, set the message\n\n\n  if (this.hashes.length === 1) {\n    var exceptionResult = this.results[this.hashes[0]];\n    var message = \"VM Exception while processing transaction: \" + exceptionResult.error;\n\n    if (exceptionResult.reason) {\n      message += \" \" + exceptionResult.reason;\n    }\n\n    this.message = message;\n  } else {\n    message = \"Multiple VM Exceptions while processing transactions: \\n\\n\";\n\n    for (i = 0; i < this.hashes.length; i++) {\n      hash = this.hashes[i];\n      exceptionResult = this.results[hash];\n      message += hash + \": \" + exceptionResult.error;\n\n      if (exceptionResult.reason) {\n        message += \" \" + exceptionResult.reason;\n      }\n\n      message += \"\\n\";\n    }\n\n    this.message = message;\n  }\n};\n\nRuntimeError.prototype.count = function () {\n  return Object.keys(this.results).length;\n};\n\nRuntimeError.fromResults = function (transactions, vmOutput) {\n  var err = new RuntimeError(transactions, vmOutput);\n\n  if (err.count() === 0) {\n    return null;\n  }\n\n  return err;\n};\n\nmodule.exports = RuntimeError;","map":{"version":3,"names":["inherits","require","to","abi","RuntimeError","Error","transactions","vmOutput","captureStackTrace","constructor","name","results","hashes","combine","prototype","err","keys","Object","i","length","key","Array","push","apply","tx","result","execResult","exceptionError","hash","hex","reason","returnData","returnValue","slice","toString","rawDecode","_","runState","error","program_counter","programCounter","return","exceptionResult","message","count","fromResults","module","exports"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/lib/utils/runtimeerror.js"],"sourcesContent":["var inherits = require(\"util\").inherits;\nvar to = require(\"./to\");\nvar abi = require(\"ethereumjs-abi\");\n\ninherits(RuntimeError, Error);\n\n// Note: ethereumjs-vm will return an object that has a \"results\" and \"receipts\" keys.\n// You should pass in the whole object.\nfunction RuntimeError(transactions, vmOutput) {\n  // Why not just Error.apply(this, [message])? See\n  // https://gist.github.com/justmoon/15511f92e5216fa2624b#anti-patterns\n  Error.captureStackTrace(this, this.constructor);\n  this.name = this.constructor.name;\n\n  this.results = {};\n  this.hashes = [];\n\n  // handles creating this.message\n  this.combine(transactions, vmOutput);\n}\n\nRuntimeError.prototype.combine = function(transactions, vmOutput) {\n  // Can be combined with vmOutput or another RuntimeError.\n  if (transactions instanceof RuntimeError) {\n    var err = transactions;\n    var keys = Object.keys(err.results);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      this.results[key] = err.results[key];\n      Array.prototype.push.apply(this.hashes, err.hashes);\n    }\n  } else {\n    var results = vmOutput.results;\n\n    for (i = 0; i < transactions.length; i++) {\n      var tx = transactions[i];\n      var result = results[i];\n\n      // 1 means no error, oddly.\n      if (result.execResult.exceptionError) {\n        var hash = to.hex(tx.hash());\n        this.hashes.push(hash);\n        var reason;\n        var returnData = result.execResult.returnValue;\n        if (returnData && returnData.slice(0, 4).toString(\"hex\") === \"08c379a0\") {\n          try {\n            reason = abi.rawDecode([\"string\"], returnData.slice(4))[0];\n          } catch (_) {\n            // if decoding fails, we'll just leave the reason empty\n          }\n        }\n\n        const runState = result.execResult.runState;\n        this.results[hash] = {\n          error: result.execResult.exceptionError.error || result.execResult.exceptionError,\n          program_counter: runState && runState.programCounter,\n          return: to.hex(returnData),\n          reason: reason\n        };\n      }\n    }\n  }\n\n  // Once combined, set the message\n  if (this.hashes.length === 1) {\n    var exceptionResult = this.results[this.hashes[0]];\n    var message = \"VM Exception while processing transaction: \" + exceptionResult.error;\n    if (exceptionResult.reason) {\n      message += \" \" + exceptionResult.reason;\n    }\n    this.message = message;\n  } else {\n    message = \"Multiple VM Exceptions while processing transactions: \\n\\n\";\n\n    for (i = 0; i < this.hashes.length; i++) {\n      hash = this.hashes[i];\n      exceptionResult = this.results[hash];\n      message += hash + \": \" + exceptionResult.error;\n      if (exceptionResult.reason) {\n        message += \" \" + exceptionResult.reason;\n      }\n      message += \"\\n\";\n    }\n    this.message = message;\n  }\n};\n\nRuntimeError.prototype.count = function() {\n  return Object.keys(this.results).length;\n};\n\nRuntimeError.fromResults = function(transactions, vmOutput) {\n  var err = new RuntimeError(transactions, vmOutput);\n\n  if (err.count() === 0) {\n    return null;\n  }\n\n  return err;\n};\n\nmodule.exports = RuntimeError;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}