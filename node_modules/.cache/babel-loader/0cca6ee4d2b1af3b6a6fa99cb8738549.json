{"ast":null,"code":"var to = require(\"./to\");\n\nmodule.exports = {\n  toJSON: function (block, includeFullTransactions) {\n    return {\n      number: to.rpcQuantityHexString(block.header.number),\n      hash: to.hex(block.hash()),\n      parentHash: to.hex(block.header.parentHash),\n      // common.hash\n      mixHash: to.hex(block.header.mixHash),\n      nonce: to.rpcDataHexString(to.hex(block.header.nonce), 16),\n      sha3Uncles: to.hex(block.header.uncleHash),\n      logsBloom: to.hex(block.header.bloom),\n      transactionsRoot: to.hex(block.header.transactionsTrie),\n      stateRoot: to.hex(block.header.stateRoot),\n      receiptsRoot: to.hex(block.header.receiptTrie),\n      miner: to.hex(block.header.coinbase),\n      difficulty: to.rpcQuantityHexString(block.header.difficulty),\n      totalDifficulty: to.rpcQuantityHexString(block.header.difficulty),\n      // TODO: Figure out what to do here.\n      extraData: to.rpcDataHexString(block.header.extraData),\n      size: to.hex(1000),\n      // TODO: Do something better here\n      gasLimit: to.rpcQuantityHexString(block.header.gasLimit),\n      gasUsed: to.rpcQuantityHexString(block.header.gasUsed),\n      timestamp: to.rpcQuantityHexString(block.header.timestamp),\n      transactions: block.transactions.map(function (tx) {\n        if (includeFullTransactions) {\n          return tx.toJsonRpc(block);\n        } else {\n          return to.hex(tx.hash());\n        }\n      }),\n      uncles: [] // block.uncleHeaders.map(function(uncleHash) {return to.hex(uncleHash)})\n\n    };\n  }\n};","map":{"version":3,"names":["to","require","module","exports","toJSON","block","includeFullTransactions","number","rpcQuantityHexString","header","hash","hex","parentHash","mixHash","nonce","rpcDataHexString","sha3Uncles","uncleHash","logsBloom","bloom","transactionsRoot","transactionsTrie","stateRoot","receiptsRoot","receiptTrie","miner","coinbase","difficulty","totalDifficulty","extraData","size","gasLimit","gasUsed","timestamp","transactions","map","tx","toJsonRpc","uncles"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/lib/utils/block_helper.js"],"sourcesContent":["var to = require(\"./to\");\n\nmodule.exports = {\n  toJSON: function(block, includeFullTransactions) {\n    return {\n      number: to.rpcQuantityHexString(block.header.number),\n      hash: to.hex(block.hash()),\n      parentHash: to.hex(block.header.parentHash), // common.hash\n      mixHash: to.hex(block.header.mixHash),\n      nonce: to.rpcDataHexString(to.hex(block.header.nonce), 16),\n      sha3Uncles: to.hex(block.header.uncleHash),\n      logsBloom: to.hex(block.header.bloom),\n      transactionsRoot: to.hex(block.header.transactionsTrie),\n      stateRoot: to.hex(block.header.stateRoot),\n      receiptsRoot: to.hex(block.header.receiptTrie),\n      miner: to.hex(block.header.coinbase),\n      difficulty: to.rpcQuantityHexString(block.header.difficulty),\n      totalDifficulty: to.rpcQuantityHexString(block.header.difficulty), // TODO: Figure out what to do here.\n      extraData: to.rpcDataHexString(block.header.extraData),\n      size: to.hex(1000), // TODO: Do something better here\n      gasLimit: to.rpcQuantityHexString(block.header.gasLimit),\n      gasUsed: to.rpcQuantityHexString(block.header.gasUsed),\n      timestamp: to.rpcQuantityHexString(block.header.timestamp),\n      transactions: block.transactions.map(function(tx) {\n        if (includeFullTransactions) {\n          return tx.toJsonRpc(block);\n        } else {\n          return to.hex(tx.hash());\n        }\n      }),\n      uncles: [] // block.uncleHeaders.map(function(uncleHash) {return to.hex(uncleHash)})\n    };\n  }\n};\n"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,MAAD,CAAhB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACfC,MAAM,EAAE,UAASC,KAAT,EAAgBC,uBAAhB,EAAyC;IAC/C,OAAO;MACLC,MAAM,EAAEP,EAAE,CAACQ,oBAAH,CAAwBH,KAAK,CAACI,MAAN,CAAaF,MAArC,CADH;MAELG,IAAI,EAAEV,EAAE,CAACW,GAAH,CAAON,KAAK,CAACK,IAAN,EAAP,CAFD;MAGLE,UAAU,EAAEZ,EAAE,CAACW,GAAH,CAAON,KAAK,CAACI,MAAN,CAAaG,UAApB,CAHP;MAGwC;MAC7CC,OAAO,EAAEb,EAAE,CAACW,GAAH,CAAON,KAAK,CAACI,MAAN,CAAaI,OAApB,CAJJ;MAKLC,KAAK,EAAEd,EAAE,CAACe,gBAAH,CAAoBf,EAAE,CAACW,GAAH,CAAON,KAAK,CAACI,MAAN,CAAaK,KAApB,CAApB,EAAgD,EAAhD,CALF;MAMLE,UAAU,EAAEhB,EAAE,CAACW,GAAH,CAAON,KAAK,CAACI,MAAN,CAAaQ,SAApB,CANP;MAOLC,SAAS,EAAElB,EAAE,CAACW,GAAH,CAAON,KAAK,CAACI,MAAN,CAAaU,KAApB,CAPN;MAQLC,gBAAgB,EAAEpB,EAAE,CAACW,GAAH,CAAON,KAAK,CAACI,MAAN,CAAaY,gBAApB,CARb;MASLC,SAAS,EAAEtB,EAAE,CAACW,GAAH,CAAON,KAAK,CAACI,MAAN,CAAaa,SAApB,CATN;MAULC,YAAY,EAAEvB,EAAE,CAACW,GAAH,CAAON,KAAK,CAACI,MAAN,CAAae,WAApB,CAVT;MAWLC,KAAK,EAAEzB,EAAE,CAACW,GAAH,CAAON,KAAK,CAACI,MAAN,CAAaiB,QAApB,CAXF;MAYLC,UAAU,EAAE3B,EAAE,CAACQ,oBAAH,CAAwBH,KAAK,CAACI,MAAN,CAAakB,UAArC,CAZP;MAaLC,eAAe,EAAE5B,EAAE,CAACQ,oBAAH,CAAwBH,KAAK,CAACI,MAAN,CAAakB,UAArC,CAbZ;MAa8D;MACnEE,SAAS,EAAE7B,EAAE,CAACe,gBAAH,CAAoBV,KAAK,CAACI,MAAN,CAAaoB,SAAjC,CAdN;MAeLC,IAAI,EAAE9B,EAAE,CAACW,GAAH,CAAO,IAAP,CAfD;MAee;MACpBoB,QAAQ,EAAE/B,EAAE,CAACQ,oBAAH,CAAwBH,KAAK,CAACI,MAAN,CAAasB,QAArC,CAhBL;MAiBLC,OAAO,EAAEhC,EAAE,CAACQ,oBAAH,CAAwBH,KAAK,CAACI,MAAN,CAAauB,OAArC,CAjBJ;MAkBLC,SAAS,EAAEjC,EAAE,CAACQ,oBAAH,CAAwBH,KAAK,CAACI,MAAN,CAAawB,SAArC,CAlBN;MAmBLC,YAAY,EAAE7B,KAAK,CAAC6B,YAAN,CAAmBC,GAAnB,CAAuB,UAASC,EAAT,EAAa;QAChD,IAAI9B,uBAAJ,EAA6B;UAC3B,OAAO8B,EAAE,CAACC,SAAH,CAAahC,KAAb,CAAP;QACD,CAFD,MAEO;UACL,OAAOL,EAAE,CAACW,GAAH,CAAOyB,EAAE,CAAC1B,IAAH,EAAP,CAAP;QACD;MACF,CANa,CAnBT;MA0BL4B,MAAM,EAAE,EA1BH,CA0BM;;IA1BN,CAAP;EA4BD;AA9Bc,CAAjB"},"metadata":{},"sourceType":"script"}