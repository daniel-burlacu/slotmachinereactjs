{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BN = require(\"bn.js\");\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar exceptions_1 = require(\"../exceptions\");\n\nvar message_1 = require(\"./message\");\n\nvar promisify = require('util.promisify');\n/**\n * External interface made available to EVM bytecode. Modeled after\n * the ewasm EEI [spec](https://github.com/ewasm/design/blob/master/eth_interface.md).\n * It includes methods for accessing/modifying state, calling or creating contracts, access\n * to environment data among other things.\n * The EEI instance also keeps artifacts produced by the bytecode such as logs\n * and to-be-selfdestructed addresses.\n */\n\n\nvar EEI =\n/** @class */\nfunction () {\n  function EEI(env, state, evm, common, gasLeft) {\n    this._env = env;\n    this._state = state;\n    this._evm = evm;\n    this._lastReturned = Buffer.alloc(0);\n    this._common = common;\n    this._gasLeft = gasLeft;\n    this._result = {\n      logs: [],\n      returnValue: undefined,\n      selfdestruct: {}\n    };\n  }\n  /**\n   * Subtracts an amount from the gas counter.\n   * @param amount - Amount of gas to consume\n   * @throws if out of gas\n   */\n\n\n  EEI.prototype.useGas = function (amount) {\n    this._gasLeft.isub(amount);\n\n    if (this._gasLeft.ltn(0)) {\n      this._gasLeft = new BN(0);\n      trap(exceptions_1.ERROR.OUT_OF_GAS);\n    }\n  };\n  /**\n   * Adds a positive amount to the gas counter.\n   * @param amount - Amount of gas refunded\n   */\n\n\n  EEI.prototype.refundGas = function (amount) {\n    this._evm._refund.iadd(amount);\n  };\n  /**\n   * Reduces amount of gas to be refunded by a positive value.\n   * @param amount - Amount to subtract from gas refunds\n   */\n\n\n  EEI.prototype.subRefund = function (amount) {\n    this._evm._refund.isub(amount);\n\n    if (this._evm._refund.ltn(0)) {\n      this._evm._refund = new BN(0);\n      trap(exceptions_1.ERROR.REFUND_EXHAUSTED);\n    }\n  };\n  /**\n   * Returns address of currently executing account.\n   */\n\n\n  EEI.prototype.getAddress = function () {\n    return this._env.address;\n  };\n  /**\n   * Returns balance of the given account.\n   * @param address - Address of account\n   */\n\n\n  EEI.prototype.getExternalBalance = function (address) {\n    return __awaiter(this, void 0, void 0, function () {\n      var account;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // shortcut if current account\n            if (address.toString('hex') === this._env.address.toString('hex')) {\n              return [2\n              /*return*/\n              , new BN(this._env.contract.balance)];\n            }\n\n            return [4\n            /*yield*/\n            , this._state.getAccount(address)];\n\n          case 1:\n            account = _a.sent();\n            return [2\n            /*return*/\n            , new BN(account.balance)];\n        }\n      });\n    });\n  };\n  /**\n   * Returns balance of self.\n   */\n\n\n  EEI.prototype.getSelfBalance = function () {\n    return new BN(this._env.contract.balance);\n  };\n  /**\n   * Returns caller address. This is the address of the account\n   * that is directly responsible for this execution.\n   */\n\n\n  EEI.prototype.getCaller = function () {\n    return new BN(this._env.caller);\n  };\n  /**\n   * Returns the deposited value by the instruction/transaction\n   * responsible for this execution.\n   */\n\n\n  EEI.prototype.getCallValue = function () {\n    return new BN(this._env.callValue);\n  };\n  /**\n   * Returns input data in current environment. This pertains to the input\n   * data passed with the message call instruction or transaction.\n   */\n\n\n  EEI.prototype.getCallData = function () {\n    return this._env.callData;\n  };\n  /**\n   * Returns size of input data in current environment. This pertains to the\n   * input data passed with the message call instruction or transaction.\n   */\n\n\n  EEI.prototype.getCallDataSize = function () {\n    return new BN(this._env.callData.length);\n  };\n  /**\n   * Returns the size of code running in current environment.\n   */\n\n\n  EEI.prototype.getCodeSize = function () {\n    return new BN(this._env.code.length);\n  };\n  /**\n   * Returns the code running in current environment.\n   */\n\n\n  EEI.prototype.getCode = function () {\n    return this._env.code;\n  };\n  /**\n   * Returns true if the current call must be executed statically.\n   */\n\n\n  EEI.prototype.isStatic = function () {\n    return this._env.isStatic;\n  };\n  /**\n   * Get size of an accountâ€™s code.\n   * @param address - Address of account\n   */\n\n\n  EEI.prototype.getExternalCodeSize = function (address) {\n    return __awaiter(this, void 0, void 0, function () {\n      var addressBuf, code;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            addressBuf = addressToBuffer(address);\n            return [4\n            /*yield*/\n            , this._state.getContractCode(addressBuf)];\n\n          case 1:\n            code = _a.sent();\n            return [2\n            /*return*/\n            , new BN(code.length)];\n        }\n      });\n    });\n  };\n  /**\n   * Returns code of an account.\n   * @param address - Address of account\n   */\n\n\n  EEI.prototype.getExternalCode = function (address) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (!Buffer.isBuffer(address)) {\n          address = addressToBuffer(address);\n        }\n\n        return [2\n        /*return*/\n        , this._state.getContractCode(address)];\n      });\n    });\n  };\n  /**\n   * Returns size of current return data buffer. This contains the return data\n   * from the last executed call, callCode, callDelegate, callStatic or create.\n   * Note: create only fills the return data buffer in case of a failure.\n   */\n\n\n  EEI.prototype.getReturnDataSize = function () {\n    return new BN(this._lastReturned.length);\n  };\n  /**\n   * Returns the current return data buffer. This contains the return data\n   * from last executed call, callCode, callDelegate, callStatic or create.\n   * Note: create only fills the return data buffer in case of a failure.\n   */\n\n\n  EEI.prototype.getReturnData = function () {\n    return this._lastReturned;\n  };\n  /**\n   * Returns price of gas in current environment.\n   */\n\n\n  EEI.prototype.getTxGasPrice = function () {\n    return new BN(this._env.gasPrice);\n  };\n  /**\n   * Returns the execution's origination address. This is the\n   * sender of original transaction; it is never an account with\n   * non-empty associated code.\n   */\n\n\n  EEI.prototype.getTxOrigin = function () {\n    return new BN(this._env.origin);\n  };\n  /**\n   * Returns the blockâ€™s number.\n   */\n\n\n  EEI.prototype.getBlockNumber = function () {\n    return new BN(this._env.block.header.number);\n  };\n  /**\n   * Returns the block's beneficiary address.\n   */\n\n\n  EEI.prototype.getBlockCoinbase = function () {\n    return new BN(this._env.block.header.coinbase);\n  };\n  /**\n   * Returns the block's timestamp.\n   */\n\n\n  EEI.prototype.getBlockTimestamp = function () {\n    return new BN(this._env.block.header.timestamp);\n  };\n  /**\n   * Returns the block's difficulty.\n   */\n\n\n  EEI.prototype.getBlockDifficulty = function () {\n    return new BN(this._env.block.header.difficulty);\n  };\n  /**\n   * Returns the block's gas limit.\n   */\n\n\n  EEI.prototype.getBlockGasLimit = function () {\n    return new BN(this._env.block.header.gasLimit);\n  };\n  /**\n   * Returns the chain ID for current chain. Introduced for the\n   * CHAINID opcode proposed in [EIP-1344](https://eips.ethereum.org/EIPS/eip-1344).\n   */\n\n\n  EEI.prototype.getChainId = function () {\n    return new BN(this._common.chainId());\n  };\n  /**\n   * Returns Gets the hash of one of the 256 most recent complete blocks.\n   * @param num - Number of block\n   */\n\n\n  EEI.prototype.getBlockHash = function (num) {\n    return __awaiter(this, void 0, void 0, function () {\n      var block;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , promisify(this._env.blockchain.getBlock).bind(this._env.blockchain)(num)];\n\n          case 1:\n            block = _a.sent();\n            return [2\n            /*return*/\n            , new BN(block.hash())];\n        }\n      });\n    });\n  };\n  /**\n   * Store 256-bit a value in memory to persistent storage.\n   */\n\n\n  EEI.prototype.storageStore = function (key, value) {\n    return __awaiter(this, void 0, void 0, function () {\n      var account;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._state.putContractStorage(this._env.address, key, value)];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this._state.getAccount(this._env.address)];\n\n          case 2:\n            account = _a.sent();\n            this._env.contract = account;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Loads a 256-bit value to memory from persistent storage.\n   * @param key - Storage key\n   */\n\n\n  EEI.prototype.storageLoad = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this._state.getContractStorage(this._env.address, key)];\n      });\n    });\n  };\n  /**\n   * Returns the current gasCounter.\n   */\n\n\n  EEI.prototype.getGasLeft = function () {\n    return this._gasLeft.clone();\n  };\n  /**\n   * Set the returning output data for the execution.\n   * @param returnData - Output data to return\n   */\n\n\n  EEI.prototype.finish = function (returnData) {\n    this._result.returnValue = returnData;\n    trap(exceptions_1.ERROR.STOP);\n  };\n  /**\n   * Set the returning output data for the execution. This will halt the\n   * execution immediately and set the execution result to \"reverted\".\n   * @param returnData - Output data to return\n   */\n\n\n  EEI.prototype.revert = function (returnData) {\n    this._result.returnValue = returnData;\n    trap(exceptions_1.ERROR.REVERT);\n  };\n  /**\n   * Mark account for later deletion and give the remaining balance to the\n   * specified beneficiary address. This will cause a trap and the\n   * execution will be aborted immediately.\n   * @param toAddress - Beneficiary address\n   */\n\n\n  EEI.prototype.selfDestruct = function (toAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this._selfDestruct(toAddress)];\n      });\n    });\n  };\n\n  EEI.prototype._selfDestruct = function (toAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var toAccount, newBalance, account;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // only add to refund if this is the first selfdestruct for the address\n            if (!this._result.selfdestruct[this._env.address.toString('hex')]) {\n              this.refundGas(new BN(this._common.param('gasPrices', 'selfdestructRefund')));\n            }\n\n            this._result.selfdestruct[this._env.address.toString('hex')] = toAddress;\n            return [4\n            /*yield*/\n            , this._state.getAccount(toAddress)];\n\n          case 1:\n            toAccount = _a.sent();\n            newBalance = new BN(this._env.contract.balance).add(new BN(toAccount.balance));\n            toAccount.balance = ethereumjs_util_1.toBuffer(newBalance);\n            return [4\n            /*yield*/\n            , this._state.putAccount(toAddress, toAccount) // Subtract from contract balance\n            ];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this._state.getAccount(this._env.address)];\n\n          case 3:\n            account = _a.sent();\n            account.balance = ethereumjs_util_1.toBuffer(new BN(0));\n            return [4\n            /*yield*/\n            , this._state.putAccount(this._env.address, account)];\n\n          case 4:\n            _a.sent();\n\n            trap(exceptions_1.ERROR.STOP);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Creates a new log in the current environment.\n   */\n\n\n  EEI.prototype.log = function (data, numberOfTopics, topics) {\n    if (numberOfTopics < 0 || numberOfTopics > 4) {\n      trap(exceptions_1.ERROR.OUT_OF_RANGE);\n    }\n\n    if (topics.length !== numberOfTopics) {\n      trap(exceptions_1.ERROR.INTERNAL_ERROR);\n    } // add address\n\n\n    var log = [this._env.address];\n    log.push(topics); // add data\n\n    log.push(data);\n\n    this._result.logs.push(log);\n  };\n  /**\n   * Sends a message with arbitrary data to a given address path.\n   */\n\n\n  EEI.prototype.call = function (gasLimit, address, value, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      var msg;\n      return __generator(this, function (_a) {\n        msg = new message_1.default({\n          caller: this._env.address,\n          gasLimit: gasLimit,\n          to: address,\n          value: value,\n          data: data,\n          isStatic: this._env.isStatic,\n          depth: this._env.depth + 1\n        });\n        return [2\n        /*return*/\n        , this._baseCall(msg)];\n      });\n    });\n  };\n  /**\n   * Message-call into this account with an alternative account's code.\n   */\n\n\n  EEI.prototype.callCode = function (gasLimit, address, value, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      var msg;\n      return __generator(this, function (_a) {\n        msg = new message_1.default({\n          caller: this._env.address,\n          gasLimit: gasLimit,\n          to: this._env.address,\n          codeAddress: address,\n          value: value,\n          data: data,\n          isStatic: this._env.isStatic,\n          depth: this._env.depth + 1\n        });\n        return [2\n        /*return*/\n        , this._baseCall(msg)];\n      });\n    });\n  };\n  /**\n   * Sends a message with arbitrary data to a given address path, but disallow\n   * state modifications. This includes log, create, selfdestruct and call with\n   * a non-zero value.\n   */\n\n\n  EEI.prototype.callStatic = function (gasLimit, address, value, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      var msg;\n      return __generator(this, function (_a) {\n        msg = new message_1.default({\n          caller: this._env.address,\n          gasLimit: gasLimit,\n          to: address,\n          value: value,\n          data: data,\n          isStatic: true,\n          depth: this._env.depth + 1\n        });\n        return [2\n        /*return*/\n        , this._baseCall(msg)];\n      });\n    });\n  };\n  /**\n   * Message-call into this account with an alternative accountâ€™s code, but\n   * persisting the current values for sender and value.\n   */\n\n\n  EEI.prototype.callDelegate = function (gasLimit, address, value, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      var msg;\n      return __generator(this, function (_a) {\n        msg = new message_1.default({\n          caller: this._env.caller,\n          gasLimit: gasLimit,\n          to: this._env.address,\n          codeAddress: address,\n          value: value,\n          data: data,\n          isStatic: this._env.isStatic,\n          delegatecall: true,\n          depth: this._env.depth + 1\n        });\n        return [2\n        /*return*/\n        , this._baseCall(msg)];\n      });\n    });\n  };\n\n  EEI.prototype._baseCall = function (msg) {\n    return __awaiter(this, void 0, void 0, function () {\n      var selfdestruct, results, account;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            selfdestruct = __assign({}, this._result.selfdestruct);\n            msg.selfdestruct = selfdestruct; // empty the return data buffer\n\n            this._lastReturned = Buffer.alloc(0); // Check if account has enough ether and max depth not exceeded\n\n            if (this._env.depth >= this._common.param('vm', 'stackLimit') || msg.delegatecall !== true && new BN(this._env.contract.balance).lt(msg.value)) {\n              return [2\n              /*return*/\n              , new BN(0)];\n            }\n\n            return [4\n            /*yield*/\n            , this._evm.executeMessage(msg)];\n\n          case 1:\n            results = _a.sent();\n\n            if (results.execResult.logs) {\n              this._result.logs = this._result.logs.concat(results.execResult.logs);\n            } // this should always be safe\n\n\n            this.useGas(results.gasUsed); // Set return value\n\n            if (results.execResult.returnValue && (!results.execResult.exceptionError || results.execResult.exceptionError.error === exceptions_1.ERROR.REVERT)) {\n              this._lastReturned = results.execResult.returnValue;\n            }\n\n            if (!!results.execResult.exceptionError) return [3\n            /*break*/\n            , 3];\n            Object.assign(this._result.selfdestruct, selfdestruct);\n            return [4\n            /*yield*/\n            , this._state.getAccount(this._env.address)];\n\n          case 2:\n            account = _a.sent();\n            this._env.contract = account;\n            _a.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            , this._getReturnCode(results)];\n        }\n      });\n    });\n  };\n  /**\n   * Creates a new contract with a given value.\n   */\n\n\n  EEI.prototype.create = function (gasLimit, value, data, salt) {\n    if (salt === void 0) {\n      salt = null;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var selfdestruct, msg, results, account;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            selfdestruct = __assign({}, this._result.selfdestruct);\n            msg = new message_1.default({\n              caller: this._env.address,\n              gasLimit: gasLimit,\n              value: value,\n              data: data,\n              salt: salt,\n              depth: this._env.depth + 1,\n              selfdestruct: selfdestruct\n            }); // empty the return data buffer\n\n            this._lastReturned = Buffer.alloc(0); // Check if account has enough ether and max depth not exceeded\n\n            if (this._env.depth >= this._common.param('vm', 'stackLimit') || msg.delegatecall !== true && new BN(this._env.contract.balance).lt(msg.value)) {\n              return [2\n              /*return*/\n              , new BN(0)];\n            }\n\n            this._env.contract.nonce = ethereumjs_util_1.toBuffer(new BN(this._env.contract.nonce).addn(1));\n            return [4\n            /*yield*/\n            , this._state.putAccount(this._env.address, this._env.contract)];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this._evm.executeMessage(msg)];\n\n          case 2:\n            results = _a.sent();\n\n            if (results.execResult.logs) {\n              this._result.logs = this._result.logs.concat(results.execResult.logs);\n            } // this should always be safe\n\n\n            this.useGas(results.gasUsed); // Set return buffer in case revert happened\n\n            if (results.execResult.exceptionError && results.execResult.exceptionError.error === exceptions_1.ERROR.REVERT) {\n              this._lastReturned = results.execResult.returnValue;\n            }\n\n            if (!!results.execResult.exceptionError) return [3\n            /*break*/\n            , 4];\n            Object.assign(this._result.selfdestruct, selfdestruct);\n            return [4\n            /*yield*/\n            , this._state.getAccount(this._env.address)];\n\n          case 3:\n            account = _a.sent();\n            this._env.contract = account;\n\n            if (results.createdAddress) {\n              // push the created address to the stack\n              return [2\n              /*return*/\n              , new BN(results.createdAddress)];\n            }\n\n            _a.label = 4;\n\n          case 4:\n            return [2\n            /*return*/\n            , this._getReturnCode(results)];\n        }\n      });\n    });\n  };\n  /**\n   * Creates a new contract with a given value. Generates\n   * a deterministic address via CREATE2 rules.\n   */\n\n\n  EEI.prototype.create2 = function (gasLimit, value, data, salt) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.create(gasLimit, value, data, salt)];\n      });\n    });\n  };\n  /**\n   * Returns true if account is empty (according to EIP-161).\n   * @param address - Address of account\n   */\n\n\n  EEI.prototype.isAccountEmpty = function (address) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this._state.accountIsEmpty(address)];\n      });\n    });\n  };\n\n  EEI.prototype._getReturnCode = function (results) {\n    // This preserves the previous logic, but seems to contradict the EEI spec\n    // https://github.com/ewasm/design/blob/38eeded28765f3e193e12881ea72a6ab807a3371/eth_interface.md\n    if (results.execResult.exceptionError) {\n      return new BN(0);\n    } else {\n      return new BN(1);\n    }\n  };\n\n  return EEI;\n}();\n\nexports.default = EEI;\n\nfunction trap(err) {\n  throw new exceptions_1.VmError(err);\n}\n\nvar MASK_160 = new BN(1).shln(160).subn(1);\n\nfunction addressToBuffer(address) {\n  if (Buffer.isBuffer(address)) return address;\n  return address.and(MASK_160).toArrayLike(Buffer, 'be', 20);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAKA;;AACA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,gBAAD,CAAzB;AAkCA;;;;;;;;;;AAQA;AAAA;AAAA;EASE,aAAYC,GAAZ,EAAsBC,KAAtB,EAA4CC,GAA5C,EAAsDC,MAAtD,EAAsEC,OAAtE,EAAiF;IAC/E,KAAKC,IAAL,GAAYL,GAAZ;IACA,KAAKM,MAAL,GAAcL,KAAd;IACA,KAAKM,IAAL,GAAYL,GAAZ;IACA,KAAKM,aAAL,GAAqBC,MAAM,CAACC,KAAP,CAAa,CAAb,CAArB;IACA,KAAKC,OAAL,GAAeR,MAAf;IACA,KAAKS,QAAL,GAAgBR,OAAhB;IACA,KAAKS,OAAL,GAAe;MACbC,IAAI,EAAE,EADO;MAEbC,WAAW,EAAEC,SAFA;MAGbC,YAAY,EAAE;IAHD,CAAf;EAKD;EAED;;;;;;;EAKAC,iCAAOC,MAAP,EAAiB;IACf,KAAKP,QAAL,CAAcQ,IAAd,CAAmBD,MAAnB;;IACA,IAAI,KAAKP,QAAL,CAAcS,GAAd,CAAkB,CAAlB,CAAJ,EAA0B;MACxB,KAAKT,QAAL,GAAgB,IAAIU,EAAJ,CAAO,CAAP,CAAhB;MACAC,IAAI,CAACC,mBAAMC,UAAP,CAAJ;IACD;EACF,CAND;EAQA;;;;;;EAIAP,oCAAUC,MAAV,EAAoB;IAClB,KAAKZ,IAAL,CAAUmB,OAAV,CAAkBC,IAAlB,CAAuBR,MAAvB;EACD,CAFD;EAIA;;;;;;EAIAD,oCAAUC,MAAV,EAAoB;IAClB,KAAKZ,IAAL,CAAUmB,OAAV,CAAkBN,IAAlB,CAAuBD,MAAvB;;IACA,IAAI,KAAKZ,IAAL,CAAUmB,OAAV,CAAkBL,GAAlB,CAAsB,CAAtB,CAAJ,EAA8B;MAC5B,KAAKd,IAAL,CAAUmB,OAAV,GAAoB,IAAIJ,EAAJ,CAAO,CAAP,CAApB;MACAC,IAAI,CAACC,mBAAMI,gBAAP,CAAJ;IACD;EACF,CAND;EAQA;;;;;EAGAV;IACE,OAAO,KAAKb,IAAL,CAAUwB,OAAjB;EACD,CAFD;EAIA;;;;;;EAIMX,mCAAN,UAAyBW,OAAzB,EAAwC;;;;;;YACtC;YACA,IAAIA,OAAO,CAACC,QAAR,CAAiB,KAAjB,MAA4B,KAAKzB,IAAL,CAAUwB,OAAV,CAAkBC,QAAlB,CAA2B,KAA3B,CAAhC,EAAmE;cACjE;cAAA;cAAA,EAAO,IAAIR,EAAJ,CAAO,KAAKjB,IAAL,CAAU0B,QAAV,CAAmBC,OAA1B,CAAP;YACD;;YAGe;YAAA;YAAA,EAAM,KAAK1B,MAAL,CAAY2B,UAAZ,CAAuBJ,OAAvB,CAAN;;;YAAVK,OAAO,GAAGC,SAAV;YACN;YAAA;YAAA,EAAO,IAAIb,EAAJ,CAAOY,OAAO,CAACF,OAAf,CAAP;;;;EACD,CATK;EAWN;;;;;EAGAd;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKjB,IAAL,CAAU0B,QAAV,CAAmBC,OAA1B,CAAP;EACD,CAFD;EAIA;;;;;;EAIAd;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKjB,IAAL,CAAU+B,MAAjB,CAAP;EACD,CAFD;EAIA;;;;;;EAIAlB;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKjB,IAAL,CAAUgC,SAAjB,CAAP;EACD,CAFD;EAIA;;;;;;EAIAnB;IACE,OAAO,KAAKb,IAAL,CAAUiC,QAAjB;EACD,CAFD;EAIA;;;;;;EAIApB;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKjB,IAAL,CAAUiC,QAAV,CAAmBC,MAA1B,CAAP;EACD,CAFD;EAIA;;;;;EAGArB;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKjB,IAAL,CAAUmC,IAAV,CAAeD,MAAtB,CAAP;EACD,CAFD;EAIA;;;;;EAGArB;IACE,OAAO,KAAKb,IAAL,CAAUmC,IAAjB;EACD,CAFD;EAIA;;;;;EAGAtB;IACE,OAAO,KAAKb,IAAL,CAAUoC,QAAjB;EACD,CAFD;EAIA;;;;;;EAIMvB,oCAAN,UAA0BW,OAA1B,EAAqC;;;;;;YAC7Ba,UAAU,GAAGC,eAAe,CAACd,OAAD,CAA5B;YACO;YAAA;YAAA,EAAM,KAAKvB,MAAL,CAAYsC,eAAZ,CAA4BF,UAA5B,CAAN;;;YAAPF,IAAI,GAAGL,SAAP;YACN;YAAA;YAAA,EAAO,IAAIb,EAAJ,CAAOkB,IAAI,CAACD,MAAZ,CAAP;;;;EACD,CAJK;EAMN;;;;;;EAIMrB,gCAAN,UAAsBW,OAAtB,EAA0C;;;QACxC,IAAI,CAACpB,MAAM,CAACoC,QAAP,CAAgBhB,OAAhB,CAAL,EAA+B;UAC7BA,OAAO,GAAGc,eAAe,CAACd,OAAD,CAAzB;QACD;;QACD;QAAA;QAAA,EAAO,KAAKvB,MAAL,CAAYsC,eAAZ,CAA4Bf,OAA5B,CAAP;;;EACD,CALK;EAON;;;;;;;EAKAX;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKd,aAAL,CAAmB+B,MAA1B,CAAP;EACD,CAFD;EAIA;;;;;;;EAKArB;IACE,OAAO,KAAKV,aAAZ;EACD,CAFD;EAIA;;;;;EAGAU;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKjB,IAAL,CAAUyC,QAAjB,CAAP;EACD,CAFD;EAIA;;;;;;;EAKA5B;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKjB,IAAL,CAAU0C,MAAjB,CAAP;EACD,CAFD;EAIA;;;;;EAGA7B;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKjB,IAAL,CAAU2C,KAAV,CAAgBC,MAAhB,CAAuBC,MAA9B,CAAP;EACD,CAFD;EAIA;;;;;EAGAhC;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKjB,IAAL,CAAU2C,KAAV,CAAgBC,MAAhB,CAAuBE,QAA9B,CAAP;EACD,CAFD;EAIA;;;;;EAGAjC;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKjB,IAAL,CAAU2C,KAAV,CAAgBC,MAAhB,CAAuBG,SAA9B,CAAP;EACD,CAFD;EAIA;;;;;EAGAlC;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKjB,IAAL,CAAU2C,KAAV,CAAgBC,MAAhB,CAAuBI,UAA9B,CAAP;EACD,CAFD;EAIA;;;;;EAGAnC;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKjB,IAAL,CAAU2C,KAAV,CAAgBC,MAAhB,CAAuBK,QAA9B,CAAP;EACD,CAFD;EAIA;;;;;;EAIApC;IACE,OAAO,IAAII,EAAJ,CAAO,KAAKX,OAAL,CAAa4C,OAAb,EAAP,CAAP;EACD,CAFD;EAIA;;;;;;EAIMrC,6BAAN,UAAmBsC,GAAnB,EAA0B;;;;;;YACV;YAAA;YAAA,EAAM1D,SAAS,CAAC,KAAKO,IAAL,CAAUoD,UAAV,CAAqBC,QAAtB,CAAT,CAAyCC,IAAzC,CAA8C,KAAKtD,IAAL,CAAUoD,UAAxD,EAAoED,GAApE,CAAN;;;YAARR,KAAK,GAAGb,SAAR;YACN;YAAA;YAAA,EAAO,IAAIb,EAAJ,CAAO0B,KAAK,CAACY,IAAN,EAAP,CAAP;;;;EACD,CAHK;EAKN;;;;;EAGM1C,6BAAN,UAAmB2C,GAAnB,EAAgCC,KAAhC,EAA6C;;;;;;YAC3C;YAAA;YAAA,EAAM,KAAKxD,MAAL,CAAYyD,kBAAZ,CAA+B,KAAK1D,IAAL,CAAUwB,OAAzC,EAAkDgC,GAAlD,EAAuDC,KAAvD,CAAN;;;YAAA3B;;YACgB;YAAA;YAAA,EAAM,KAAK7B,MAAL,CAAY2B,UAAZ,CAAuB,KAAK5B,IAAL,CAAUwB,OAAjC,CAAN;;;YAAVK,OAAO,GAAGC,SAAV;YACN,KAAK9B,IAAL,CAAU0B,QAAV,GAAqBG,OAArB;;;;;;;EACD,CAJK;EAMN;;;;;;EAIMhB,4BAAN,UAAkB2C,GAAlB,EAA6B;;;QAC3B;QAAA;QAAA,EAAO,KAAKvD,MAAL,CAAY0D,kBAAZ,CAA+B,KAAK3D,IAAL,CAAUwB,OAAzC,EAAkDgC,GAAlD,CAAP;;;EACD,CAFK;EAIN;;;;;EAGA3C;IACE,OAAO,KAAKN,QAAL,CAAcqD,KAAd,EAAP;EACD,CAFD;EAIA;;;;;;EAIA/C,iCAAOgD,UAAP,EAAyB;IACvB,KAAKrD,OAAL,CAAaE,WAAb,GAA2BmD,UAA3B;IACA3C,IAAI,CAACC,mBAAM2C,IAAP,CAAJ;EACD,CAHD;EAKA;;;;;;;EAKAjD,iCAAOgD,UAAP,EAAyB;IACvB,KAAKrD,OAAL,CAAaE,WAAb,GAA2BmD,UAA3B;IACA3C,IAAI,CAACC,mBAAM4C,MAAP,CAAJ;EACD,CAHD;EAKA;;;;;;;;EAMMlD,6BAAN,UAAmBmD,SAAnB,EAAoC;;;QAClC;QAAA;QAAA,EAAO,KAAKC,aAAL,CAAmBD,SAAnB,CAAP;;;EACD,CAFK;;EAIAnD,8BAAN,UAAoBmD,SAApB,EAAqC;;;;;;YACnC;YACA,IAAI,CAAC,KAAKxD,OAAL,CAAaI,YAAb,CAA0B,KAAKZ,IAAL,CAAUwB,OAAV,CAAkBC,QAAlB,CAA2B,KAA3B,CAA1B,CAAL,EAAmE;cACjE,KAAKyC,SAAL,CAAe,IAAIjD,EAAJ,CAAO,KAAKX,OAAL,CAAa6D,KAAb,CAAmB,WAAnB,EAAgC,oBAAhC,CAAP,CAAf;YACD;;YAED,KAAK3D,OAAL,CAAaI,YAAb,CAA0B,KAAKZ,IAAL,CAAUwB,OAAV,CAAkBC,QAAlB,CAA2B,KAA3B,CAA1B,IAA+DuC,SAA/D;YAGkB;YAAA;YAAA,EAAM,KAAK/D,MAAL,CAAY2B,UAAZ,CAAuBoC,SAAvB,CAAN;;;YAAZI,SAAS,GAAGtC,SAAZ;YACAuC,UAAU,GAAG,IAAIpD,EAAJ,CAAO,KAAKjB,IAAL,CAAU0B,QAAV,CAAmBC,OAA1B,EAAmC2C,GAAnC,CAAuC,IAAIrD,EAAJ,CAAOmD,SAAS,CAACzC,OAAjB,CAAvC,CAAb;YACNyC,SAAS,CAACzC,OAAV,GAAoB4C,2BAASF,UAAT,CAApB;YACA;YAAA;YAAA,EAAM,KAAKpE,MAAL,CAAYuE,UAAZ,CAAuBR,SAAvB,EAAkCI,SAAlC,CAAN,CAEA;YAFA;;;YAAAtC;;YAGgB;YAAA;YAAA,EAAM,KAAK7B,MAAL,CAAY2B,UAAZ,CAAuB,KAAK5B,IAAL,CAAUwB,OAAjC,CAAN;;;YAAVK,OAAO,GAAGC,SAAV;YACND,OAAO,CAACF,OAAR,GAAkB4C,2BAAS,IAAItD,EAAJ,CAAO,CAAP,CAAT,CAAlB;YACA;YAAA;YAAA,EAAM,KAAKhB,MAAL,CAAYuE,UAAZ,CAAuB,KAAKxE,IAAL,CAAUwB,OAAjC,EAA0CK,OAA1C,CAAN;;;YAAAC;;YAEAZ,IAAI,CAACC,mBAAM2C,IAAP,CAAJ;;;;;;;EACD,CApBK;EAsBN;;;;;EAGAjD,8BAAI4D,IAAJ,EAAkBC,cAAlB,EAA0CC,MAA1C,EAA0D;IACxD,IAAID,cAAc,GAAG,CAAjB,IAAsBA,cAAc,GAAG,CAA3C,EAA8C;MAC5CxD,IAAI,CAACC,mBAAMyD,YAAP,CAAJ;IACD;;IAED,IAAID,MAAM,CAACzC,MAAP,KAAkBwC,cAAtB,EAAsC;MACpCxD,IAAI,CAACC,mBAAM0D,cAAP,CAAJ;IACD,CAPuD,CASxD;;;IACA,IAAMC,GAAG,GAAQ,CAAC,KAAK9E,IAAL,CAAUwB,OAAX,CAAjB;IACAsD,GAAG,CAACC,IAAJ,CAASJ,MAAT,EAXwD,CAaxD;;IACAG,GAAG,CAACC,IAAJ,CAASN,IAAT;;IACA,KAAKjE,OAAL,CAAaC,IAAb,CAAkBsE,IAAlB,CAAuBD,GAAvB;EACD,CAhBD;EAkBA;;;;;EAGMjE,qBAAN,UAAWoC,QAAX,EAAyBzB,OAAzB,EAA0CiC,KAA1C,EAAqDgB,IAArD,EAAiE;;;;QACzDO,GAAG,GAAG,IAAIC,iBAAJ,CAAY;UACtBlD,MAAM,EAAE,KAAK/B,IAAL,CAAUwB,OADI;UAEtByB,QAAQ,EAAEA,QAFY;UAGtBiC,EAAE,EAAE1D,OAHkB;UAItBiC,KAAK,EAAEA,KAJe;UAKtBgB,IAAI,EAAEA,IALgB;UAMtBrC,QAAQ,EAAE,KAAKpC,IAAL,CAAUoC,QANE;UAOtB+C,KAAK,EAAE,KAAKnF,IAAL,CAAUmF,KAAV,GAAkB;QAPH,CAAZ,CAAN;QAUN;QAAA;QAAA,EAAO,KAAKC,SAAL,CAAeJ,GAAf,CAAP;;;EACD,CAZK;EAcN;;;;;EAGMnE,yBAAN,UAAeoC,QAAf,EAA6BzB,OAA7B,EAA8CiC,KAA9C,EAAyDgB,IAAzD,EAAqE;;;;QAC7DO,GAAG,GAAG,IAAIC,iBAAJ,CAAY;UACtBlD,MAAM,EAAE,KAAK/B,IAAL,CAAUwB,OADI;UAEtByB,QAAQ,EAAEA,QAFY;UAGtBiC,EAAE,EAAE,KAAKlF,IAAL,CAAUwB,OAHQ;UAItB6D,WAAW,EAAE7D,OAJS;UAKtBiC,KAAK,EAAEA,KALe;UAMtBgB,IAAI,EAAEA,IANgB;UAOtBrC,QAAQ,EAAE,KAAKpC,IAAL,CAAUoC,QAPE;UAQtB+C,KAAK,EAAE,KAAKnF,IAAL,CAAUmF,KAAV,GAAkB;QARH,CAAZ,CAAN;QAWN;QAAA;QAAA,EAAO,KAAKC,SAAL,CAAeJ,GAAf,CAAP;;;EACD,CAbK;EAeN;;;;;;;EAKMnE,2BAAN,UAAiBoC,QAAjB,EAA+BzB,OAA/B,EAAgDiC,KAAhD,EAA2DgB,IAA3D,EAAuE;;;;QAC/DO,GAAG,GAAG,IAAIC,iBAAJ,CAAY;UACtBlD,MAAM,EAAE,KAAK/B,IAAL,CAAUwB,OADI;UAEtByB,QAAQ,EAAEA,QAFY;UAGtBiC,EAAE,EAAE1D,OAHkB;UAItBiC,KAAK,EAAEA,KAJe;UAKtBgB,IAAI,EAAEA,IALgB;UAMtBrC,QAAQ,EAAE,IANY;UAOtB+C,KAAK,EAAE,KAAKnF,IAAL,CAAUmF,KAAV,GAAkB;QAPH,CAAZ,CAAN;QAUN;QAAA;QAAA,EAAO,KAAKC,SAAL,CAAeJ,GAAf,CAAP;;;EACD,CAZK;EAcN;;;;;;EAIMnE,6BAAN,UAAmBoC,QAAnB,EAAiCzB,OAAjC,EAAkDiC,KAAlD,EAA6DgB,IAA7D,EAAyE;;;;QACjEO,GAAG,GAAG,IAAIC,iBAAJ,CAAY;UACtBlD,MAAM,EAAE,KAAK/B,IAAL,CAAU+B,MADI;UAEtBkB,QAAQ,EAAEA,QAFY;UAGtBiC,EAAE,EAAE,KAAKlF,IAAL,CAAUwB,OAHQ;UAItB6D,WAAW,EAAE7D,OAJS;UAKtBiC,KAAK,EAAEA,KALe;UAMtBgB,IAAI,EAAEA,IANgB;UAOtBrC,QAAQ,EAAE,KAAKpC,IAAL,CAAUoC,QAPE;UAQtBkD,YAAY,EAAE,IARQ;UAStBH,KAAK,EAAE,KAAKnF,IAAL,CAAUmF,KAAV,GAAkB;QATH,CAAZ,CAAN;QAYN;QAAA;QAAA,EAAO,KAAKC,SAAL,CAAeJ,GAAf,CAAP;;;EACD,CAdK;;EAgBAnE,0BAAN,UAAgBmE,GAAhB,EAA4B;;;;;;YACpBpE,YAAY,gBAAQ,KAAKJ,OAAL,CAAaI,YAArB,CAAZ;YACNoE,GAAG,CAACpE,YAAJ,GAAmBA,YAAnB,EAEA;;YACA,KAAKT,aAAL,GAAqBC,MAAM,CAACC,KAAP,CAAa,CAAb,CAArB,EAEA;;YACA,IACE,KAAKL,IAAL,CAAUmF,KAAV,IAAmB,KAAK7E,OAAL,CAAa6D,KAAb,CAAmB,IAAnB,EAAyB,YAAzB,CAAnB,IACCa,GAAG,CAACM,YAAJ,KAAqB,IAArB,IAA6B,IAAIrE,EAAJ,CAAO,KAAKjB,IAAL,CAAU0B,QAAV,CAAmBC,OAA1B,EAAmC4D,EAAnC,CAAsCP,GAAG,CAACvB,KAA1C,CAFhC,EAGE;cACA;cAAA;cAAA,EAAO,IAAIxC,EAAJ,CAAO,CAAP,CAAP;YACD;;YAEe;YAAA;YAAA,EAAM,KAAKf,IAAL,CAAUsF,cAAV,CAAyBR,GAAzB,CAAN;;;YAAVS,OAAO,GAAG3D,SAAV;;YAEN,IAAI2D,OAAO,CAACC,UAAR,CAAmBjF,IAAvB,EAA6B;cAC3B,KAAKD,OAAL,CAAaC,IAAb,GAAoB,KAAKD,OAAL,CAAaC,IAAb,CAAkBkF,MAAlB,CAAyBF,OAAO,CAACC,UAAR,CAAmBjF,IAA5C,CAApB;YACD,EAED;;;YACA,KAAKmF,MAAL,CAAYH,OAAO,CAACI,OAApB,GAEA;;YACA,IACEJ,OAAO,CAACC,UAAR,CAAmBhF,WAAnB,KACC,CAAC+E,OAAO,CAACC,UAAR,CAAmBI,cAApB,IACCL,OAAO,CAACC,UAAR,CAAmBI,cAAnB,CAAkCC,KAAlC,KAA4C5E,mBAAM4C,MAFpD,CADF,EAIE;cACA,KAAK5D,aAAL,GAAqBsF,OAAO,CAACC,UAAR,CAAmBhF,WAAxC;YACD;;iBAEG,CAAC+E,OAAO,CAACC,UAAR,CAAmBI,gBAApB;YAAA;YAAA;YACFE,MAAM,CAACC,MAAP,CAAc,KAAKzF,OAAL,CAAaI,YAA3B,EAAyCA,YAAzC;YAEgB;YAAA;YAAA,EAAM,KAAKX,MAAL,CAAY2B,UAAZ,CAAuB,KAAK5B,IAAL,CAAUwB,OAAjC,CAAN;;;YAAVK,OAAO,GAAGC,SAAV;YACN,KAAK9B,IAAL,CAAU0B,QAAV,GAAqBG,OAArB;;;;YAGF;YAAA;YAAA,EAAO,KAAKqE,cAAL,CAAoBT,OAApB,CAAP;;;;EACD,CAzCK;EA2CN;;;;;EAGM5E,uBAAN,UAAaoC,QAAb,EAA2BQ,KAA3B,EAAsCgB,IAAtC,EAAoD0B,IAApD,EAA8E;IAA1B;MAAAA;IAA0B;;;;;;;YACtEvF,YAAY,gBAAQ,KAAKJ,OAAL,CAAaI,YAArB,CAAZ;YACAoE,GAAG,GAAG,IAAIC,iBAAJ,CAAY;cACtBlD,MAAM,EAAE,KAAK/B,IAAL,CAAUwB,OADI;cAEtByB,QAAQ,EAAEA,QAFY;cAGtBQ,KAAK,EAAEA,KAHe;cAItBgB,IAAI,EAAEA,IAJgB;cAKtB0B,IAAI,EAAEA,IALgB;cAMtBhB,KAAK,EAAE,KAAKnF,IAAL,CAAUmF,KAAV,GAAkB,CANH;cAOtBvE,YAAY,EAAEA;YAPQ,CAAZ,CAAN,EAUN;;YACA,KAAKT,aAAL,GAAqBC,MAAM,CAACC,KAAP,CAAa,CAAb,CAArB,EAEA;;YACA,IACE,KAAKL,IAAL,CAAUmF,KAAV,IAAmB,KAAK7E,OAAL,CAAa6D,KAAb,CAAmB,IAAnB,EAAyB,YAAzB,CAAnB,IACCa,GAAG,CAACM,YAAJ,KAAqB,IAArB,IAA6B,IAAIrE,EAAJ,CAAO,KAAKjB,IAAL,CAAU0B,QAAV,CAAmBC,OAA1B,EAAmC4D,EAAnC,CAAsCP,GAAG,CAACvB,KAA1C,CAFhC,EAGE;cACA;cAAA;cAAA,EAAO,IAAIxC,EAAJ,CAAO,CAAP,CAAP;YACD;;YAED,KAAKjB,IAAL,CAAU0B,QAAV,CAAmB0E,KAAnB,GAA2B7B,2BAAS,IAAItD,EAAJ,CAAO,KAAKjB,IAAL,CAAU0B,QAAV,CAAmB0E,KAA1B,EAAiCC,IAAjC,CAAsC,CAAtC,CAAT,CAA3B;YACA;YAAA;YAAA,EAAM,KAAKpG,MAAL,CAAYuE,UAAZ,CAAuB,KAAKxE,IAAL,CAAUwB,OAAjC,EAA0C,KAAKxB,IAAL,CAAU0B,QAApD,CAAN;;;YAAAI;;YAEgB;YAAA;YAAA,EAAM,KAAK5B,IAAL,CAAUsF,cAAV,CAAyBR,GAAzB,CAAN;;;YAAVS,OAAO,GAAG3D,SAAV;;YAEN,IAAI2D,OAAO,CAACC,UAAR,CAAmBjF,IAAvB,EAA6B;cAC3B,KAAKD,OAAL,CAAaC,IAAb,GAAoB,KAAKD,OAAL,CAAaC,IAAb,CAAkBkF,MAAlB,CAAyBF,OAAO,CAACC,UAAR,CAAmBjF,IAA5C,CAApB;YACD,EAED;;;YACA,KAAKmF,MAAL,CAAYH,OAAO,CAACI,OAApB,GAEA;;YACA,IACEJ,OAAO,CAACC,UAAR,CAAmBI,cAAnB,IACAL,OAAO,CAACC,UAAR,CAAmBI,cAAnB,CAAkCC,KAAlC,KAA4C5E,mBAAM4C,MAFpD,EAGE;cACA,KAAK5D,aAAL,GAAqBsF,OAAO,CAACC,UAAR,CAAmBhF,WAAxC;YACD;;iBAEG,CAAC+E,OAAO,CAACC,UAAR,CAAmBI,gBAApB;YAAA;YAAA;YACFE,MAAM,CAACC,MAAP,CAAc,KAAKzF,OAAL,CAAaI,YAA3B,EAAyCA,YAAzC;YAEgB;YAAA;YAAA,EAAM,KAAKX,MAAL,CAAY2B,UAAZ,CAAuB,KAAK5B,IAAL,CAAUwB,OAAjC,CAAN;;;YAAVK,OAAO,GAAGC,SAAV;YACN,KAAK9B,IAAL,CAAU0B,QAAV,GAAqBG,OAArB;;YACA,IAAI4D,OAAO,CAACa,cAAZ,EAA4B;cAC1B;cACA;cAAA;cAAA,EAAO,IAAIrF,EAAJ,CAAOwE,OAAO,CAACa,cAAf,CAAP;YACD;;;;;YAGH;YAAA;YAAA,EAAO,KAAKJ,cAAL,CAAoBT,OAApB,CAAP;;;;EACD,CAvDK;EAyDN;;;;;;EAIM5E,wBAAN,UAAcoC,QAAd,EAA4BQ,KAA5B,EAAuCgB,IAAvC,EAAqD0B,IAArD,EAAiE;;;QAC/D;QAAA;QAAA,EAAO,KAAKI,MAAL,CAAYtD,QAAZ,EAAsBQ,KAAtB,EAA6BgB,IAA7B,EAAmC0B,IAAnC,CAAP;;;EACD,CAFK;EAIN;;;;;;EAIMtF,+BAAN,UAAqBW,OAArB,EAAoC;;;QAClC;QAAA;QAAA,EAAO,KAAKvB,MAAL,CAAYuG,cAAZ,CAA2BhF,OAA3B,CAAP;;;EACD,CAFK;;EAIEX,+BAAR,UAAuB4E,OAAvB,EAAyC;IACvC;IACA;IACA,IAAIA,OAAO,CAACC,UAAR,CAAmBI,cAAvB,EAAuC;MACrC,OAAO,IAAI7E,EAAJ,CAAO,CAAP,CAAP;IACD,CAFD,MAEO;MACL,OAAO,IAAIA,EAAJ,CAAO,CAAP,CAAP;IACD;EACF,CARO;;EASV;AAAC,CA/hBD;;;;AAiiBA,SAASC,IAAT,CAAcuF,GAAd,EAAwB;EACtB,MAAM,IAAItF,oBAAJ,CAAYsF,GAAZ,CAAN;AACD;;AAED,IAAMC,QAAQ,GAAG,IAAIzF,EAAJ,CAAO,CAAP,EAAU0F,IAAV,CAAe,GAAf,EAAoBC,IAApB,CAAyB,CAAzB,CAAjB;;AACA,SAAStE,eAAT,CAAyBd,OAAzB,EAAoC;EAClC,IAAIpB,MAAM,CAACoC,QAAP,CAAgBhB,OAAhB,CAAJ,EAA8B,OAAOA,OAAP;EAC9B,OAAOA,OAAO,CAACqF,GAAR,CAAYH,QAAZ,EAAsBI,WAAtB,CAAkC1G,MAAlC,EAA0C,IAA1C,EAAgD,EAAhD,CAAP;AACD","names":["promisify","require","env","state","evm","common","gasLeft","_env","_state","_evm","_lastReturned","Buffer","alloc","_common","_gasLeft","_result","logs","returnValue","undefined","selfdestruct","EEI","amount","isub","ltn","BN","trap","exceptions_1","OUT_OF_GAS","_refund","iadd","REFUND_EXHAUSTED","address","toString","contract","balance","getAccount","account","_a","caller","callValue","callData","length","code","isStatic","addressBuf","addressToBuffer","getContractCode","isBuffer","gasPrice","origin","block","header","number","coinbase","timestamp","difficulty","gasLimit","chainId","num","blockchain","getBlock","bind","hash","key","value","putContractStorage","getContractStorage","clone","returnData","STOP","REVERT","toAddress","_selfDestruct","refundGas","param","toAccount","newBalance","add","ethereumjs_util_1","putAccount","data","numberOfTopics","topics","OUT_OF_RANGE","INTERNAL_ERROR","log","push","msg","message_1","to","depth","_baseCall","codeAddress","delegatecall","lt","executeMessage","results","execResult","concat","useGas","gasUsed","exceptionError","error","Object","assign","_getReturnCode","salt","nonce","addn","createdAddress","create","accountIsEmpty","err","MASK_160","shln","subn","and","toArrayLike"],"sources":["../../lib/evm/eei.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}