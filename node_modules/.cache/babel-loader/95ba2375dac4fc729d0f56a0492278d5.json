{"ast":null,"code":"module.exports = {\n  // Mimics crypto.random bytes, but takes in a random number generator\n  // as its second parameter. rng is expected to be a function that takes\n  // no parameters and returns a result like Math.random().\n  // This is important because it allows for a seeded random number generator.\n  // Since this is a mock RPC library, the rng doesn't need to be cryptographically secure.\n  randomBytes: function (length, rng) {\n    var buf = [];\n\n    for (var i = 0; i < length; i++) {\n      buf.push(rng() * 255);\n    }\n\n    return Buffer.from(buf);\n  },\n  randomAlphaNumericString: function (length, rng) {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let text = \"\";\n\n    for (var i = 0; i < length; i++) {\n      text += alphabet.charAt(Math.floor((rng || Math.random)() * alphabet.length));\n    }\n\n    return text;\n  }\n};","map":{"version":3,"names":["module","exports","randomBytes","length","rng","buf","i","push","Buffer","from","randomAlphaNumericString","alphabet","text","charAt","Math","floor","random"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/lib/utils/random.js"],"sourcesContent":["module.exports = {\n  // Mimics crypto.random bytes, but takes in a random number generator\n  // as its second parameter. rng is expected to be a function that takes\n  // no parameters and returns a result like Math.random().\n  // This is important because it allows for a seeded random number generator.\n  // Since this is a mock RPC library, the rng doesn't need to be cryptographically secure.\n  randomBytes: function(length, rng) {\n    var buf = [];\n\n    for (var i = 0; i < length; i++) {\n      buf.push(rng() * 255);\n    }\n\n    return Buffer.from(buf);\n  },\n\n  randomAlphaNumericString: function(length, rng) {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    let text = \"\";\n\n    for (var i = 0; i < length; i++) {\n      text += alphabet.charAt(Math.floor((rng || Math.random)() * alphabet.length));\n    }\n\n    return text;\n  }\n};\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB;EACf;EACA;EACA;EACA;EACA;EACAC,WAAW,EAAE,UAASC,MAAT,EAAiBC,GAAjB,EAAsB;IACjC,IAAIC,GAAG,GAAG,EAAV;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;MAC/BD,GAAG,CAACE,IAAJ,CAASH,GAAG,KAAK,GAAjB;IACD;;IAED,OAAOI,MAAM,CAACC,IAAP,CAAYJ,GAAZ,CAAP;EACD,CAdc;EAgBfK,wBAAwB,EAAE,UAASP,MAAT,EAAiBC,GAAjB,EAAsB;IAC9C,MAAMO,QAAQ,GAAG,gEAAjB;IAEA,IAAIC,IAAI,GAAG,EAAX;;IAEA,KAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;MAC/BM,IAAI,IAAID,QAAQ,CAACE,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAW,CAACX,GAAG,IAAIU,IAAI,CAACE,MAAb,MAAyBL,QAAQ,CAACR,MAA7C,CAAhB,CAAR;IACD;;IAED,OAAOS,IAAP;EACD;AA1Bc,CAAjB"},"metadata":{},"sourceType":"script"}