{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.unpadHexString = exports.unpadArray = exports.unpadBuffer = exports.setLengthRight = exports.setLengthLeft = exports.zeros = void 0;\n\nvar BN = require(\"bn.js\");\n\nvar ethjs_util_1 = require(\"ethjs-util\");\n\nvar helpers_1 = require(\"./helpers\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\n\n\nexports.zeros = function (bytes) {\n  return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\n\n\nexports.setLengthLeft = function (msg, length) {\n  helpers_1.assertIsBuffer(msg);\n  return setLength(msg, length, false);\n};\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\n\n\nexports.setLengthRight = function (msg, length) {\n  helpers_1.assertIsBuffer(msg);\n  return setLength(msg, length, true);\n};\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\n\n\nvar setLength = function (msg, length, right) {\n  var buf = exports.zeros(length);\n\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n\n    return msg.slice(-length);\n  }\n};\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\n\n\nexports.unpadBuffer = function (a) {\n  helpers_1.assertIsBuffer(a);\n  return stripZeros(a);\n};\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\n\n\nexports.unpadArray = function (a) {\n  helpers_1.assertIsArray(a);\n  return stripZeros(a);\n};\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\n\n\nexports.unpadHexString = function (a) {\n  helpers_1.assertIsHexString(a);\n  a = ethjs_util_1.stripHexPrefix(a);\n  return stripZeros(a);\n};\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\n\n\nvar stripZeros = function (a) {\n  var first = a[0];\n\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n\n  return a;\n};\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\n\n\nexports.toBuffer = function (v) {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0);\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v);\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v);\n  }\n\n  if (typeof v === 'string') {\n    if (!ethjs_util_1.isHexString(v)) {\n      throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n    }\n\n    return Buffer.from(ethjs_util_1.padToEven(ethjs_util_1.stripHexPrefix(v)), 'hex');\n  }\n\n  if (typeof v === 'number') {\n    return ethjs_util_1.intToBuffer(v);\n  }\n\n  if (BN.isBN(v)) {\n    return v.toArrayLike(Buffer);\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray());\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer());\n  }\n\n  throw new Error('invalid type');\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\n\n\nexports.bufferToInt = function (buf) {\n  return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\n\n\nexports.bufferToHex = function (buf) {\n  buf = exports.toBuffer(buf);\n  return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\n\n\nexports.fromSigned = function (num) {\n  return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\n\n\nexports.toUnsigned = function (num) {\n  return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\n\n\nexports.addHexPrefix = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return ethjs_util_1.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\n\n\nexports.baToJSON = function (ba) {\n  if (Buffer.isBuffer(ba)) {\n    return \"0x\" + ba.toString('hex');\n  } else if (ba instanceof Array) {\n    var array = [];\n\n    for (var i = 0; i < ba.length; i++) {\n      array.push(exports.baToJSON(ba[i]));\n    }\n\n    return array;\n  }\n};","map":{"version":3,"mappings":"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","names":["exports","bytes","Buffer","allocUnsafe","fill","msg","length","helpers_1","setLength","right","buf","copy","slice","a","stripZeros","ethjs_util_1","first","toString","v","undefined","isBuffer","from","Array","isArray","Uint8Array","Error","BN","isBN","toArrayLike","toArray","toBuffer","toNumber","num","fromTwos","toTwos","str","ba","array","i","push"],"sources":["../src/bytes.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}