{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\Mint.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport '../assets/css/App.css';\nimport { ethers } from \"ethers\";\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/abi.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Mint = props => {\n  _s();\n\n  const [mintAmount, setMintAmount] = useState(1);\n  const [leftToMint, setLeftToMint] = useState(0);\n  const [contract, setContract] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n\n  const initConnection = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = provider.getSigner();\n      setAccount(accounts[0]);\n      setContract(new ethers.Contract(\"0xEE8E55e5BE8fAB0aa31D23eeb0F976baB4C2E557\", PFPRacerNFT.abi, newSigner));\n    } else {\n      console.log(\"Please install metamask\");\n    }\n  };\n\n  const howManyNFTsAreLeft = async () => {\n    let totalNFT = await contract.maxSupply();\n    let mintedNFT = await contract.getNFTBalance(); //to be changed into getNFTBalance\n\n    console.log(\"My totalNFT's in howManyNFTsAreLeft is : \" + totalNFT);\n    console.log(\"My total mintedNFT is\" + mintedNFT);\n    let nftLeftToMint = totalNFT - mintedNFT;\n    setLeftToMint(nftLeftToMint);\n    console.log(\"Total NFT's left to mint \" + nftLeftToMint);\n  };\n\n  useEffect(() => {\n    setAccount(props.account);\n    setContract(props.contract);\n    console.log(\"My useEffect account is: \" + props.account);\n    console.log(\"My useEffect contract is: \" + props.contract); //initConnection();\n\n    howManyNFTsAreLeft();\n  }, [account]);\n\n  const handleSubmit = async () => {\n    console.log(\"We are in handleSubmit\" + mintAmount); //mintAmount.preventDefault();\n\n    let nftTx = await contract.mint(mintAmount, {\n      gasPrice: 33e9\n    });\n    let tx = nftTx.wait(); //await contract.withdrawal(mintAmount, \"dbabe1135898ac301cfb00e6ce2122515ccae2390fc4c304eef3523a8f69843b\");\n    // howManyNFTsAreLeft();\n\n    alert(`We have minted ${mintAmount}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit(),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-mint\",\n        children: [\"NFT's left to mint:\", /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"p-welcomeMint\",\n          children: leftToMint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 14\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: [\"Mint Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: mintAmount,\n          onChange: e => setMintAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"form-submit-button\",\n        type: \"submit\",\n        value: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Mint, \"I6r+Ya6xcryxrtO+8R6QOPj6rdM=\");\n\n_c = Mint;\nexport default Mint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mint\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ethers","PFPRacerNFT","Mint","props","mintAmount","setMintAmount","leftToMint","setLeftToMint","contract","setContract","account","setAccount","initConnection","window","ethereum","accounts","request","method","provider","providers","Web3Provider","newSigner","getSigner","Contract","abi","console","log","howManyNFTsAreLeft","totalNFT","maxSupply","mintedNFT","getNFTBalance","nftLeftToMint","handleSubmit","nftTx","mint","gasPrice","tx","wait","alert","e","target","value"],"sources":["F:/Games/slotmachinereact/src/components/Mint.js"],"sourcesContent":["import  React, { useEffect, useState, useRef } from \"react\";\r\nimport '../assets/css/App.css';\r\nimport {ethers} from \"ethers\";\r\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/abi.json';\r\n\r\nconst Mint = (props) =>{\r\n    const [mintAmount, setMintAmount] = useState(1);\r\n    const [leftToMint, setLeftToMint] = useState(0);\r\n    const [contract, setContract] = useState(\"\");\r\n    const [account, setAccount] = useState(\"\");\r\n    \r\n\r\n    const initConnection = async () =>{\r\n        if(typeof window.ethereum !== \"undefined\"){\r\n          const accounts = await window.ethereum.request({\r\n            method: \"eth_requestAccounts\",\r\n          });\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const newSigner = provider.getSigner();\r\n          setAccount(accounts[0]);\r\n          setContract(\r\n            new ethers.Contract(\r\n              \"0xEE8E55e5BE8fAB0aa31D23eeb0F976baB4C2E557\",\r\n              PFPRacerNFT.abi,\r\n              newSigner\r\n            )\r\n          )\r\n        }else{\r\n          console.log(\"Please install metamask\");\r\n        }\r\n      }\r\n\r\n    const howManyNFTsAreLeft = async () =>{\r\n        let totalNFT = await contract.maxSupply();\r\n        let mintedNFT= await contract.getNFTBalance(); //to be changed into getNFTBalance\r\n        console.log(\"My totalNFT's in howManyNFTsAreLeft is : \"+totalNFT);\r\n        console.log(\"My total mintedNFT is\"+mintedNFT);\r\n        let nftLeftToMint = totalNFT - mintedNFT;\r\n        setLeftToMint(nftLeftToMint);\r\n        console.log(\"Total NFT's left to mint \"+nftLeftToMint);\r\n      }\r\n\r\n    useEffect(()=>{\r\n        setAccount(props.account);\r\n        setContract(props.contract);\r\n\r\n        console.log(\"My useEffect account is: \"+props.account);\r\n        console.log(\"My useEffect contract is: \"+props.contract);\r\n        //initConnection();\r\n        howManyNFTsAreLeft();\r\n      },[account]);\r\n\r\n\r\nconst handleSubmit= async() =>{\r\n    console.log(\"We are in handleSubmit\"+mintAmount);\r\n    //mintAmount.preventDefault();\r\n\r\n    let nftTx = await contract.mint(mintAmount,{ gasPrice: 33e9 });\r\n    let tx = nftTx.wait();\r\n   //await contract.withdrawal(mintAmount, \"dbabe1135898ac301cfb00e6ce2122515ccae2390fc4c304eef3523a8f69843b\");\r\n    // howManyNFTsAreLeft();\r\n    alert(`We have minted ${mintAmount}`)\r\n    \r\n}\r\n      return (\r\n        <>\r\n        <form className=\"form\" onSubmit={handleSubmit()}>\r\n        <label className=\"label-mint\"> \r\n             NFT's left to mint:\r\n             <p class=\"p-welcomeMint\">{leftToMint}</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </label>\r\n          <label className=\"form-label\">\r\n            Mint Amount:\r\n            <input\r\n              type=\"text\"\r\n              value={mintAmount}\r\n              onChange={e => setMintAmount(e.target.value)}\r\n            />\r\n          </label>\r\n          <input class=\"form-submit-button\" type=\"submit\" value=\"Mint\" />\r\n        </form>\r\n        </>\r\n    \r\n      );\r\n}\r\n\r\n\r\n\r\nexport default Mint;"],"mappings":"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"},"metadata":{},"sourceType":"module"}