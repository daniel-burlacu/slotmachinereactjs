{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\ReelSet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Constants from \"../Constants\";\nimport Bet from \"./Bet\";\nimport Withdrawal from \"./Withdrawal\";\nimport \"../assets/css/App.css\";\nimport Reel from \"./Reel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReelSet = props => {\n  _s();\n\n  //  const [spinReel, setSpinReel] = useState(false)\n  //  const [gameOn, setGameOn] = useState(0);\n  let gameOn = props.game;\n  const [gameScore, setScore] = useState({\n    score: 2,\n    bet: 0\n  });\n  const [rolling, setRolling] = useState(false);\n  const scoreRef = useRef();\n  let score = 2;\n  let spinResults = [];\n  let results = [];\n  let bet = 0;\n  let scr = 0;\n  let winningLines = [];\n  let game = useRef(0);\n  let scoreGame = useRef();\n  let countWin = 0;\n  let symbolSellection = [];\n  let randomNr = 0; //  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPBBQQAAG\";\n\n  const symbols = \"DDDGNNSS\";\n\n  const handleScore = () => {\n    setScore({\n      score: gameScore.score + scr\n    });\n    console.log(\"My score is +\" + gameScore.score);\n  };\n\n  const createArray = randomNr => {\n    console.log(\"My random nr is\" + -(randomNr / 242));\n\n    for (let i = 0; i < 3; i++) {\n      console.log(\"My sign is on position: \" + (-(randomNr / 242) + i));\n      results.push(symbols[-(randomNr / 242) + i]);\n    }\n\n    console.log(\"Results array has been created\" + results);\n  };\n\n  const getRandomNr = () => {\n    if (gameOn > 0) {\n      randomNr = -(Math.floor(Math.random() * (symbols.length - 3)) * 242);\n      createArray(randomNr);\n    }\n\n    console.log(\"randomNr = \" + randomNr);\n    return randomNr;\n  };\n\n  const renderReels = () => {\n    let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(Reel, {\n        reel: el,\n        index: idx,\n        gameOn: getRandomNr()\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, this);\n    });\n    console.log(\"Render Reels have finish Running: \" + results);\n\n    if (gameOn > 0) {\n      createResults();\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: reelList\n    }, void 0, false);\n  };\n\n  const drawScore = (lineNumberType, fool) => {\n    let newScore = 0;\n\n    if (fool) {\n      lineNumberType = 18;\n    }\n\n    switch (lineNumberType) {\n      case 0:\n        // top line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 1:\n        // middle line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 2:\n        // bottom line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 3:\n        // V shape starting bottom left\n        //        audioWin.play();\n        newScore = 0.2;\n        break;\n\n      case 4:\n        // V shape starting bottom right\n        //        audioWin.play();\n        newScore = 0.2;\n        break;\n\n      case 5:\n        // W shape starting top left\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 6:\n        // M shape starting bottom left\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 7:\n        // M shape on top half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 8:\n        // W shape on top half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 9:\n        //W shape on bottom half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 10:\n        // M shape on bottom half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 11:\n        // U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 12:\n        // inverse U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 13:\n        // U shape on bottom half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 14:\n        // inverse U shape on bottom half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 15:\n        // inverse U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 16:\n        // Z shape from top left\n        //        audioWin.play();\n        newScore = 0.4;\n        break;\n\n      case 17:\n        // Z shape from bottom left\n        //        audioWin.play();\n        newScore = 0.4;\n        break;\n\n      case 18:\n        // Z shape from bottom left\n        //        audioWinBonus.play();\n        newScore = 100;\n        break;\n\n      default:\n        newScore = 0;\n    }\n\n    console.log(\"My score is:\" + newScore);\n\n    if (gameOn > 0) {\n      setMyScore(newScore);\n    }\n\n    return;\n  };\n\n  const createResults = () => {\n    let myResults = [];\n    let j = 0;\n\n    for (let i = 0; i <= results.length; i++) {\n      myResults[j] = results[i];\n      j++;\n\n      if (j === 3) {\n        spinResults.push(myResults);\n        myResults = [];\n        j = 0;\n      }\n    }\n\n    console.log(\"spinResults =  \" + spinResults);\n    checkWin(); // score=score+scr;\n\n    handleScore(); // setScore(scr);\n  };\n\n  const spinReel = () => {\n    gameOn = gameOn + 1;\n    console.log(\"My gameOn is\" + gameOn); //  checkWin();\n    //  game=1+gameOn;\n    // /  console.log(\"My spinReel game=\"+game);\n    // props.parrentCallBack(score);\n  };\n\n  const checkLinesElements = symbol => {\n    countWin++;\n    let symNr = 0;\n    let fool = 0;\n\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      fool = 0;\n      symNr = 0;\n\n      for (let j = 0; j < Constants.LINES[i].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n\n        if (symbol === spinResults[indexI][indexJ]) {\n          symNr++;\n        }\n      }\n\n      if (fool + symNr === 5 && fool < 4) {\n        winningLines.push(i);\n      }\n    }\n\n    winningLines = uniq(winningLines);\n  };\n\n  const uniq = a => {\n    return a.sort().filter(function (item, pos, ary) {\n      return !pos || item !== ary[pos - 1];\n    });\n  };\n\n  const checkElements = () => {\n    let fool = 0;\n\n    for (let k = 0; k < 3; k++) {\n      fool = 0;\n\n      for (let i = 0; i < spinResults.length; i++) {\n        let symb = \"\";\n\n        for (let j = k; j < spinResults[i].length; j++) {\n          if (spinResults[i][j] !== \"D\") {\n            symb = spinResults[i][j];\n            j = spinResults[i].length;\n          } else {\n            fool++;\n            j = spinResults[i].length;\n          }\n        }\n\n        if (fool < 4 && symb !== \"\") {\n          symbolSellection.push(symb);\n        }\n      }\n    }\n\n    for (let i = 0; i < symbolSellection.length; i++) {\n      checkLinesElements(symbolSellection[i]);\n    }\n  };\n\n  const setBetZero = () => {\n    bet = 0;\n  };\n\n  const setMyScore = e => {\n    //  let sc = 0;\n    if (bet > 0 && e > 0) {\n      console.log(\"Calculating 1:\" + scr + \"+(\" + bet + \"*\" + e + \")\");\n      scr = scr + (e + bet * e);\n      scr = Math.round(scr * 100) / 100;\n    } else if (bet > 0 && e === 0) {\n      scr = scr - (e + bet * e);\n      console.log(\"Calculating 2:\" + scr + \"-(\" + bet + \"*\" + e + \")\");\n      scr = Math.round(scr * 100) / 100;\n    } else if (bet === 0 && e > 0) {\n      console.log(\"Calculating 3: \" + scr + \" + \" + e);\n      scr = Math.round((scr + e) * 100) / 100;\n    }\n\n    console.log(\"your setMyScore scr=\" + scr);\n    score = Math.round((score + scr) * 100) / 100;\n    console.log(\"We are in setScore: \" + e + \" ,gameOn=\" + gameOn + \" ,score=\" + score); //  handleScore();\n    //  setScore(scr);\n  };\n\n  const checkFourFools = () => {\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      let fool = 0;\n\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n      }\n\n      if (fool === 4) {\n        winningLines.push(i);\n        drawScore(i, false);\n      }\n    }\n  };\n\n  const evaluateResults = () => {\n    checkFourFools();\n    checkElements(); //highLightWinningLines(0);\n\n    if (winningLines.length > 0) {\n      console.log(\"We have winning line !!!\");\n\n      for (let i = 0; i < winningLines.length; i++) {\n        drawScore(winningLines[i], false);\n      }\n    } else {\n      console.log(\"We have no winning lines !!!\");\n\n      if (scr - bet >= 0.2) {\n        scr = Math.round((scr - bet) * 100) / 100; //  setScore(scr);\n        //handleScore(scr);\n\n        console.log(\"your evaluateResults scr - bet >= 0.2 => scr=\" + scr);\n\n        if (scr < bet) {\n          setBetZero();\n        }\n      } else if (scr - bet === 0) {\n        setBetZero(); //  scr = 0;\n\n        console.log(\"your evaluateResults scr=bet === 0 = > scr=\" + scr); //  setScore(scr);\n        //handleScore(scr);\n      }\n    } //winningLines=[];\n\n  };\n\n  const checkFiveFools = () => {\n    let fl = false;\n    console.log(\"My spinResults are: \" + spinResults);\n\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      let fool = 0;\n\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n      }\n\n      console.log();\n\n      if (fool === 5) {\n        fl = true;\n        winningLines.push(i);\n        drawScore(i, true); //  highLightWinningLines(0);\n\n        break;\n      }\n    }\n\n    console.log(\"We have checked 5 fools, and returning: \" + fl);\n    return fl;\n  };\n\n  const checkWin = () => {\n    console.log(\"My checkWin is: \" + gameOn + \"My reels is:\" + gameOn);\n\n    if (gameOn > 0) {\n      let fool = checkFiveFools();\n\n      if (!fool) {\n        evaluateResults();\n      }\n    }\n\n    console.log(\"We are in checkWin: \" + gameOn + \"Final score is:\" + scr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"jackpot\",\n      children: [\"Jackpot: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reelSet\",\n          children: renderReels()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !rolling ? \"roll rolling\" : \"roll\",\n        onClick: () => {\n          spinReel();\n        },\n        disabled: rolling,\n        children: rolling ? \"Rolling...\" : \"ROLL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Withdrawal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Bet, {\n        score: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"score\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ReelSet, \"L5WCvCqIatIPRy5Wh5o+iGSO28E=\");\n\n_c = ReelSet;\nexport default ReelSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReelSet\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Constants","Bet","Withdrawal","Reel","ReelSet","props","gameOn","game","gameScore","setScore","score","bet","rolling","setRolling","scoreRef","spinResults","results","scr","winningLines","scoreGame","countWin","symbolSellection","randomNr","symbols","handleScore","console","log","createArray","i","push","getRandomNr","Math","floor","random","length","renderReels","reelList","Array","apply","REELS","map","el","idx","createResults","drawScore","lineNumberType","fool","newScore","setMyScore","myResults","j","checkWin","spinReel","checkLinesElements","symbol","symNr","LINES","indexI","indexJ","uniq","a","sort","filter","item","pos","ary","checkElements","k","symb","setBetZero","e","round","checkFourFools","evaluateResults","checkFiveFools","fl"],"sources":["F:/Games/slotmachinereact/src/components/ReelSet.js"],"sourcesContent":["import React, { useEffect, useRef, useState} from \"react\";\r\nimport Constants from \"../Constants\";\r\nimport Bet from \"./Bet\";\r\nimport Withdrawal from \"./Withdrawal\";\r\nimport \"../assets/css/App.css\";\r\nimport Reel from \"./Reel\";\r\n\r\nconst ReelSet = (props) => {\r\n  //  const [spinReel, setSpinReel] = useState(false)\r\n//  const [gameOn, setGameOn] = useState(0);\r\n  let  gameOn=props.game;\r\n  const [gameScore, setScore] = useState({score:2, bet:0 })\r\n\r\n  const [rolling, setRolling] = useState(false);\r\n\r\n  const scoreRef = useRef();\r\n  let score = 2;\r\n\r\n  let spinResults = [];\r\n  let results = [];\r\n\r\n  let bet = 0;\r\n  let scr = 0;\r\n\r\n  let winningLines = [];\r\n  let game = useRef(0);\r\n  let scoreGame= useRef();\r\n  let countWin = 0;\r\n  let symbolSellection = [];\r\n  let randomNr = 0;\r\n//  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPBBQQAAG\";\r\nconst symbols = \"DDDGNNSS\";\r\n\r\n\r\nconst handleScore = () => {\r\n  setScore({\r\n    score: gameScore.score+scr\r\n  });\r\n  console.log(\"My score is +\"+gameScore.score);\r\n}\r\n\r\n  const createArray = (randomNr) => {\r\n    console.log(\"My random nr is\" + -(randomNr / 242));\r\n    for (let i = 0; i < 3; i++) {\r\n      console.log(\"My sign is on position: \"+(-(randomNr / 242) + i))\r\n      results.push(symbols[-(randomNr / 242) + i]);\r\n    }\r\n    console.log(\"Results array has been created\" + results)\r\n  };\r\n\r\n  const getRandomNr = () => {\r\n    if (gameOn > 0) {\r\n      randomNr = -(Math.floor(Math.random() * (symbols.length-3)) * 242);\r\n      createArray(randomNr);\r\n    }\r\n    console.log(\"randomNr = \"+randomNr);\r\n    return randomNr;\r\n  };\r\n\r\n  const renderReels = () => {\r\n    let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\r\n      return <Reel reel={el} key={idx} index={idx} gameOn={getRandomNr()}/>;\r\n    });\r\n    \r\n   \r\n  \r\n  console.log(\"Render Reels have finish Running: \" + results);\r\n  if(gameOn>0){  \r\n    createResults();  \r\n  }\r\n    return <>{reelList}</>;\r\n  };\r\n\r\n  const drawScore = (lineNumberType, fool) => {\r\n    let newScore = 0;\r\n    if (fool) {\r\n      lineNumberType = 18;\r\n    }\r\n    switch (lineNumberType) {\r\n      case 0: // top line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 1: // middle line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 2: // bottom line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 3: // V shape starting bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 4: // V shape starting bottom right\r\n        //        audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 5: // W shape starting top left\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 6: // M shape starting bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 7: // M shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 8: // W shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 9: //W shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 10: // M shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 11: // U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 12: // inverse U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 13: // U shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 14: // inverse U shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 15: // inverse U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 16: // Z shape from top left\r\n        //        audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 17: // Z shape from bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 18: // Z shape from bottom left\r\n        //        audioWinBonus.play();\r\n        newScore = 100;\r\n        break;\r\n      default:\r\n        newScore = 0;\r\n    }\r\n\r\n    console.log(\"My score is:\" + newScore);\r\n    if(gameOn>0){\r\n      setMyScore(newScore);\r\n   }\r\n    return;\r\n  };\r\n\r\n  const createResults = () => {\r\n\r\n    let myResults = [];\r\n    let j=0;\r\n\r\n    for(let i=0; i<=results.length;i++){\r\n      \r\n      myResults[j]=(results[i]);\r\n      j++;\r\n\r\n      if(j===3){\r\n        spinResults.push(myResults);\r\n        myResults=[];\r\n        j=0;\r\n      } \r\n    }\r\n\r\n   console.log(\"spinResults =  \"+spinResults);\r\n   checkWin();\r\n  // score=score+scr;\r\n  handleScore();\r\n  // setScore(scr);\r\n  };\r\n\r\n  const spinReel = () => {\r\n    gameOn=gameOn+1;\r\n    console.log(\"My gameOn is\" + gameOn)\r\n  //  checkWin();\r\n  //  game=1+gameOn;\r\n  // /  console.log(\"My spinReel game=\"+game);\r\n   \r\n  // props.parrentCallBack(score);\r\n  };\r\n\r\n  const checkLinesElements = (symbol) => {\r\n    countWin++;\r\n    let symNr = 0;\r\n    let fool = 0;\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      fool = 0;\r\n      symNr = 0;\r\n      for (let j = 0; j < Constants.LINES[i].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n        if (symbol === spinResults[indexI][indexJ]) {\r\n          symNr++;\r\n        }\r\n      }\r\n      if (fool + symNr === 5 && fool < 4) {\r\n        winningLines.push(i);\r\n      }\r\n    }\r\n    winningLines = uniq(winningLines);\r\n  };\r\n\r\n  const uniq = (a) => {\r\n    return a.sort().filter(function (item, pos, ary) {\r\n      return !pos || item !== ary[pos - 1];\r\n    });\r\n  };\r\n\r\n  const checkElements = () => {\r\n    let fool = 0;\r\n    for (let k = 0; k < 3; k++) {\r\n      fool = 0;\r\n      for (let i = 0; i < spinResults.length; i++) {\r\n        let symb = \"\";\r\n        for (let j = k; j < spinResults[i].length; j++) {\r\n          if (spinResults[i][j] !== \"D\") {\r\n            symb = spinResults[i][j];\r\n            j = spinResults[i].length;\r\n          } else {\r\n            fool++;\r\n            j = spinResults[i].length;\r\n          }\r\n        }\r\n        if (fool < 4 && symb !== \"\") {\r\n          symbolSellection.push(symb);\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < symbolSellection.length; i++) {\r\n      checkLinesElements(symbolSellection[i]);\r\n    }\r\n  };\r\n\r\n  const setBetZero = () => {\r\n    bet = 0;\r\n  };\r\n\r\n  const setMyScore = (e) => {\r\n  //  let sc = 0;\r\n    if (bet > 0 && e > 0) {\r\n      console.log(\"Calculating 1:\" + scr + \"+(\" + bet + \"*\" + e + \")\");\r\n      scr = scr + (e + bet * e);\r\n      scr = Math.round(scr * 100) / 100;\r\n    } else if (bet > 0 && e === 0) {\r\n      scr = scr - (e + bet * e);\r\n      console.log(\"Calculating 2:\" + scr + \"-(\" + bet + \"*\" + e + \")\");\r\n      scr = Math.round(scr * 100) / 100;\r\n    } else if (bet === 0 && e > 0) {\r\n      console.log(\"Calculating 3: \" + scr + \" + \" + e);\r\n      scr = Math.round((scr + e) * 100) / 100;\r\n    }\r\n    console.log(\"your setMyScore scr=\"+scr);\r\n    score= Math.round((score+scr) * 100) / 100;\r\n\r\n    console.log(\"We are in setScore: \" + e +\" ,gameOn=\"+gameOn +\" ,score=\"+score);\r\n  //  handleScore();\r\n  //  setScore(scr);\r\n    \r\n  };\r\n\r\n  const checkFourFools = () => {\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n      }\r\n      if (fool === 4) {\r\n        winningLines.push(i);\r\n        drawScore(i, false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const evaluateResults = () => {\r\n    checkFourFools();\r\n    checkElements();\r\n    //highLightWinningLines(0);\r\n    if (winningLines.length > 0) {\r\n      console.log(\"We have winning line !!!\");\r\n      for (let i = 0; i < winningLines.length; i++) {\r\n        drawScore(winningLines[i], false);\r\n      }\r\n    } else {\r\n      console.log(\"We have no winning lines !!!\");\r\n      if (scr - bet >= 0.2) {\r\n        scr = Math.round((scr - bet) * 100) / 100;\r\n      //  setScore(scr);\r\n      //handleScore(scr);\r\n      console.log(\"your evaluateResults scr - bet >= 0.2 => scr=\"+scr)\r\n        if (scr < bet) {\r\n          setBetZero();\r\n        }\r\n      } else if (scr - bet === 0) {\r\n        setBetZero();\r\n      //  scr = 0;\r\n        console.log(\"your evaluateResults scr=bet === 0 = > scr=\"+scr)\r\n      //  setScore(scr);\r\n      //handleScore(scr);\r\n      }\r\n    }\r\n    //winningLines=[];\r\n  };\r\n  const checkFiveFools = () => {\r\n    let fl = false;\r\n    console.log(\"My spinResults are: \"+spinResults);\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n      }\r\n      console.log()\r\n      if (fool === 5) {\r\n        fl = true;\r\n        winningLines.push(i);\r\n          drawScore(i,true);\r\n        //  highLightWinningLines(0);\r\n        break;\r\n      }\r\n    }\r\n    console.log(\"We have checked 5 fools, and returning: \"+fl);\r\n    return fl;\r\n  };\r\n\r\n  const checkWin = () => {\r\n\r\n    console.log(\"My checkWin is: \"+gameOn + \"My reels is:\" + gameOn);\r\n    if(gameOn>0){\r\n    \r\n    let fool = checkFiveFools();\r\n    if (!fool) {\r\n      evaluateResults();\r\n    }\r\n  }\r\n  \r\n  console.log(\"We are in checkWin: \"+gameOn+\"Final score is:\"+scr);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div id=\"jackpot\" >\r\n    Jackpot: <span>100</span>\r\n  </div>\r\n      <div className=\"container\" >\r\n        <div className=\"playContainer\">\r\n          <div className=\"reelSet\" >\r\n            {renderReels()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n            <div id=\"controls\">\r\n            <div\r\n              className={!rolling ? \"roll rolling\" : \"roll\"}\r\n              onClick={() => {\r\n                spinReel();\r\n              }}\r\n              disabled={rolling} >\r\n              {rolling ? \"Rolling...\" : \"ROLL\"}\r\n            </div>\r\n            <Withdrawal/>\r\n            <Bet score={score} />\r\n            <label>\r\n              Score:<span id=\"score\">{score}</span>\r\n            </label>\r\n          </div>\r\n          </>\r\n  );\r\n};\r\n\r\nexport default ReelSet;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}