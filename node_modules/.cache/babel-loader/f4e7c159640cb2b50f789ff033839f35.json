{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\Withdrawal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport '../assets/css/App.css';\nimport { ethers } from \"ethers\";\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/PFPRacerNFT.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Withdrawal = () => {\n  _s();\n\n  const [rolling, setRolling] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(\"\");\n\n  const initConnection = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = provider.getSigner();\n      setAccount(accounts[0]);\n      setContract(new ethers.Contract(\"0xE0059D8C4242BDf03c9ca37E0e651c07b1b9d587\", PFPRacerNFT.abi, newSigner));\n    } else {\n      console.log(\"Please install metamask\");\n    }\n  };\n\n  const getNFTBalance = async () => {\n    let balance = await contract.getNFTBalance();\n    console.log(\"How many NFT's have been  minted ? \" + balance);\n    return balance;\n  };\n\n  const howManyNFTsAreLeft = async () => {\n    let totalNFT = await contract.maxSupply;\n    let mintedNFT = await getNFTBalance();\n    let nftLeftToMint = totalNFT - mintedNFT;\n    console.log(\"Total NFT's left to mint \" + nftLeftToMint);\n  };\n\n  useEffect(() => {\n    initConnection();\n  }, [account]);\n\n  const withdrawal = () => {\n    console.log(\"Withdrawal has been activated\");\n    console.log(\"My account is: \" + account);\n    howManyNFTsAreLeft();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: withdrawal ? \"roll rolling\" : \"roll\",\n    onClick: () => {\n      withdrawal();\n    },\n    children: \"Withdrawal\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Withdrawal, \"YMWh4SPmI+fS85XywQLQRJu3nhQ=\");\n\n_c = Withdrawal;\nexport default Withdrawal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdrawal\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ethers","PFPRacerNFT","Withdrawal","rolling","setRolling","name","setName","account","setAccount","contract","setContract","initConnection","window","ethereum","accounts","request","method","provider","providers","Web3Provider","newSigner","getSigner","Contract","abi","console","log","getNFTBalance","balance","howManyNFTsAreLeft","totalNFT","maxSupply","mintedNFT","nftLeftToMint","withdrawal"],"sources":["F:/Games/slotmachinereact/src/components/Withdrawal.js"],"sourcesContent":["import  React, { useEffect, useState, useRef } from \"react\";\r\nimport '../assets/css/App.css';\r\nimport {ethers} from \"ethers\";\r\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/PFPRacerNFT.json'\r\n \r\nconst Withdrawal=()=>{\r\n    const [rolling, setRolling] = useState(false);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [account, setAccount] = useState(\"\");\r\n    const [contract, setContract] = useState(\"\");\r\n\r\n    const initConnection = async () =>{\r\n      if(typeof window.ethereum !== \"undefined\"){\r\n        const accounts = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const newSigner = provider.getSigner();\r\n        setAccount(accounts[0]);\r\n        setContract(\r\n          new ethers.Contract(\r\n            \"0xE0059D8C4242BDf03c9ca37E0e651c07b1b9d587\",\r\n            PFPRacerNFT.abi,\r\n            newSigner\r\n          )\r\n        )\r\n      }else{\r\n        console.log(\"Please install metamask\");\r\n      }\r\n    }\r\n\r\n    const getNFTBalance = async () =>{\r\n      let balance = await contract.getNFTBalance();\r\n      console.log(\"How many NFT's have been  minted ? \"+balance );\r\n\r\n      return balance;\r\n    }\r\n\r\n    const howManyNFTsAreLeft = async () =>{\r\n      let totalNFT = await contract.maxSupply;\r\n      let mintedNFT= await getNFTBalance();\r\n      let nftLeftToMint = totalNFT -mintedNFT;\r\n\r\n      console.log(\"Total NFT's left to mint \"+nftLeftToMint);\r\n    }\r\n\r\n    useEffect(()=>{\r\n      initConnection();\r\n    },[account]);\r\n    \r\n    const withdrawal = () => {\r\n        console.log(\"Withdrawal has been activated\");\r\n        console.log(\"My account is: \"+account);\r\n        howManyNFTsAreLeft();\r\n      };\r\n    return(\r\n    <div\r\n         className={withdrawal ? \"roll rolling\" : \"roll\"}\r\n         onClick={() => {withdrawal()}}\r\n    >Withdrawal</div>\r\n    )\r\n}\r\n\r\nexport default Withdrawal;"],"mappings":";;;AAAA,OAAQA,KAAR,IAAiBC,SAAjB,EAA4BC,QAA5B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,OAAO,uBAAP;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,WAAP,MAAwB,yDAAxB;;;AAEA,MAAMC,UAAU,GAAC,MAAI;EAAA;;EACjB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMa,cAAc,GAAG,YAAW;IAChC,IAAG,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA9B,EAA0C;MACxC,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB;QAC7CC,MAAM,EAAE;MADqC,CAAxB,CAAvB;MAGA,MAAMC,QAAQ,GAAG,IAAIjB,MAAM,CAACkB,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;MACA,MAAMO,SAAS,GAAGH,QAAQ,CAACI,SAAT,EAAlB;MACAb,UAAU,CAACM,QAAQ,CAAC,CAAD,CAAT,CAAV;MACAJ,WAAW,CACT,IAAIV,MAAM,CAACsB,QAAX,CACE,4CADF,EAEErB,WAAW,CAACsB,GAFd,EAGEH,SAHF,CADS,CAAX;IAOD,CAdD,MAcK;MACHI,OAAO,CAACC,GAAR,CAAY,yBAAZ;IACD;EACF,CAlBD;;EAoBA,MAAMC,aAAa,GAAG,YAAW;IAC/B,IAAIC,OAAO,GAAG,MAAMlB,QAAQ,CAACiB,aAAT,EAApB;IACAF,OAAO,CAACC,GAAR,CAAY,wCAAsCE,OAAlD;IAEA,OAAOA,OAAP;EACD,CALD;;EAOA,MAAMC,kBAAkB,GAAG,YAAW;IACpC,IAAIC,QAAQ,GAAG,MAAMpB,QAAQ,CAACqB,SAA9B;IACA,IAAIC,SAAS,GAAE,MAAML,aAAa,EAAlC;IACA,IAAIM,aAAa,GAAGH,QAAQ,GAAEE,SAA9B;IAEAP,OAAO,CAACC,GAAR,CAAY,8BAA4BO,aAAxC;EACD,CAND;;EAQAnC,SAAS,CAAC,MAAI;IACZc,cAAc;EACf,CAFQ,EAEP,CAACJ,OAAD,CAFO,CAAT;;EAIA,MAAM0B,UAAU,GAAG,MAAM;IACrBT,OAAO,CAACC,GAAR,CAAY,+BAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,oBAAkBlB,OAA9B;IACAqB,kBAAkB;EACnB,CAJH;;EAKA,oBACA;IACK,SAAS,EAAEK,UAAU,GAAG,cAAH,GAAoB,MAD9C;IAEK,OAAO,EAAE,MAAM;MAACA,UAAU;IAAG,CAFlC;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAMH,CAzDD;;GAAM/B,U;;KAAAA,U;AA2DN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}