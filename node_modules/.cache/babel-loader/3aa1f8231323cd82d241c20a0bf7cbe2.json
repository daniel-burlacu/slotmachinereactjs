{"ast":null,"code":"\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n  constructor(size, signed, localName) {\n    const name = (signed ? \"int\" : \"uint\") + size * 8;\n    super(name, name, localName, false);\n    this.size = size;\n    this.signed = signed;\n  }\n\n  encode(writer, value) {\n    let v = BigNumber.from(value); // Check bounds are safe for encoding\n\n    let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n\n    if (this.signed) {\n      let bounds = maxUintValue.mask(this.size * 8 - 1);\n\n      if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n        this._throwError(\"value out-of-bounds\", value);\n      }\n    } else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n      this._throwError(\"value out-of-bounds\", value);\n    }\n\n    v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n    if (this.signed) {\n      v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n    }\n\n    return writer.writeValue(v);\n  }\n\n  decode(reader) {\n    let value = reader.readValue().mask(this.size * 8);\n\n    if (this.signed) {\n      value = value.fromTwos(this.size * 8);\n    }\n\n    return reader.coerce(this.name, value);\n  }\n\n}","map":{"version":3,"names":["BigNumber","MaxUint256","NegativeOne","One","Zero","Coder","NumberCoder","constructor","size","signed","localName","name","encode","writer","value","v","from","maxUintValue","mask","wordSize","bounds","gt","lt","add","mul","_throwError","toTwos","fromTwos","writeValue","decode","reader","readValue","coerce"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/node_modules/@ethersproject/abi/lib.esm/coders/number.js"],"sourcesContent":["\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n"],"mappings":"AAAA;;AACA,SAASA,SAAT,QAA0B,0BAA1B;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,GAAlC,EAAuCC,IAAvC,QAAmD,0BAAnD;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAO,MAAMC,WAAN,SAA0BD,KAA1B,CAAgC;EACnCE,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAeC,SAAf,EAA0B;IACjC,MAAMC,IAAI,GAAI,CAACF,MAAM,GAAG,KAAH,GAAW,MAAlB,IAA6BD,IAAI,GAAG,CAAlD;IACA,MAAMG,IAAN,EAAYA,IAAZ,EAAkBD,SAAlB,EAA6B,KAA7B;IACA,KAAKF,IAAL,GAAYA,IAAZ;IACA,KAAKC,MAAL,GAAcA,MAAd;EACH;;EACDG,MAAM,CAACC,MAAD,EAASC,KAAT,EAAgB;IAClB,IAAIC,CAAC,GAAGf,SAAS,CAACgB,IAAV,CAAeF,KAAf,CAAR,CADkB,CAElB;;IACA,IAAIG,YAAY,GAAGhB,UAAU,CAACiB,IAAX,CAAgBL,MAAM,CAACM,QAAP,GAAkB,CAAlC,CAAnB;;IACA,IAAI,KAAKV,MAAT,EAAiB;MACb,IAAIW,MAAM,GAAGH,YAAY,CAACC,IAAb,CAAkB,KAAKV,IAAL,GAAY,CAAZ,GAAgB,CAAlC,CAAb;;MACA,IAAIO,CAAC,CAACM,EAAF,CAAKD,MAAL,KAAgBL,CAAC,CAACO,EAAF,CAAKF,MAAM,CAACG,GAAP,CAAWpB,GAAX,EAAgBqB,GAAhB,CAAoBtB,WAApB,CAAL,CAApB,EAA4D;QACxD,KAAKuB,WAAL,CAAiB,qBAAjB,EAAwCX,KAAxC;MACH;IACJ,CALD,MAMK,IAAIC,CAAC,CAACO,EAAF,CAAKlB,IAAL,KAAcW,CAAC,CAACM,EAAF,CAAKJ,YAAY,CAACC,IAAb,CAAkB,KAAKV,IAAL,GAAY,CAA9B,CAAL,CAAlB,EAA0D;MAC3D,KAAKiB,WAAL,CAAiB,qBAAjB,EAAwCX,KAAxC;IACH;;IACDC,CAAC,GAAGA,CAAC,CAACW,MAAF,CAAS,KAAKlB,IAAL,GAAY,CAArB,EAAwBU,IAAxB,CAA6B,KAAKV,IAAL,GAAY,CAAzC,CAAJ;;IACA,IAAI,KAAKC,MAAT,EAAiB;MACbM,CAAC,GAAGA,CAAC,CAACY,QAAF,CAAW,KAAKnB,IAAL,GAAY,CAAvB,EAA0BkB,MAA1B,CAAiC,IAAIb,MAAM,CAACM,QAA5C,CAAJ;IACH;;IACD,OAAON,MAAM,CAACe,UAAP,CAAkBb,CAAlB,CAAP;EACH;;EACDc,MAAM,CAACC,MAAD,EAAS;IACX,IAAIhB,KAAK,GAAGgB,MAAM,CAACC,SAAP,GAAmBb,IAAnB,CAAwB,KAAKV,IAAL,GAAY,CAApC,CAAZ;;IACA,IAAI,KAAKC,MAAT,EAAiB;MACbK,KAAK,GAAGA,KAAK,CAACa,QAAN,CAAe,KAAKnB,IAAL,GAAY,CAA3B,CAAR;IACH;;IACD,OAAOsB,MAAM,CAACE,MAAP,CAAc,KAAKrB,IAAnB,EAAyBG,KAAzB,CAAP;EACH;;AAhCkC"},"metadata":{},"sourceType":"module"}