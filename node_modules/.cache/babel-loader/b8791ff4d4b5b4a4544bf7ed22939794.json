{"ast":null,"code":"\"use strict\"; // Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.callbackify = void 0;\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  } // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n\n\n  function callbackified() {\n    var args = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    } //tslint:disable-next-line no-invalid-this\n\n\n    var self = this;\n\n    var cb = function () {\n      return maybeCb.apply(self, arguments);\n    }; // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    //tslint:disable-next-line no-invalid-this\n\n\n    original.apply(this, args).then(function (ret) {\n      process.nextTick(cb.bind(null, null, ret));\n    }, function (rej) {\n      process.nextTick(callbackifyOnRejected.bind(null, rej, cb));\n    });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified, Object.getOwnPropertyDescriptors(original));\n  return callbackified;\n}\n\nexports.callbackify = callbackify;","map":{"version":3,"mappings":"cAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA,SAASA,qBAAT,CAA+BC,MAA/B,EAA4CC,EAA5C,EAAmD;EACjD;EACA;EACA;EACA;EACA,IAAI,CAACD,MAAL,EAAa;IACX,IAAME,SAAS,GAAG,IAAIC,KAAJ,CAAU,yCAAV,CAAlB;IACAD,SAAS,CAACF,MAAV,GAAmBA,MAAnB;IACAA,MAAM,GAAGE,SAAT;EACD;;EACD,OAAOD,EAAE,CAACD,MAAD,CAAT;AACD;;AAED,SAAgBI,WAAhB,CAA4BC,QAA5B,EAAyC;EACvC,IAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;IAClC,MAAM,IAAIC,SAAJ,CAAc,kDAAd,CAAN;EACD,CAHsC,CAKvC;EACA;EACA;;;EACA,SAASC,aAAT,GAAsB;IACpB,IAAMC,IAAI,GAAG,EAAb;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;MACzCD,IAAI,CAACI,IAAL,CAAUF,SAAS,CAACD,CAAD,CAAnB;IACD;;IAED,IAAMI,OAAO,GAAGL,IAAI,CAACM,GAAL,EAAhB;;IACA,IAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;MACjC,MAAM,IAAIP,SAAJ,CAAc,4CAAd,CAAN;IACD,CATmB,CAWpB;;;IACA,IAAMS,IAAI,GAAG,IAAb;;IACA,IAAMd,EAAE,GAAG;MACT,OAAOY,OAAO,CAACG,KAAR,CAAcD,IAAd,EAAoBL,SAApB,CAAP;IACD,CAFD,CAboB,CAiBpB;IACA;IACA;;;IACAL,QAAQ,CAACW,KAAT,CAAe,IAAf,EAAqBR,IAArB,EAA2BS,IAA3B,CACE,UAASC,GAAT,EAAiB;MACfC,OAAO,CAACC,QAAR,CAAiBnB,EAAE,CAACoB,IAAH,CAAQ,IAAR,EAAc,IAAd,EAAoBH,GAApB,CAAjB;IACD,CAHH,EAIE,UAASI,GAAT,EAAiB;MACfH,OAAO,CAACC,QAAR,CAAiBrB,qBAAqB,CAACsB,IAAtB,CAA2B,IAA3B,EAAiCC,GAAjC,EAAsCrB,EAAtC,CAAjB;IACD,CANH;EAQD;;EAEDsB,MAAM,CAACC,cAAP,CAAsBjB,aAAtB,EAAqCgB,MAAM,CAACE,cAAP,CAAsBpB,QAAtB,CAArC;EACAkB,MAAM,CAACG,gBAAP,CAAwBnB,aAAxB,EAAuCgB,MAAM,CAACI,yBAAP,CAAiCtB,QAAjC,CAAvC;EAEA,OAAOE,aAAP;AACD;;AA1CDqB","names":["callbackifyOnRejected","reason","cb","newReason","Error","callbackify","original","TypeError","callbackified","args","i","arguments","length","push","maybeCb","pop","self","apply","then","ret","process","nextTick","bind","rej","Object","setPrototypeOf","getPrototypeOf","defineProperties","getOwnPropertyDescriptors","exports"],"sources":["../src/callbackify.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}