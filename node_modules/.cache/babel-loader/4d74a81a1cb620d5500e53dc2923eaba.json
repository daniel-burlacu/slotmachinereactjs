{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateFnName = exports.validateMockProvider = exports.validateContract = void 0;\n\nconst ethers_1 = require(\"ethers\");\n\nconst error_1 = require(\"./error\");\n\nconst utils_1 = require(\"./utils\");\n\nfunction validateContract(contract) {\n  utils_1.ensure(contract instanceof ethers_1.Contract, TypeError, 'argument must be a contract');\n}\n\nexports.validateContract = validateContract;\n\nfunction validateMockProvider(provider) {\n  utils_1.ensure(!!provider.callHistory && provider.callHistory instanceof Array, error_1.ProviderWithHistoryExpected);\n}\n\nexports.validateMockProvider = validateMockProvider;\n\nfunction validateFnName(fnName, contract) {\n  utils_1.ensure(typeof fnName === 'string', TypeError, 'function name must be a string');\n\n  function isFunction(name) {\n    try {\n      return !!contract.interface.getFunction(name);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  utils_1.ensure(isFunction(fnName), TypeError, 'function must exist in provided contract');\n}\n\nexports.validateFnName = validateFnName;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateFnName","validateMockProvider","validateContract","ethers_1","require","error_1","utils_1","contract","ensure","Contract","TypeError","provider","callHistory","Array","ProviderWithHistoryExpected","fnName","isFunction","name","interface","getFunction","e"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/chai/dist/cjs/matchers/calledOnContract/calledOnContractValidators.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateFnName = exports.validateMockProvider = exports.validateContract = void 0;\nconst ethers_1 = require(\"ethers\");\nconst error_1 = require(\"./error\");\nconst utils_1 = require(\"./utils\");\nfunction validateContract(contract) {\n    utils_1.ensure(contract instanceof ethers_1.Contract, TypeError, 'argument must be a contract');\n}\nexports.validateContract = validateContract;\nfunction validateMockProvider(provider) {\n    utils_1.ensure((!!provider.callHistory && provider.callHistory instanceof Array), error_1.ProviderWithHistoryExpected);\n}\nexports.validateMockProvider = validateMockProvider;\nfunction validateFnName(fnName, contract) {\n    utils_1.ensure(typeof fnName === 'string', TypeError, 'function name must be a string');\n    function isFunction(name) {\n        try {\n            return !!contract.interface.getFunction(name);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    utils_1.ensure(isFunction(fnName), TypeError, 'function must exist in provided contract');\n}\nexports.validateFnName = validateFnName;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,oBAAR,GAA+BH,OAAO,CAACI,gBAAR,GAA2B,KAAK,CAAxF;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,SAASF,gBAAT,CAA0BK,QAA1B,EAAoC;EAChCD,OAAO,CAACE,MAAR,CAAeD,QAAQ,YAAYJ,QAAQ,CAACM,QAA5C,EAAsDC,SAAtD,EAAiE,6BAAjE;AACH;;AACDZ,OAAO,CAACI,gBAAR,GAA2BA,gBAA3B;;AACA,SAASD,oBAAT,CAA8BU,QAA9B,EAAwC;EACpCL,OAAO,CAACE,MAAR,CAAgB,CAAC,CAACG,QAAQ,CAACC,WAAX,IAA0BD,QAAQ,CAACC,WAAT,YAAgCC,KAA1E,EAAkFR,OAAO,CAACS,2BAA1F;AACH;;AACDhB,OAAO,CAACG,oBAAR,GAA+BA,oBAA/B;;AACA,SAASD,cAAT,CAAwBe,MAAxB,EAAgCR,QAAhC,EAA0C;EACtCD,OAAO,CAACE,MAAR,CAAe,OAAOO,MAAP,KAAkB,QAAjC,EAA2CL,SAA3C,EAAsD,gCAAtD;;EACA,SAASM,UAAT,CAAoBC,IAApB,EAA0B;IACtB,IAAI;MACA,OAAO,CAAC,CAACV,QAAQ,CAACW,SAAT,CAAmBC,WAAnB,CAA+BF,IAA/B,CAAT;IACH,CAFD,CAGA,OAAOG,CAAP,EAAU;MACN,OAAO,KAAP;IACH;EACJ;;EACDd,OAAO,CAACE,MAAR,CAAeQ,UAAU,CAACD,MAAD,CAAzB,EAAmCL,SAAnC,EAA8C,0CAA9C;AACH;;AACDZ,OAAO,CAACE,cAAR,GAAyBA,cAAzB"},"metadata":{},"sourceType":"script"}