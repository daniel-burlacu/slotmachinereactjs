{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\GameExplained.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../assets/css/App.css\";\nimport images from \"../assets/images/ImagesExplained\";\nimport { motion } from \"framer-motion\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameExplained = () => {\n  _s();\n\n  const [position, positionSet] = useState(0);\n\n  const handleSwipe = _ref => {\n    let {\n      dir\n    } = _ref;\n\n    if (dir === \"Right\") {\n      if (position < images.length - 1) {\n        positionSet(position + 1);\n      }\n    }\n\n    if (dir === \"Left\") {\n      if (position > 0) {\n        positionSet(position - 1);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Swipeable, {\n    onSwiped: handleSwipe,\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: images.map((url, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"container\",\n        initial: {\n          scale: 0,\n          rotation: -180\n        },\n        animate: {\n          rotate: 0,\n          left: `${(index - position) * 60 - 30}vw`,\n          scale: index === position ? 1 : 0.8\n        },\n        transition: {\n          type: \"spring\",\n          stiffness: 260,\n          damping: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GameExplained, \"zFDK+PnPQ4bJGWE5O2I1fOn4v9o=\");\n\n_c = GameExplained;\nexport default GameExplained;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameExplained\");","map":{"version":3,"names":["React","useEffect","useState","images","motion","useSwipeable","GameExplained","position","positionSet","handleSwipe","dir","length","map","url","index","scale","rotation","rotate","left","type","stiffness","damping"],"sources":["F:/Games/slotmachinereact/src/components/GameExplained.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../assets/css/App.css\";\r\nimport images from \"../assets/images/ImagesExplained\";\r\nimport {motion} from \"framer-motion\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\n\r\n\r\nconst GameExplained = () => {\r\n\r\n    const [position, positionSet] = useState(0);\r\n    const handleSwipe = ({ dir }) => {\r\n        if (dir === \"Right\") {\r\n        if (position < images.length - 1) {\r\n            positionSet(position + 1);\r\n        }\r\n        }\r\n        if (dir === \"Left\") {\r\n        if (position > 0) {\r\n            positionSet(position - 1);\r\n        }\r\n        }\r\n    };\r\n\r\n    return(\r\n      \r\n        <Swipeable onSwiped={handleSwipe} className=\"App\">\r\n        <div className=\"row\">\r\n          {images.map((url, index) => (\r\n            <motion.div\r\n              className=\"container\"\r\n              key={index}\r\n              initial={{ scale: 0, rotation: -180 }}\r\n              animate={{\r\n                rotate: 0,\r\n                left: `${(index - position) * 60 - 30}vw`,\r\n                scale: index === position ? 1 : 0.8,\r\n              }}\r\n              transition={{\r\n                type: \"spring\",\r\n                stiffness: 260,\r\n                damping: 20,\r\n              }}\r\n            >\r\n              <img src={url}></img>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </Swipeable>\r\n    )\r\n}\r\n\r\nexport default GameExplained;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,uBAAP;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,SAASC,YAAT,QAA6B,iBAA7B;;;AAGA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAExB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;;EACA,MAAMO,WAAW,GAAG,QAAa;IAAA,IAAZ;MAAEC;IAAF,CAAY;;IAC7B,IAAIA,GAAG,KAAK,OAAZ,EAAqB;MACrB,IAAIH,QAAQ,GAAGJ,MAAM,CAACQ,MAAP,GAAgB,CAA/B,EAAkC;QAC9BH,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;MACH;IACA;;IACD,IAAIG,GAAG,KAAK,MAAZ,EAAoB;MACpB,IAAIH,QAAQ,GAAG,CAAf,EAAkB;QACdC,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;MACH;IACA;EACJ,CAXD;;EAaA,oBAEI,QAAC,SAAD;IAAW,QAAQ,EAAEE,WAArB;IAAkC,SAAS,EAAC,KAA5C;IAAA,uBACA;MAAK,SAAS,EAAC,KAAf;MAAA,UACGN,MAAM,CAACS,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,kBACV,QAAC,MAAD,CAAQ,GAAR;QACE,SAAS,EAAC,WADZ;QAGE,OAAO,EAAE;UAAEC,KAAK,EAAE,CAAT;UAAYC,QAAQ,EAAE,CAAC;QAAvB,CAHX;QAIE,OAAO,EAAE;UACPC,MAAM,EAAE,CADD;UAEPC,IAAI,EAAG,GAAE,CAACJ,KAAK,GAAGP,QAAT,IAAqB,EAArB,GAA0B,EAAG,IAF/B;UAGPQ,KAAK,EAAED,KAAK,KAAKP,QAAV,GAAqB,CAArB,GAAyB;QAHzB,CAJX;QASE,UAAU,EAAE;UACVY,IAAI,EAAE,QADI;UAEVC,SAAS,EAAE,GAFD;UAGVC,OAAO,EAAE;QAHC,CATd;QAAA,uBAeE;UAAK,GAAG,EAAER;QAAV;UAAA;UAAA;UAAA;QAAA;MAfF,GAEOC,KAFP;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QAFJ;AA0BH,CA1CD;;GAAMR,a;;KAAAA,a;AA4CN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}