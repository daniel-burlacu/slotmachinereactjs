{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BN = require(\"bn.js\");\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar rlp_1 = require(\"rlp\");\n\nvar bloom_1 = require(\"./bloom\");\n\nvar promisify = require('util.promisify');\n\nvar Trie = require('merkle-patricia-tree');\n/**\n * @ignore\n */\n\n\nfunction runBlock(opts) {\n  return __awaiter(this, void 0, void 0, function () {\n    var state, block, generateStateRoot, result, err_1, stateRoot;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (opts === undefined) {\n            throw new Error('invalid input, opts must be provided');\n          }\n\n          if (!opts.block) {\n            throw new Error('invalid input, block must be provided');\n          }\n\n          state = this.pStateManager;\n          block = opts.block;\n          generateStateRoot = !!opts.generate;\n          /**\n           * The `beforeBlock` event.\n           *\n           * @event Event: beforeBlock\n           * @type {Object}\n           * @property {Block} block emits the block that is about to be processed\n           */\n\n          return [4\n          /*yield*/\n          , this._emit('beforeBlock', opts.block) // Set state root if provided\n          ];\n\n        case 1:\n          /**\n           * The `beforeBlock` event.\n           *\n           * @event Event: beforeBlock\n           * @type {Object}\n           * @property {Block} block emits the block that is about to be processed\n           */\n          _a.sent();\n\n          if (!opts.root) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , state.setStateRoot(opts.root)];\n\n        case 2:\n          _a.sent();\n\n          _a.label = 3;\n\n        case 3:\n          // Checkpoint state\n          return [4\n          /*yield*/\n          , state.checkpoint()];\n\n        case 4:\n          // Checkpoint state\n          _a.sent();\n\n          _a.label = 5;\n\n        case 5:\n          _a.trys.push([5, 7,, 9]);\n\n          return [4\n          /*yield*/\n          , applyBlock.bind(this)(block, opts)];\n\n        case 6:\n          result = _a.sent();\n          return [3\n          /*break*/\n          , 9];\n\n        case 7:\n          err_1 = _a.sent();\n          return [4\n          /*yield*/\n          , state.revert()];\n\n        case 8:\n          _a.sent();\n\n          throw err_1;\n\n        case 9:\n          // Persist state\n          return [4\n          /*yield*/\n          , state.commit()];\n\n        case 10:\n          // Persist state\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , state.getStateRoot() // Given the generate option, either set resulting header\n          // values to the current block, or validate the resulting\n          // header values against the current block.\n          ];\n\n        case 11:\n          stateRoot = _a.sent(); // Given the generate option, either set resulting header\n          // values to the current block, or validate the resulting\n          // header values against the current block.\n\n          if (generateStateRoot) {\n            block.header.stateRoot = stateRoot;\n            block.header.bloom = result.bloom.bitvector;\n          } else {\n            if (result.receiptRoot && result.receiptRoot.toString('hex') !== block.header.receiptTrie.toString('hex')) {\n              throw new Error('invalid receiptTrie ');\n            }\n\n            if (result.bloom.bitvector.toString('hex') !== block.header.bloom.toString('hex')) {\n              throw new Error('invalid bloom ');\n            }\n\n            if (ethereumjs_util_1.bufferToInt(block.header.gasUsed) !== Number(result.gasUsed)) {\n              throw new Error('invalid gasUsed ');\n            }\n\n            if (stateRoot.toString('hex') !== block.header.stateRoot.toString('hex')) {\n              throw new Error('invalid block stateRoot ');\n            }\n          }\n          /**\n           * The `afterBlock` event\n           *\n           * @event Event: afterBlock\n           * @type {Object}\n           * @property {Object} result emits the results of processing a block\n           */\n\n\n          return [4\n          /*yield*/\n          , this._emit('afterBlock', {\n            receipts: result.receipts,\n            results: result.results\n          })];\n\n        case 12:\n          /**\n           * The `afterBlock` event\n           *\n           * @event Event: afterBlock\n           * @type {Object}\n           * @property {Object} result emits the results of processing a block\n           */\n          _a.sent();\n\n          return [2\n          /*return*/\n          , {\n            receipts: result.receipts,\n            results: result.results\n          }];\n      }\n    });\n  });\n}\n\nexports.default = runBlock;\n/**\n * Validates and applies a block, computing the results of\n * applying its transactions. This method doesn't modify the\n * block itself. It computes the block rewards and puts\n * them on state (but doesn't persist the changes).\n * @param {Block} block\n * @param {Boolean} [skipBlockValidation=false]\n */\n\nfunction applyBlock(block, opts) {\n  return __awaiter(this, void 0, void 0, function () {\n    var txResults;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!!opts.skipBlockValidation) return [3\n          /*break*/\n          , 3];\n          if (!new BN(block.header.gasLimit).gte(new BN('8000000000000000', 16))) return [3\n          /*break*/\n          , 1];\n          throw new Error('Invalid block with gas limit greater than (2^63 - 1)');\n\n        case 1:\n          return [4\n          /*yield*/\n          , promisify(block.validate).bind(block)(this.blockchain)];\n\n        case 2:\n          _a.sent();\n\n          _a.label = 3;\n\n        case 3:\n          return [4\n          /*yield*/\n          , applyTransactions.bind(this)(block, opts) // Pay ommers and miners\n          ];\n\n        case 4:\n          txResults = _a.sent(); // Pay ommers and miners\n\n          return [4\n          /*yield*/\n          , assignBlockRewards.bind(this)(block)];\n\n        case 5:\n          // Pay ommers and miners\n          _a.sent();\n\n          return [2\n          /*return*/\n          , txResults];\n      }\n    });\n  });\n}\n/**\n * Applies the transactions in a block, computing the receipts\n * as well as gas usage and some relevant data. This method is\n * side-effect free (it doesn't modify the block nor the state).\n * @param {Block} block\n */\n\n\nfunction applyTransactions(block, opts) {\n  return __awaiter(this, void 0, void 0, function () {\n    var bloom, gasUsed, receiptTrie, receipts, txResults, txIdx, tx, gasLimitIsHigherThanBlock, txRes, txReceipt;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          bloom = new bloom_1.default();\n          gasUsed = new BN(0);\n          receiptTrie = new Trie();\n          receipts = [];\n          txResults = [];\n          txIdx = 0;\n          _a.label = 1;\n\n        case 1:\n          if (!(txIdx < block.transactions.length)) return [3\n          /*break*/\n          , 5];\n          tx = block.transactions[txIdx];\n          gasLimitIsHigherThanBlock = new BN(block.header.gasLimit).lt(new BN(tx.gasLimit).add(gasUsed));\n\n          if (gasLimitIsHigherThanBlock) {\n            throw new Error('tx has a higher gas limit than the block');\n          }\n\n          return [4\n          /*yield*/\n          , this.runTx({\n            tx: tx,\n            block: block,\n            skipBalance: opts.skipBalance,\n            skipNonce: opts.skipNonce\n          })];\n\n        case 2:\n          txRes = _a.sent();\n          txResults.push(txRes); // Add to total block gas usage\n\n          gasUsed = gasUsed.add(txRes.gasUsed); // Combine blooms via bitwise OR\n\n          bloom.or(txRes.bloom);\n          txReceipt = {\n            status: txRes.execResult.exceptionError ? 0 : 1,\n            gasUsed: gasUsed.toArrayLike(Buffer),\n            bitvector: txRes.bloom.bitvector,\n            logs: txRes.execResult.logs || []\n          };\n          receipts.push(txReceipt); // Add receipt to trie to later calculate receipt root\n\n          return [4\n          /*yield*/\n          , promisify(receiptTrie.put).bind(receiptTrie)(rlp_1.encode(txIdx), rlp_1.encode(Object.values(txReceipt)))];\n\n        case 3:\n          // Add receipt to trie to later calculate receipt root\n          _a.sent();\n\n          _a.label = 4;\n\n        case 4:\n          txIdx++;\n          return [3\n          /*break*/\n          , 1];\n\n        case 5:\n          return [2\n          /*return*/\n          , {\n            bloom: bloom,\n            gasUsed: gasUsed,\n            receiptRoot: receiptTrie.root,\n            receipts: receipts,\n            results: txResults\n          }];\n      }\n    });\n  });\n}\n/**\n * Calculates block rewards for miner and ommers and puts\n * the updated balances of their accounts to state.\n */\n\n\nfunction assignBlockRewards(block) {\n  return __awaiter(this, void 0, void 0, function () {\n    var state, minerReward, ommers, _i, ommers_1, ommer, reward_1, reward;\n\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          state = this.pStateManager;\n          minerReward = new BN(this._common.param('pow', 'minerReward'));\n          ommers = block.uncleHeaders;\n          _i = 0, ommers_1 = ommers;\n          _a.label = 1;\n\n        case 1:\n          if (!(_i < ommers_1.length)) return [3\n          /*break*/\n          , 4];\n          ommer = ommers_1[_i];\n          reward_1 = calculateOmmerReward(new BN(ommer.number), new BN(block.header.number), minerReward);\n          return [4\n          /*yield*/\n          , rewardAccount(state, ommer.coinbase, reward_1)];\n\n        case 2:\n          _a.sent();\n\n          _a.label = 3;\n\n        case 3:\n          _i++;\n          return [3\n          /*break*/\n          , 1];\n\n        case 4:\n          reward = calculateMinerReward(minerReward, ommers.length);\n          return [4\n          /*yield*/\n          , rewardAccount(state, block.header.coinbase, reward)];\n\n        case 5:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nfunction calculateOmmerReward(ommerBlockNumber, blockNumber, minerReward) {\n  var heightDiff = blockNumber.sub(ommerBlockNumber);\n  var reward = new BN(8).sub(heightDiff).mul(minerReward.divn(8));\n\n  if (reward.ltn(0)) {\n    reward = new BN(0);\n  }\n\n  return reward;\n}\n\nfunction calculateMinerReward(minerReward, ommersNum) {\n  // calculate nibling reward\n  var niblingReward = minerReward.divn(32);\n  var totalNiblingReward = niblingReward.muln(ommersNum);\n  var reward = minerReward.add(totalNiblingReward);\n  return reward;\n}\n\nfunction rewardAccount(state, address, reward) {\n  return __awaiter(this, void 0, void 0, function () {\n    var account;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , state.getAccount(address)];\n\n        case 1:\n          account = _a.sent();\n          account.balance = ethereumjs_util_1.toBuffer(new BN(account.balance).add(reward));\n          return [4\n          /*yield*/\n          , state.putAccount(address, account)];\n\n        case 2:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}","map":{"version":3,"mappings":"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","names":["promisify","require","Trie","runBlock","opts","undefined","Error","block","state","pStateManager","generateStateRoot","generate","_emit","_a","root","setStateRoot","checkpoint","applyBlock","bind","result","revert","err_1","commit","getStateRoot","stateRoot","header","bloom","bitvector","receiptRoot","toString","receiptTrie","ethereumjs_util_1","gasUsed","Number","receipts","results","exports","skipBlockValidation","BN","gasLimit","gte","validate","blockchain","applyTransactions","txResults","assignBlockRewards","bloom_1","txIdx","transactions","length","tx","gasLimitIsHigherThanBlock","lt","add","runTx","skipBalance","skipNonce","txRes","push","or","txReceipt","status","execResult","exceptionError","toArrayLike","Buffer","logs","put","rlp_1","Object","values","minerReward","_common","param","ommers","uncleHeaders","ommers_1","_i","ommer","reward_1","calculateOmmerReward","number","rewardAccount","coinbase","reward","calculateMinerReward","ommerBlockNumber","blockNumber","heightDiff","sub","mul","divn","ltn","ommersNum","niblingReward","totalNiblingReward","muln","address","getAccount","account","balance","putAccount"],"sources":["../lib/runBlock.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}