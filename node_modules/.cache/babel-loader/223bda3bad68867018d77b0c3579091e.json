{"ast":null,"code":"var EventEmitter = require('events').EventEmitter;\n\nvar inherits = require('util').inherits;\n\nvar extend = require('xtend');\n\nvar DeferredLevelDOWN = require('deferred-leveldown');\n\nvar IteratorStream = require('level-iterator-stream');\n\nvar Batch = require('./batch');\n\nvar errors = require('level-errors');\n\nvar assert = require('assert');\n\nvar promisify = require('./promisify');\n\nvar getCallback = require('./common').getCallback;\n\nvar getOptions = require('./common').getOptions;\n\nvar WriteError = errors.WriteError;\nvar ReadError = errors.ReadError;\nvar NotFoundError = errors.NotFoundError;\nvar OpenError = errors.OpenError;\nvar InitializationError = errors.InitializationError; // Possible AbstractLevelDOWN#status values:\n//  - 'new'     - newly created, not opened or closed\n//  - 'opening' - waiting for the database to be opened, post open()\n//  - 'open'    - successfully opened the database, available for use\n//  - 'closing' - waiting for the database to be closed, post close()\n//  - 'closed'  - database has been successfully closed, should not be\n//                 used except for another open() operation\n\nfunction LevelUP(db, options, callback) {\n  if (!(this instanceof LevelUP)) {\n    return new LevelUP(db, options, callback);\n  }\n\n  var error;\n  EventEmitter.call(this);\n  this.setMaxListeners(Infinity);\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  if (!db || typeof db !== 'object') {\n    error = new InitializationError('First argument must be an abstract-leveldown compliant store');\n\n    if (typeof callback === 'function') {\n      return process.nextTick(callback, error);\n    }\n\n    throw error;\n  }\n\n  assert.equal(typeof db.status, 'string', '.status required, old abstract-leveldown');\n  this.options = getOptions(options);\n  this._db = db;\n  this.db = new DeferredLevelDOWN(db);\n  this.open(callback);\n}\n\nLevelUP.prototype.emit = EventEmitter.prototype.emit;\nLevelUP.prototype.once = EventEmitter.prototype.once;\ninherits(LevelUP, EventEmitter);\n\nLevelUP.prototype.open = function (callback) {\n  var self = this;\n  var promise;\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  if (this.isOpen()) {\n    process.nextTick(callback, null, self);\n    return promise;\n  }\n\n  if (this._isOpening()) {\n    this.once('open', function () {\n      callback(null, self);\n    });\n    return promise;\n  }\n\n  this.emit('opening');\n  this.db.open(this.options, function (err) {\n    if (err) {\n      return callback(new OpenError(err));\n    }\n\n    self.db = self._db;\n    callback(null, self);\n    self.emit('open');\n    self.emit('ready');\n  });\n  return promise;\n};\n\nLevelUP.prototype.close = function (callback) {\n  var self = this;\n  var promise;\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  if (this.isOpen()) {\n    this.db.close(function () {\n      self.emit('closed');\n      callback.apply(null, arguments);\n    });\n    this.emit('closing');\n    this.db = new DeferredLevelDOWN(this._db);\n  } else if (this.isClosed()) {\n    process.nextTick(callback);\n  } else if (this.db.status === 'closing') {\n    this.once('closed', callback);\n  } else if (this._isOpening()) {\n    this.once('open', function () {\n      self.close(callback);\n    });\n  }\n\n  return promise;\n};\n\nLevelUP.prototype.isOpen = function () {\n  return this.db.status === 'open';\n};\n\nLevelUP.prototype._isOpening = function () {\n  return this.db.status === 'opening';\n};\n\nLevelUP.prototype.isClosed = function () {\n  return /^clos|new/.test(this.db.status);\n};\n\nLevelUP.prototype.get = function (key, options, callback) {\n  if (key === null || key === undefined) {\n    throw new ReadError('get() requires a key argument');\n  }\n\n  var promise;\n  callback = getCallback(options, callback);\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  if (maybeError(this, callback)) {\n    return promise;\n  }\n\n  options = getOptions(options);\n  this.db.get(key, options, function (err, value) {\n    if (err) {\n      if (/notfound/i.test(err) || err.notFound) {\n        err = new NotFoundError('Key not found in database [' + key + ']', err);\n      } else {\n        err = new ReadError(err);\n      }\n\n      return callback(err);\n    }\n\n    callback(null, value);\n  });\n  return promise;\n};\n\nLevelUP.prototype.put = function (key, value, options, callback) {\n  if (key === null || key === undefined) {\n    throw new WriteError('put() requires a key argument');\n  }\n\n  var self = this;\n  var promise;\n  callback = getCallback(options, callback);\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  if (maybeError(this, callback)) {\n    return promise;\n  }\n\n  options = getOptions(options);\n  this.db.put(key, value, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err));\n    }\n\n    self.emit('put', key, value);\n    callback();\n  });\n  return promise;\n};\n\nLevelUP.prototype.del = function (key, options, callback) {\n  if (key === null || key === undefined) {\n    throw new WriteError('del() requires a key argument');\n  }\n\n  var self = this;\n  var promise;\n  callback = getCallback(options, callback);\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  if (maybeError(this, callback)) {\n    return promise;\n  }\n\n  options = getOptions(options);\n  this.db.del(key, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err));\n    }\n\n    self.emit('del', key);\n    callback();\n  });\n  return promise;\n};\n\nLevelUP.prototype.batch = function (arr, options, callback) {\n  if (!arguments.length) {\n    return new Batch(this);\n  }\n\n  if (!Array.isArray(arr)) {\n    throw new WriteError('batch() requires an array argument');\n  }\n\n  var self = this;\n  var promise;\n  callback = getCallback(options, callback);\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  if (maybeError(this, callback)) {\n    return promise;\n  }\n\n  options = getOptions(options);\n  this.db.batch(arr, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err));\n    }\n\n    self.emit('batch', arr);\n    callback();\n  });\n  return promise;\n};\n\nLevelUP.prototype.iterator = function (options) {\n  return this.db.iterator(options);\n};\n\nLevelUP.prototype.readStream = LevelUP.prototype.createReadStream = function (options) {\n  options = extend({\n    keys: true,\n    values: true\n  }, options);\n\n  if (typeof options.limit !== 'number') {\n    options.limit = -1;\n  }\n\n  return new IteratorStream(this.db.iterator(options), options);\n};\n\nLevelUP.prototype.keyStream = LevelUP.prototype.createKeyStream = function (options) {\n  return this.createReadStream(extend(options, {\n    keys: true,\n    values: false\n  }));\n};\n\nLevelUP.prototype.valueStream = LevelUP.prototype.createValueStream = function (options) {\n  return this.createReadStream(extend(options, {\n    keys: false,\n    values: true\n  }));\n};\n\nLevelUP.prototype.toString = function () {\n  return 'LevelUP';\n};\n\nfunction maybeError(db, callback) {\n  if (!db._isOpening() && !db.isOpen()) {\n    process.nextTick(callback, new ReadError('Database is not open'));\n    return true;\n  }\n}\n\nLevelUP.errors = errors;\nmodule.exports = LevelUP.default = LevelUP;","map":{"version":3,"names":["EventEmitter","require","inherits","extend","DeferredLevelDOWN","IteratorStream","Batch","errors","assert","promisify","getCallback","getOptions","WriteError","ReadError","NotFoundError","OpenError","InitializationError","LevelUP","db","options","callback","error","call","setMaxListeners","Infinity","process","nextTick","equal","status","_db","open","prototype","emit","once","self","promise","isOpen","_isOpening","err","close","apply","arguments","isClosed","test","get","key","undefined","maybeError","value","notFound","put","del","batch","arr","length","Array","isArray","iterator","readStream","createReadStream","keys","values","limit","keyStream","createKeyStream","valueStream","createValueStream","toString","module","exports","default"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/node_modules/levelup/lib/levelup.js"],"sourcesContent":["var EventEmitter = require('events').EventEmitter\nvar inherits = require('util').inherits\nvar extend = require('xtend')\nvar DeferredLevelDOWN = require('deferred-leveldown')\nvar IteratorStream = require('level-iterator-stream')\nvar Batch = require('./batch')\nvar errors = require('level-errors')\nvar assert = require('assert')\nvar promisify = require('./promisify')\nvar getCallback = require('./common').getCallback\nvar getOptions = require('./common').getOptions\n\nvar WriteError = errors.WriteError\nvar ReadError = errors.ReadError\nvar NotFoundError = errors.NotFoundError\nvar OpenError = errors.OpenError\nvar InitializationError = errors.InitializationError\n\n// Possible AbstractLevelDOWN#status values:\n//  - 'new'     - newly created, not opened or closed\n//  - 'opening' - waiting for the database to be opened, post open()\n//  - 'open'    - successfully opened the database, available for use\n//  - 'closing' - waiting for the database to be closed, post close()\n//  - 'closed'  - database has been successfully closed, should not be\n//                 used except for another open() operation\n\nfunction LevelUP (db, options, callback) {\n  if (!(this instanceof LevelUP)) {\n    return new LevelUP(db, options, callback)\n  }\n\n  var error\n\n  EventEmitter.call(this)\n  this.setMaxListeners(Infinity)\n\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  options = options || {}\n\n  if (!db || typeof db !== 'object') {\n    error = new InitializationError('First argument must be an abstract-leveldown compliant store')\n    if (typeof callback === 'function') {\n      return process.nextTick(callback, error)\n    }\n    throw error\n  }\n\n  assert.equal(typeof db.status, 'string', '.status required, old abstract-leveldown')\n\n  this.options = getOptions(options)\n  this._db = db\n  this.db = new DeferredLevelDOWN(db)\n  this.open(callback)\n}\n\nLevelUP.prototype.emit = EventEmitter.prototype.emit\nLevelUP.prototype.once = EventEmitter.prototype.once\ninherits(LevelUP, EventEmitter)\n\nLevelUP.prototype.open = function (callback) {\n  var self = this\n  var promise\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (this.isOpen()) {\n    process.nextTick(callback, null, self)\n    return promise\n  }\n\n  if (this._isOpening()) {\n    this.once('open', function () { callback(null, self) })\n    return promise\n  }\n\n  this.emit('opening')\n\n  this.db.open(this.options, function (err) {\n    if (err) {\n      return callback(new OpenError(err))\n    }\n    self.db = self._db\n    callback(null, self)\n    self.emit('open')\n    self.emit('ready')\n  })\n\n  return promise\n}\n\nLevelUP.prototype.close = function (callback) {\n  var self = this\n  var promise\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (this.isOpen()) {\n    this.db.close(function () {\n      self.emit('closed')\n      callback.apply(null, arguments)\n    })\n    this.emit('closing')\n    this.db = new DeferredLevelDOWN(this._db)\n  } else if (this.isClosed()) {\n    process.nextTick(callback)\n  } else if (this.db.status === 'closing') {\n    this.once('closed', callback)\n  } else if (this._isOpening()) {\n    this.once('open', function () {\n      self.close(callback)\n    })\n  }\n\n  return promise\n}\n\nLevelUP.prototype.isOpen = function () {\n  return this.db.status === 'open'\n}\n\nLevelUP.prototype._isOpening = function () {\n  return this.db.status === 'opening'\n}\n\nLevelUP.prototype.isClosed = function () {\n  return (/^clos|new/).test(this.db.status)\n}\n\nLevelUP.prototype.get = function (key, options, callback) {\n  if (key === null || key === undefined) {\n    throw new ReadError('get() requires a key argument')\n  }\n\n  var promise\n\n  callback = getCallback(options, callback)\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (maybeError(this, callback)) { return promise }\n\n  options = getOptions(options)\n\n  this.db.get(key, options, function (err, value) {\n    if (err) {\n      if ((/notfound/i).test(err) || err.notFound) {\n        err = new NotFoundError('Key not found in database [' + key + ']', err)\n      } else {\n        err = new ReadError(err)\n      }\n      return callback(err)\n    }\n    callback(null, value)\n  })\n\n  return promise\n}\n\nLevelUP.prototype.put = function (key, value, options, callback) {\n  if (key === null || key === undefined) {\n    throw new WriteError('put() requires a key argument')\n  }\n\n  var self = this\n  var promise\n\n  callback = getCallback(options, callback)\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (maybeError(this, callback)) { return promise }\n\n  options = getOptions(options)\n\n  this.db.put(key, value, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err))\n    }\n    self.emit('put', key, value)\n    callback()\n  })\n\n  return promise\n}\n\nLevelUP.prototype.del = function (key, options, callback) {\n  if (key === null || key === undefined) {\n    throw new WriteError('del() requires a key argument')\n  }\n\n  var self = this\n  var promise\n\n  callback = getCallback(options, callback)\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (maybeError(this, callback)) { return promise }\n\n  options = getOptions(options)\n\n  this.db.del(key, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err))\n    }\n    self.emit('del', key)\n    callback()\n  })\n\n  return promise\n}\n\nLevelUP.prototype.batch = function (arr, options, callback) {\n  if (!arguments.length) {\n    return new Batch(this)\n  }\n\n  if (!Array.isArray(arr)) {\n    throw new WriteError('batch() requires an array argument')\n  }\n\n  var self = this\n  var promise\n\n  callback = getCallback(options, callback)\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (maybeError(this, callback)) { return promise }\n\n  options = getOptions(options)\n\n  this.db.batch(arr, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err))\n    }\n    self.emit('batch', arr)\n    callback()\n  })\n\n  return promise\n}\n\nLevelUP.prototype.iterator = function (options) {\n  return this.db.iterator(options)\n}\n\nLevelUP.prototype.readStream =\nLevelUP.prototype.createReadStream = function (options) {\n  options = extend({ keys: true, values: true }, options)\n  if (typeof options.limit !== 'number') { options.limit = -1 }\n  return new IteratorStream(this.db.iterator(options), options)\n}\n\nLevelUP.prototype.keyStream =\nLevelUP.prototype.createKeyStream = function (options) {\n  return this.createReadStream(extend(options, { keys: true, values: false }))\n}\n\nLevelUP.prototype.valueStream =\nLevelUP.prototype.createValueStream = function (options) {\n  return this.createReadStream(extend(options, { keys: false, values: true }))\n}\n\nLevelUP.prototype.toString = function () {\n  return 'LevelUP'\n}\n\nfunction maybeError (db, callback) {\n  if (!db._isOpening() && !db.isOpen()) {\n    process.nextTick(callback, new ReadError('Database is not open'))\n    return true\n  }\n}\n\nLevelUP.errors = errors\nmodule.exports = LevelUP.default = LevelUP\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}