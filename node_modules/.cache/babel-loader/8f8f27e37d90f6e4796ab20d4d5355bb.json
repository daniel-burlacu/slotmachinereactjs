{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar asyncLib = require('async');\n\nvar Tree = require('functional-red-black-tree');\n\nvar ethereumjs_account_1 = require(\"ethereumjs-account\");\n/**\n * @ignore\n */\n\n\nvar Cache =\n/** @class */\nfunction () {\n  function Cache(trie) {\n    this._cache = Tree();\n    this._checkpoints = [];\n    this._trie = trie;\n  }\n  /**\n   * Puts account to cache under its address.\n   * @param key - Address of account\n   * @param val - Account\n   */\n\n\n  Cache.prototype.put = function (key, val, fromTrie) {\n    if (fromTrie === void 0) {\n      fromTrie = false;\n    }\n\n    var modified = !fromTrie;\n\n    this._update(key, val, modified, false);\n  };\n  /**\n   * Returns the queried account or an empty account.\n   * @param key - Address of account\n   */\n\n\n  Cache.prototype.get = function (key) {\n    var account = this.lookup(key);\n\n    if (!account) {\n      account = new ethereumjs_account_1.default();\n    }\n\n    return account;\n  };\n  /**\n   * Returns the queried account or undefined.\n   * @param key - Address of account\n   */\n\n\n  Cache.prototype.lookup = function (key) {\n    var keyStr = key.toString('hex');\n\n    var it = this._cache.find(keyStr);\n\n    if (it.node) {\n      var account = new ethereumjs_account_1.default(it.value.val);\n      return account;\n    }\n  };\n  /**\n   * Looks up address in underlying trie.\n   * @param address - Address of account\n   * @param cb - Callback with params (err, account)\n   */\n\n\n  Cache.prototype._lookupAccount = function (address, cb) {\n    this._trie.get(address, function (err, raw) {\n      if (err) return cb(err);\n      var account = new ethereumjs_account_1.default(raw);\n      cb(null, account);\n    });\n  };\n  /**\n   * Looks up address in cache, if not found, looks it up\n   * in the underlying trie.\n   * @param key - Address of account\n   * @param cb - Callback with params (err, account)\n   */\n\n\n  Cache.prototype.getOrLoad = function (key, cb) {\n    var _this = this;\n\n    var account = this.lookup(key);\n\n    if (account) {\n      asyncLib.nextTick(cb, null, account);\n    } else {\n      this._lookupAccount(key, function (err, account) {\n        if (err) return cb(err);\n\n        _this._update(key, account, false, false);\n\n        cb(null, account);\n      });\n    }\n  };\n  /**\n   * Warms cache by loading their respective account from trie\n   * and putting them in cache.\n   * @param addresses - Array of addresses\n   * @param cb - Callback\n   */\n\n\n  Cache.prototype.warm = function (addresses, cb) {\n    var _this = this; // shim till async supports iterators\n\n\n    var accountArr = [];\n    addresses.forEach(function (val) {\n      if (val) accountArr.push(val);\n    });\n    asyncLib.eachSeries(accountArr, function (addressHex, done) {\n      var address = Buffer.from(addressHex, 'hex');\n\n      _this._lookupAccount(address, function (err, account) {\n        if (err) return done(err);\n\n        _this._update(address, account, false, false);\n\n        done();\n      });\n    }, cb);\n  };\n  /**\n   * Flushes cache by updating accounts that have been modified\n   * and removing accounts that have been deleted.\n   * @param cb - Callback\n   */\n\n\n  Cache.prototype.flush = function (cb) {\n    var _this = this;\n\n    var it = this._cache.begin;\n    var next = true;\n    asyncLib.whilst(function () {\n      return next;\n    }, function (done) {\n      if (it.value && it.value.modified) {\n        it.value.modified = false;\n        it.value.val = it.value.val.serialize();\n\n        _this._trie.put(Buffer.from(it.key, 'hex'), it.value.val, function (err) {\n          if (err) return done(err);\n          next = it.hasNext;\n          it.next();\n          done();\n        });\n      } else if (it.value && it.value.deleted) {\n        it.value.modified = false;\n        it.value.deleted = false;\n        it.value.val = new ethereumjs_account_1.default().serialize();\n\n        _this._trie.del(Buffer.from(it.key, 'hex'), function (err) {\n          if (err) return done(err);\n          next = it.hasNext;\n          it.next();\n          done();\n        });\n      } else {\n        next = it.hasNext;\n        it.next();\n        asyncLib.nextTick(done);\n      }\n    }, cb);\n  };\n  /**\n   * Marks current state of cache as checkpoint, which can\n   * later on be reverted or commited.\n   */\n\n\n  Cache.prototype.checkpoint = function () {\n    this._checkpoints.push(this._cache);\n  };\n  /**\n   * Revert changes to cache last checkpoint (no effect on trie).\n   */\n\n\n  Cache.prototype.revert = function () {\n    this._cache = this._checkpoints.pop();\n  };\n  /**\n   * Commits to current state of cache (no effect on trie).\n   */\n\n\n  Cache.prototype.commit = function () {\n    this._checkpoints.pop();\n  };\n  /**\n   * Clears cache.\n   */\n\n\n  Cache.prototype.clear = function () {\n    this._cache = Tree();\n  };\n  /**\n   * Marks address as deleted in cache.\n   * @param key - Address\n   */\n\n\n  Cache.prototype.del = function (key) {\n    this._update(key, new ethereumjs_account_1.default(), false, true);\n  };\n\n  Cache.prototype._update = function (key, val, modified, deleted) {\n    var keyHex = key.toString('hex');\n\n    var it = this._cache.find(keyHex);\n\n    if (it.node) {\n      this._cache = it.update({\n        val: val,\n        modified: modified,\n        deleted: deleted\n      });\n    } else {\n      this._cache = this._cache.insert(keyHex, {\n        val: val,\n        modified: modified,\n        deleted: deleted\n      });\n    }\n  };\n\n  return Cache;\n}();\n\nexports.default = Cache;","map":{"version":3,"mappings":"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","names":["asyncLib","require","Tree","trie","_cache","_checkpoints","_trie","Cache","key","val","fromTrie","modified","_update","account","lookup","ethereumjs_account_1","keyStr","toString","it","find","node","value","address","cb","get","err","raw","nextTick","_lookupAccount","_this","addresses","accountArr","forEach","push","eachSeries","addressHex","done","Buffer","from","begin","next","whilst","serialize","put","hasNext","deleted","del","pop","keyHex","update","insert"],"sources":["../../lib/state/cache.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}