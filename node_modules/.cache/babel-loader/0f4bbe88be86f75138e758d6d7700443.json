{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CallHistory = void 0;\n\nconst ethers_1 = require(\"ethers\");\n\nclass CallHistory {\n  constructor() {\n    this.recordedCalls = [];\n  }\n\n  clear() {\n    this.recordedCalls = [];\n  }\n\n  getCalls() {\n    return this.recordedCalls;\n  }\n\n  record(provider) {\n    addVmListener(provider, 'beforeMessage', message => {\n      this.recordedCalls.push(toRecordedCall(message));\n    });\n  }\n\n}\n\nexports.CallHistory = CallHistory;\n\nfunction addVmListener(provider, event, handler) {\n  const {\n    blockchain\n  } = provider.provider.engine.manager.state;\n  const createVMFromStateTrie = blockchain.createVMFromStateTrie;\n\n  blockchain.createVMFromStateTrie = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const vm = createVMFromStateTrie.apply(this, args);\n    vm.on(event, handler);\n    return vm;\n  };\n}\n\nfunction toRecordedCall(message) {\n  return {\n    address: message.to ? ethers_1.utils.getAddress(ethers_1.utils.hexlify(message.to)) : undefined,\n    data: message.data ? ethers_1.utils.hexlify(message.data) : '0x'\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","CallHistory","ethers_1","require","constructor","recordedCalls","clear","getCalls","record","provider","addVmListener","message","push","toRecordedCall","event","handler","blockchain","engine","manager","state","createVMFromStateTrie","args","vm","apply","on","address","to","utils","getAddress","hexlify","undefined","data"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/provider/dist/cjs/CallHistory.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallHistory = void 0;\nconst ethers_1 = require(\"ethers\");\nclass CallHistory {\n    constructor() {\n        this.recordedCalls = [];\n    }\n    clear() {\n        this.recordedCalls = [];\n    }\n    getCalls() {\n        return this.recordedCalls;\n    }\n    record(provider) {\n        addVmListener(provider, 'beforeMessage', (message) => {\n            this.recordedCalls.push(toRecordedCall(message));\n        });\n    }\n}\nexports.CallHistory = CallHistory;\nfunction addVmListener(provider, event, handler) {\n    const { blockchain } = provider.provider.engine.manager.state;\n    const createVMFromStateTrie = blockchain.createVMFromStateTrie;\n    blockchain.createVMFromStateTrie = function (...args) {\n        const vm = createVMFromStateTrie.apply(this, args);\n        vm.on(event, handler);\n        return vm;\n    };\n}\nfunction toRecordedCall(message) {\n    return {\n        address: message.to ? ethers_1.utils.getAddress(ethers_1.utils.hexlify(message.to)) : undefined,\n        data: message.data ? ethers_1.utils.hexlify(message.data) : '0x'\n    };\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMF,WAAN,CAAkB;EACdG,WAAW,GAAG;IACV,KAAKC,aAAL,GAAqB,EAArB;EACH;;EACDC,KAAK,GAAG;IACJ,KAAKD,aAAL,GAAqB,EAArB;EACH;;EACDE,QAAQ,GAAG;IACP,OAAO,KAAKF,aAAZ;EACH;;EACDG,MAAM,CAACC,QAAD,EAAW;IACbC,aAAa,CAACD,QAAD,EAAW,eAAX,EAA6BE,OAAD,IAAa;MAClD,KAAKN,aAAL,CAAmBO,IAAnB,CAAwBC,cAAc,CAACF,OAAD,CAAtC;IACH,CAFY,CAAb;EAGH;;AAda;;AAgBlBZ,OAAO,CAACE,WAAR,GAAsBA,WAAtB;;AACA,SAASS,aAAT,CAAuBD,QAAvB,EAAiCK,KAAjC,EAAwCC,OAAxC,EAAiD;EAC7C,MAAM;IAAEC;EAAF,IAAiBP,QAAQ,CAACA,QAAT,CAAkBQ,MAAlB,CAAyBC,OAAzB,CAAiCC,KAAxD;EACA,MAAMC,qBAAqB,GAAGJ,UAAU,CAACI,qBAAzC;;EACAJ,UAAU,CAACI,qBAAX,GAAmC,YAAmB;IAAA,kCAANC,IAAM;MAANA,IAAM;IAAA;;IAClD,MAAMC,EAAE,GAAGF,qBAAqB,CAACG,KAAtB,CAA4B,IAA5B,EAAkCF,IAAlC,CAAX;IACAC,EAAE,CAACE,EAAH,CAAMV,KAAN,EAAaC,OAAb;IACA,OAAOO,EAAP;EACH,CAJD;AAKH;;AACD,SAAST,cAAT,CAAwBF,OAAxB,EAAiC;EAC7B,OAAO;IACHc,OAAO,EAAEd,OAAO,CAACe,EAAR,GAAaxB,QAAQ,CAACyB,KAAT,CAAeC,UAAf,CAA0B1B,QAAQ,CAACyB,KAAT,CAAeE,OAAf,CAAuBlB,OAAO,CAACe,EAA/B,CAA1B,CAAb,GAA6EI,SADnF;IAEHC,IAAI,EAAEpB,OAAO,CAACoB,IAAR,GAAe7B,QAAQ,CAACyB,KAAT,CAAeE,OAAf,CAAuBlB,OAAO,CAACoB,IAA/B,CAAf,GAAsD;EAFzD,CAAP;AAIH"},"metadata":{},"sourceType":"script"}