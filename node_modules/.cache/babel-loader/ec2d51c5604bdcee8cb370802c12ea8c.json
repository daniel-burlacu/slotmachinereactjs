{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\ReelSet.js\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useEffect, useRef, useState } from \"react\";\nimport Constants from \"../Constants\";\nimport Bet from \"./Bet\";\nimport Withdrawal from \"./Withdrawal\";\nimport \"../assets/css/App.css\";\nimport Reel from \"./Reel\";\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet bet = 0;\nlet score = 2;\nlet myScore = score;\n\nconst ReelSet = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [rolling, setRolling] = useState(false);\n  const [gameOn, setGameOn] = useState(0);\n  let spinResults = [];\n  let spinResultsIdx = [];\n  const reel = useRef();\n  let winningLines = [];\n  let countWin = 0;\n  let symbolSellection = [];\n\n  const drawScore = (lineNumberType, fool) => {\n    console.log(\"We are in drawScore\");\n    let newScore = 0;\n\n    if (fool) {\n      lineNumberType = 18;\n    }\n\n    switch (lineNumberType) {\n      case 0:\n        // top line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 1:\n        // middle line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 2:\n        // bottom line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 3:\n        // V shape starting bottom left\n        //        audioWin.play();\n        newScore = 0.2;\n        break;\n\n      case 4:\n        // V shape starting bottom right\n        //        audioWin.play();\n        newScore = 0.2;\n        break;\n\n      case 5:\n        // W shape starting top left\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 6:\n        // M shape starting bottom left\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 7:\n        // M shape on top half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 8:\n        // W shape on top half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 9:\n        //W shape on bottom half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 10:\n        // M shape on bottom half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 11:\n        // U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 12:\n        // inverse U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 13:\n        // U shape on bottom half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 14:\n        // inverse U shape on bottom half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 15:\n        // inverse U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 16:\n        // Z shape from top left\n        //        audioWin.play();\n        newScore = 0.4;\n        break;\n\n      case 17:\n        // Z shape from bottom left\n        //        audioWin.play();\n        newScore = 0.4;\n        break;\n\n      case 18:\n        // Z shape from bottom left\n        //        audioWinBonus.play();\n        newScore = 100;\n        break;\n\n      default:\n        newScore = 0;\n    }\n\n    if (gameOn > 0) {\n      console.log(\"My newScore is:\" + newScore);\n      setMyScore(newScore);\n    }\n\n    return;\n  };\n\n  const renderReels = () => {\n    console.log(\"We are in renderReels\");\n    let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(Reel, {\n        reel: el,\n        index: idx,\n        game: gameOn,\n        opacity: 1,\n        createArray: callbackCreateArray\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 14\n      }, this);\n    });\n    setTimeout(() => {\n      if (spinResults.length > 0) {\n        console.log(\"My array length is:\" + spinResults.length);\n        console.log(\"My current score is:\" + score);\n        checkWin();\n      }\n    }, 7500);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: reelList\n    }, void 0, false);\n  };\n\n  const checkLinesElements = symbol => {\n    console.log(\"We are in checkLinesElements\");\n    countWin++;\n    let symNr = 0;\n    let fool = 0;\n\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      fool = 0;\n      symNr = 0;\n\n      for (let j = 0; j < Constants.LINES[i].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n\n        if (symbol === spinResults[indexI][indexJ]) {\n          symNr++;\n        }\n      }\n\n      if (fool + symNr === 5 && fool < 4) {\n        winningLines.push(i);\n      }\n    }\n\n    winningLines = uniq(winningLines);\n  };\n\n  const uniq = a => {\n    return a.sort().filter(function (item, pos, ary) {\n      return !pos || item !== ary[pos - 1];\n    });\n  };\n\n  const checkElements = () => {\n    console.log(\"We are in checkElements\");\n    let fool = 0;\n\n    for (let k = 0; k < 3; k++) {\n      fool = 0;\n\n      for (let i = 0; i < spinResults.length; i++) {\n        let symb = \"\";\n\n        for (let j = k; j < spinResults[i].length; j++) {\n          if (spinResults[i][j] !== \"D\") {\n            symb = spinResults[i][j];\n            j = spinResults[i].length;\n          } else {\n            fool++;\n            j = spinResults[i].length;\n          }\n        }\n\n        if (fool < 4 && symb !== \"\") {\n          symbolSellection.push(symb);\n        }\n      }\n    }\n\n    for (let i = 0; i < symbolSellection.length; i++) {\n      checkLinesElements(symbolSellection[i]);\n    }\n  };\n\n  const setBetZero = () => {\n    bet = 0;\n  };\n\n  const handleScore = e => {\n    // /  const [gameScore, setGameScore] = useState({score:0, bet:0})\n    score = Math.round((score + e) * 100) / 100;\n    console.log(\"mySetGameScore = \" + score); //setGameScore(score);\n    // props.dadCallback(score)\n  };\n\n  const setMyScore = e => {\n    console.log(\"We are in setMyScore\");\n    let scr = 0;\n\n    if (bet > 0 && e > 0) {\n      scr = scr + (e + bet * e);\n      scr = Math.round(scr * 100) / 100;\n    } else if (bet > 0 && e === 0) {\n      scr = scr - (e + bet * e);\n      scr = Math.round(scr * 100) / 100;\n    } else if (bet === 0 && e > 0) {\n      scr = Math.round((scr + e) * 100) / 100;\n    }\n\n    handleScore(scr); //  setScore(scr);\n  };\n\n  const checkFourFools = () => {\n    console.log(\"We are in checkFourFools\");\n\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      let fool = 0;\n\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n      }\n\n      if (fool === 4) {\n        winningLines.push(i);\n        drawScore(i, false);\n      }\n    }\n  };\n\n  const evaluatespinResults = () => {\n    console.log(\"We are in evaluatespinResults\");\n    checkFourFools();\n    checkElements(); //highLightWinningLines(0);\n\n    console.log(\"We have found these many lines: \" + winningLines.length);\n\n    if (winningLines.length > 0) {\n      for (let i = 0; i < winningLines.length; i++) {\n        drawScore(winningLines[i], false);\n      }\n    } else {\n      if (score - bet >= 0.2) {\n        score = Math.round((score - bet) * 100) / 100;\n        console.log(\"decreasing score to :\" + score); // props.setScore(score);\n        //  setScore(scr);\n        //handleScore(scr);\n\n        if (score < bet) {\n          setBetZero();\n        }\n      } else if (score - bet === 0) {\n        setBetZero();\n        score = 0; //  setScore(scr);\n        //handleScore(scr);\n      }\n    } //winningLines=[];\n\n  };\n\n  const checkFiveFools = () => {\n    console.log(\"We are in checkFiveFools\");\n    let fl = false;\n\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      let fool = 0;\n\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n        console.log(\"\");\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n      }\n\n      if (fool === 5) {\n        fl = true;\n        winningLines.push(i);\n        drawScore(i, true); //  highLightWinningLines(0);\n\n        break;\n      }\n    }\n\n    return fl;\n  };\n\n  const checkWin = () => {\n    console.log(\"We are in checkWin\");\n\n    if (gameOn > 0) {\n      let fool = checkFiveFools();\n\n      if (!fool) {\n        evaluatespinResults();\n      }\n    }\n  };\n\n  const turnOffLights = () => {\n    for (let i = 0; i < 5; i++) {\n      for (let j = 0; j < 3; j++) {\n        reel.current.childNodes[i].firstChild.children[0].attributes[2].value = \"opacity: 0.3\";\n      }\n    }\n  };\n\n  useEffect(() => {\n    //                                               reel[0]\n    // console.log(\"My reels DOM are: \"+reel.current.childNodes[0].childNodes[0].childNodes[(spinResultsIdx[0])[0]].attributes[2].nodeValue);\n    // reel.current.childNodes[0].childNodes[0].childNodes[(spinResultsIdx[0])[0]].attributes[2].nodeValue)=\"opacity: 1;\"\n    if (gameOn > 0 && reel.current.childNodes[0].firstChild.childElementCount === 100 && reel.current.children[0].children[0].children[50].attributes[2] !== undefined) {\n      console.log(\"How many childs we have ? => \" + reel.current.childNodes[0].firstChild.childElementCount);\n      console.log(\"My image Value is:\" + reel.current.childNodes[0].firstChild.children[0].attributes[2].value);\n      console.log(\"My spin image location is: \" + spinResultsIdx[0][1]);\n      let imagePoz = spinResultsIdx[0][1];\n      console.log(\"My imagePoz image location is: \" + imagePoz);\n      reel.current.childNodes[0].firstChild.children[9].attributes[2].value = \"opacity: 0.3\"; // reel.current.children[0].children[0].children[50].attributes[2]===undefined)\n\n      console.log(\"Another way to count elements: \" + reel.current.children[0].children[0].children[50].attributes[2]); // console.log(\"My reels DOM are: \"+reel.current.childNodes[0].firstChild.children[0].attributes[2].value);\n      //checkWin();\n    }\n\n    console.log(\"My useEffect symbols are: \" + spinResults);\n    console.log(\"My useEffect spinResultsIdx number of elements are: \" + spinResultsIdx.length);\n    console.log(\"My useEffect pos are: \" + spinResultsIdx);\n    console.log(\"score is \" + score + \" => gameOn is: \" + gameOn);\n    myScore = score;\n  }, [gameOn]);\n\n  const callbackBet = e => {\n    bet = e;\n  };\n\n  const spinReel = () => {\n    console.log(\"We ar ein spinReel\");\n\n    if (bet === 0 && score > 0) {\n      alert(\"Please set a bet !!!\");\n    } else if (bet === 0 && score === 0) {\n      alert(\"Game Over !!! You are you are out of cash !!!\");\n    } else {\n      setGameOn(gameOn + 1); //     checkWin();\n    }\n\n    console.log(\"My spinResults list size is:\" + spinResults.length);\n  };\n\n  const callbackCreateArray = (reelIdx, reel) => {\n    console.log(\"Receiving callback Array: \" + reel);\n    spinResults.push(reel);\n    spinResultsIdx.push(reelIdx);\n    return winningLines;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      id: \"jackpot\",\n      children: [\"Jackpot: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"playContainer\",\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"reelSet\",\n          ref: reel,\n          children: renderReels()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !rolling ? \"roll rolling\" : \"roll\",\n        onClick: () => {\n          spinReel();\n        },\n        disabled: rolling,\n        children: rolling ? \"Rolling...\" : \"ROLL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Withdrawal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Bet, {\n        score: score,\n        setBet: callbackBet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"score\",\n          children: myScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"COtPvNVngb8I2brDWQANmW0qrNA=\")), \"COtPvNVngb8I2brDWQANmW0qrNA=\");\n\n_c2 = ReelSet;\nexport default ReelSet;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReelSet$forwardRef\");\n$RefreshReg$(_c2, \"ReelSet\");","map":{"version":3,"names":["React","forwardRef","useEffect","useRef","useState","Constants","Bet","Withdrawal","Reel","motion","bet","score","myScore","ReelSet","props","ref","rolling","setRolling","gameOn","setGameOn","spinResults","spinResultsIdx","reel","winningLines","countWin","symbolSellection","drawScore","lineNumberType","fool","console","log","newScore","setMyScore","renderReels","reelList","Array","apply","REELS","map","el","idx","callbackCreateArray","setTimeout","length","checkWin","checkLinesElements","symbol","symNr","i","LINES","j","indexI","indexJ","push","uniq","a","sort","filter","item","pos","ary","checkElements","k","symb","setBetZero","handleScore","e","Math","round","scr","checkFourFools","evaluatespinResults","checkFiveFools","fl","turnOffLights","current","childNodes","firstChild","children","attributes","value","childElementCount","undefined","imagePoz","callbackBet","spinReel","alert","reelIdx"],"sources":["F:/Games/slotmachinereact/src/components/ReelSet.js"],"sourcesContent":["import React, { forwardRef, useEffect, useRef, useState} from \"react\";\r\nimport Constants from \"../Constants\";\r\nimport Bet from \"./Bet\";\r\nimport Withdrawal from \"./Withdrawal\";\r\nimport \"../assets/css/App.css\";\r\nimport Reel from \"./Reel\";\r\nimport {motion} from 'framer-motion';\r\n\r\n\r\nlet bet=0;\r\nlet score=2;\r\nlet myScore=score;\r\n\r\nconst ReelSet = forwardRef((props, ref) => {\r\n  const [rolling, setRolling] = useState(false);\r\n  const [gameOn, setGameOn] = useState(0);\r\n  \r\n  let spinResults = [];\r\n  let spinResultsIdx = [];\r\n  const reel= useRef();\r\n  let winningLines = [];\r\n  let countWin = 0;\r\n  let symbolSellection = [];\r\n\r\n  const drawScore = (lineNumberType, fool) => {\r\n    console.log(\"We are in drawScore\");\r\n    let newScore = 0;\r\n    if (fool) {\r\n      lineNumberType = 18;\r\n    }\r\n    switch (lineNumberType) {\r\n      case 0: // top line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 1: // middle line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 2: // bottom line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 3: // V shape starting bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 4: // V shape starting bottom right\r\n        //        audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 5: // W shape starting top left\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 6: // M shape starting bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 7: // M shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 8: // W shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 9: //W shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 10: // M shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 11: // U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 12: // inverse U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 13: // U shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 14: // inverse U shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 15: // inverse U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 16: // Z shape from top left\r\n        //        audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 17: // Z shape from bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 18: // Z shape from bottom left\r\n        //        audioWinBonus.play();\r\n        newScore = 100;\r\n        break;\r\n      default:\r\n        newScore = 0;\r\n    }\r\n\r\n    if (gameOn > 0) {\r\n      console.log(\"My newScore is:\"+newScore);\r\n      setMyScore(newScore);\r\n    }\r\n    return;\r\n  };\r\n  \r\n  const renderReels=()=>{\r\n    console.log(\"We are in renderReels\");\r\n      let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\r\n      return <Reel reel={el} key={idx} index={idx} game={gameOn} opacity={1} createArray={callbackCreateArray}/>});\r\n   \r\n      setTimeout(()=>{\r\n        if(spinResults.length>0){\r\n        console.log(\"My array length is:\"+spinResults.length);\r\n        console.log(\"My current score is:\"+score);\r\n        checkWin();\r\n      }\r\n      },7500)\r\n\r\n      return <>{reelList}</>;\r\n  }\r\n\r\n\r\n  const checkLinesElements = (symbol) => {\r\n    console.log(\"We are in checkLinesElements\");\r\n    countWin++;\r\n    let symNr = 0;\r\n    let fool = 0;\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      fool = 0;\r\n      symNr = 0;\r\n      for (let j = 0; j < Constants.LINES[i].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n        if (symbol === spinResults[indexI][indexJ]) {\r\n          symNr++;\r\n        }\r\n      }\r\n      if (fool + symNr === 5 && fool < 4) {\r\n        winningLines.push(i);\r\n      }\r\n    }\r\n    winningLines = uniq(winningLines);\r\n  };\r\n\r\n  const uniq = (a) => {\r\n    return a.sort().filter(function (item, pos, ary) {\r\n      return !pos || item !== ary[pos - 1];\r\n    });\r\n  };\r\n\r\n  const checkElements = () => {\r\n    console.log(\"We are in checkElements\");\r\n    let fool = 0;\r\n    for (let k = 0; k < 3; k++) {\r\n      fool = 0;\r\n      for (let i = 0; i < spinResults.length; i++) {\r\n        let symb = \"\";\r\n        for (let j = k; j < spinResults[i].length; j++) {\r\n          if (spinResults[i][j] !== \"D\") {\r\n            symb = spinResults[i][j];\r\n            j = spinResults[i].length;\r\n          } else {\r\n            fool++;\r\n            j = spinResults[i].length;\r\n          }\r\n        }\r\n        if (fool < 4 && symb !== \"\") {\r\n          symbolSellection.push(symb);\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < symbolSellection.length; i++) {\r\n      checkLinesElements(symbolSellection[i]);\r\n    }\r\n  };\r\n\r\n  const setBetZero = () => {\r\n    bet = 0;\r\n  };\r\n\r\n  const handleScore = (e) => {\r\n    // /  const [gameScore, setGameScore] = useState({score:0, bet:0})\r\n\r\n    score = Math.round((score + e) * 100) / 100;\r\n\r\n      console.log(\"mySetGameScore = \"+score);\r\n      \r\n    //setGameScore(score);\r\n    // props.dadCallback(score)\r\n  };\r\n\r\n  const setMyScore = (e) => {\r\n    console.log(\"We are in setMyScore\");\r\n    let scr = 0;\r\n\r\n    if (bet > 0 && e > 0) {\r\n      scr = scr + (e + bet * e);\r\n      scr = Math.round(scr * 100) / 100;\r\n    } else if (bet > 0 && e === 0) {\r\n      scr = scr - (e + bet * e);\r\n     \r\n      scr = Math.round(scr * 100) / 100;\r\n    } else if (bet === 0 && e > 0) {\r\n    \r\n      scr = Math.round((scr + e) * 100) / 100;\r\n    }\r\n   \r\n    handleScore(scr);\r\n    //  setScore(scr);\r\n  };\r\n\r\n  const checkFourFools = () => {\r\n    console.log(\"We are in checkFourFools\");\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n   \r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n      }\r\n   \r\n      if (fool === 4) {\r\n        winningLines.push(i);\r\n        drawScore(i, false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const evaluatespinResults = () => {\r\n    console.log(\"We are in evaluatespinResults\")\r\n    checkFourFools();\r\n    checkElements();\r\n    //highLightWinningLines(0);\r\n    console.log(\"We have found these many lines: \"+winningLines.length);\r\n    if (winningLines.length > 0) {\r\n      for (let i = 0; i < winningLines.length; i++) {\r\n        drawScore(winningLines[i], false);\r\n      }\r\n    } else {\r\n      if (score - bet >= 0.2) {\r\n        score = Math.round((score - bet) * 100) / 100;\r\n        console.log(\"decreasing score to :\"+score);\r\n      // props.setScore(score);\r\n        //  setScore(scr);\r\n        //handleScore(scr);\r\n\r\n        if (score < bet) {\r\n          setBetZero();\r\n        }\r\n      } else if (score - bet === 0) {\r\n        setBetZero();\r\n        score = 0;\r\n        //  setScore(scr);\r\n        //handleScore(scr);\r\n      }\r\n    }\r\n    //winningLines=[];\r\n  };\r\n\r\n\r\n  const checkFiveFools = () => {\r\n    console.log(\"We are in checkFiveFools\");\r\n    let fl = false;\r\n   \r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n        console.log(\"\");\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n      }\r\n \r\n      if (fool === 5) {\r\n        fl = true;\r\n        winningLines.push(i);\r\n        drawScore(i, true);\r\n        //  highLightWinningLines(0);\r\n        break;\r\n      }\r\n    }\r\n\r\n    return fl;\r\n  };\r\n\r\n\r\n  const checkWin = () => {\r\n    console.log(\"We are in checkWin\");\r\n    if (gameOn > 0) {\r\n      let fool = checkFiveFools();\r\n      if (!fool) {\r\n        evaluatespinResults();\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const turnOffLights = () =>{\r\n    for(let i=0; i<5;i++){\r\n      for(let j=0; j<3;j++){\r\n        reel.current.childNodes[i].firstChild.children[0].attributes[2].value=\"opacity: 0.3\";\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    \r\n    //                                               reel[0]\r\n  // console.log(\"My reels DOM are: \"+reel.current.childNodes[0].childNodes[0].childNodes[(spinResultsIdx[0])[0]].attributes[2].nodeValue);\r\n  // reel.current.childNodes[0].childNodes[0].childNodes[(spinResultsIdx[0])[0]].attributes[2].nodeValue)=\"opacity: 1;\"\r\n   if(gameOn>0 && reel.current.childNodes[0].firstChild.childElementCount===100 &&  reel.current.children[0].children[0].children[50].attributes[2]!==undefined){\r\n    console.log(\"How many childs we have ? => \"+reel.current.childNodes[0].firstChild.childElementCount);\r\n    console.log(\"My image Value is:\"+reel.current.childNodes[0].firstChild.children[0].attributes[2].value);\r\n    console.log(\"My spin image location is: \"+(spinResultsIdx[0])[1]);\r\n    let imagePoz=(spinResultsIdx[0])[1];\r\n    console.log(\"My imagePoz image location is: \"+imagePoz);\r\n    reel.current.childNodes[0].firstChild.children[9].attributes[2].value=\"opacity: 0.3\";\r\n \r\n// reel.current.children[0].children[0].children[50].attributes[2]===undefined)\r\n    console.log(\"Another way to count elements: \"+reel.current.children[0].children[0].children[50].attributes[2]);\r\n\r\n   // console.log(\"My reels DOM are: \"+reel.current.childNodes[0].firstChild.children[0].attributes[2].value);\r\n   //checkWin();\r\n   }\r\n    console.log(\"My useEffect symbols are: \"+spinResults);\r\n    console.log(\"My useEffect spinResultsIdx number of elements are: \"+spinResultsIdx.length);\r\n    console.log(\"My useEffect pos are: \"+spinResultsIdx);\r\n\r\n    console.log(\"score is \"+score+\" => gameOn is: \"+gameOn);\r\n    \r\n    myScore=score;\r\n  },[gameOn])\r\n\r\n  const callbackBet = (e) => {\r\n    bet = e;\r\n  };\r\n\r\n  const spinReel = () => {\r\n    console.log(\"We ar ein spinReel\");\r\n    if (bet === 0 && score > 0) {\r\n      alert(\"Please set a bet !!!\");\r\n    } else if (bet === 0 && score === 0) {\r\n      alert(\"Game Over !!! You are you are out of cash !!!\");\r\n    } else {\r\n      setGameOn(gameOn + 1);\r\n //     checkWin();\r\n    }\r\n    console.log(\"My spinResults list size is:\"+spinResults.length) \r\n}\r\n\r\n  const callbackCreateArray = (reelIdx, reel) => {\r\n    console.log(\"Receiving callback Array: \"+reel);\r\n    spinResults.push(reel);\r\n    spinResultsIdx.push(reelIdx);\r\n\r\n    return winningLines;\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <motion.div id=\"jackpot\" >\r\n    Jackpot: <span>100</span>\r\n  </motion.div>\r\n      <motion.div className=\"container\" >\r\n        <motion.div className=\"playContainer\">\r\n          <motion.div  className=\"reelSet\" ref={reel}>\r\n            {renderReels()}\r\n          </motion.div>\r\n        </motion.div>\r\n      </motion.div>\r\n            <div id=\"controls\">\r\n            <div\r\n              className={!rolling ? \"roll rolling\" : \"roll\"}\r\n              onClick={() => {\r\n                spinReel();\r\n              }}\r\n              disabled={rolling} >\r\n              {rolling ? \"Rolling...\" : \"ROLL\"}\r\n            </div>\r\n            <Withdrawal/>\r\n            <Bet score={score} setBet={callbackBet} />\r\n            <label>\r\n              Score:<span id=\"score\">{myScore}</span>\r\n            </label>\r\n          </div>\r\n          </>\r\n  );\r\n});\r\n\r\nexport default ReelSet;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA8D,OAA9D;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,uBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,MAAR,QAAqB,eAArB;;;AAGA,IAAIC,GAAG,GAAC,CAAR;AACA,IAAIC,KAAK,GAAC,CAAV;AACA,IAAIC,OAAO,GAACD,KAAZ;;AAEA,MAAME,OAAO,iCAAGZ,UAAU,SAAC,CAACa,KAAD,EAAQC,GAAR,KAAgB;EAAA;;EACzC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,CAAD,CAApC;EAEA,IAAIgB,WAAW,GAAG,EAAlB;EACA,IAAIC,cAAc,GAAG,EAArB;EACA,MAAMC,IAAI,GAAEnB,MAAM,EAAlB;EACA,IAAIoB,YAAY,GAAG,EAAnB;EACA,IAAIC,QAAQ,GAAG,CAAf;EACA,IAAIC,gBAAgB,GAAG,EAAvB;;EAEA,MAAMC,SAAS,GAAG,CAACC,cAAD,EAAiBC,IAAjB,KAA0B;IAC1CC,OAAO,CAACC,GAAR,CAAY,qBAAZ;IACA,IAAIC,QAAQ,GAAG,CAAf;;IACA,IAAIH,IAAJ,EAAU;MACRD,cAAc,GAAG,EAAjB;IACD;;IACD,QAAQA,cAAR;MACE,KAAK,CAAL;QAAQ;QACN;QACAI,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,CAAL;QAAQ;QACN;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,CAAL;QAAQ;QACN;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,CAAL;QAAQ;QACN;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,CAAL;QAAQ;QACN;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,CAAL;QAAQ;QACN;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,CAAL;QAAQ;QACN;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,CAAL;QAAQ;QACN;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,CAAL;QAAQ;QACN;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,CAAL;QAAQ;QACN;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,EAAL;QAAS;QACP;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,EAAL;QAAS;QACP;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,EAAL;QAAS;QACP;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,EAAL;QAAS;QACP;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,EAAL;QAAS;QACP;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,EAAL;QAAS;QACP;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,EAAL;QAAS;QACP;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,EAAL;QAAS;QACP;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF,KAAK,EAAL;QAAS;QACP;QACAA,QAAQ,GAAG,GAAX;QACA;;MACF;QACEA,QAAQ,GAAG,CAAX;IA9EJ;;IAiFA,IAAIb,MAAM,GAAG,CAAb,EAAgB;MACdW,OAAO,CAACC,GAAR,CAAY,oBAAkBC,QAA9B;MACAC,UAAU,CAACD,QAAD,CAAV;IACD;;IACD;EACD,CA5FD;;EA8FA,MAAME,WAAW,GAAC,MAAI;IACpBJ,OAAO,CAACC,GAAR,CAAY,uBAAZ;IACE,IAAII,QAAQ,GAAGC,KAAK,CAACC,KAAN,CAAY,IAAZ,EAAkBD,KAAK,CAAC9B,SAAS,CAACgC,KAAX,CAAvB,EAA0CC,GAA1C,CAA8C,CAACC,EAAD,EAAKC,GAAL,KAAa;MAC1E,oBAAO,QAAC,IAAD;QAAM,IAAI,EAAED,EAAZ;QAA0B,KAAK,EAAEC,GAAjC;QAAsC,IAAI,EAAEtB,MAA5C;QAAoD,OAAO,EAAE,CAA7D;QAAgE,WAAW,EAAEuB;MAA7E,GAAqBD,GAArB;QAAA;QAAA;QAAA;MAAA,QAAP;IAA2G,CAD5F,CAAf;IAGAE,UAAU,CAAC,MAAI;MACb,IAAGtB,WAAW,CAACuB,MAAZ,GAAmB,CAAtB,EAAwB;QACxBd,OAAO,CAACC,GAAR,CAAY,wBAAsBV,WAAW,CAACuB,MAA9C;QACAd,OAAO,CAACC,GAAR,CAAY,yBAAuBnB,KAAnC;QACAiC,QAAQ;MACT;IACA,CANS,EAMR,IANQ,CAAV;IAQA,oBAAO;MAAA,UAAGV;IAAH,iBAAP;EACH,CAdD;;EAiBA,MAAMW,kBAAkB,GAAIC,MAAD,IAAY;IACrCjB,OAAO,CAACC,GAAR,CAAY,8BAAZ;IACAN,QAAQ;IACR,IAAIuB,KAAK,GAAG,CAAZ;IACA,IAAInB,IAAI,GAAG,CAAX;;IACA,KAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3C,SAAS,CAAC4C,KAAV,CAAgBN,MAApC,EAA4CK,CAAC,EAA7C,EAAiD;MAC/CpB,IAAI,GAAG,CAAP;MACAmB,KAAK,GAAG,CAAR;;MACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7C,SAAS,CAAC4C,KAAV,CAAgBD,CAAhB,EAAmBL,MAAvC,EAA+CO,CAAC,EAAhD,EAAoD;QAClD,IAAIC,MAAM,GAAG9C,SAAS,CAAC4C,KAAV,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB,CAAtB,CAAb;QACA,IAAIE,MAAM,GAAG/C,SAAS,CAAC4C,KAAV,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB,CAAtB,CAAb;;QAEA,IAAI9B,WAAW,CAAC+B,MAAD,CAAX,CAAoBC,MAApB,MAAgC,GAApC,EAAyC;UACvCxB,IAAI;QACL;;QACD,IAAIkB,MAAM,KAAK1B,WAAW,CAAC+B,MAAD,CAAX,CAAoBC,MAApB,CAAf,EAA4C;UAC1CL,KAAK;QACN;MACF;;MACD,IAAInB,IAAI,GAAGmB,KAAP,KAAiB,CAAjB,IAAsBnB,IAAI,GAAG,CAAjC,EAAoC;QAClCL,YAAY,CAAC8B,IAAb,CAAkBL,CAAlB;MACD;IACF;;IACDzB,YAAY,GAAG+B,IAAI,CAAC/B,YAAD,CAAnB;EACD,CAxBD;;EA0BA,MAAM+B,IAAI,GAAIC,CAAD,IAAO;IAClB,OAAOA,CAAC,CAACC,IAAF,GAASC,MAAT,CAAgB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;MAC/C,OAAO,CAACD,GAAD,IAAQD,IAAI,KAAKE,GAAG,CAACD,GAAG,GAAG,CAAP,CAA3B;IACD,CAFM,CAAP;EAGD,CAJD;;EAMA,MAAME,aAAa,GAAG,MAAM;IAC1BhC,OAAO,CAACC,GAAR,CAAY,yBAAZ;IACA,IAAIF,IAAI,GAAG,CAAX;;IACA,KAAK,IAAIkC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1BlC,IAAI,GAAG,CAAP;;MACA,KAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5B,WAAW,CAACuB,MAAhC,EAAwCK,CAAC,EAAzC,EAA6C;QAC3C,IAAIe,IAAI,GAAG,EAAX;;QACA,KAAK,IAAIb,CAAC,GAAGY,CAAb,EAAgBZ,CAAC,GAAG9B,WAAW,CAAC4B,CAAD,CAAX,CAAeL,MAAnC,EAA2CO,CAAC,EAA5C,EAAgD;UAC9C,IAAI9B,WAAW,CAAC4B,CAAD,CAAX,CAAeE,CAAf,MAAsB,GAA1B,EAA+B;YAC7Ba,IAAI,GAAG3C,WAAW,CAAC4B,CAAD,CAAX,CAAeE,CAAf,CAAP;YACAA,CAAC,GAAG9B,WAAW,CAAC4B,CAAD,CAAX,CAAeL,MAAnB;UACD,CAHD,MAGO;YACLf,IAAI;YACJsB,CAAC,GAAG9B,WAAW,CAAC4B,CAAD,CAAX,CAAeL,MAAnB;UACD;QACF;;QACD,IAAIf,IAAI,GAAG,CAAP,IAAYmC,IAAI,KAAK,EAAzB,EAA6B;UAC3BtC,gBAAgB,CAAC4B,IAAjB,CAAsBU,IAAtB;QACD;MACF;IACF;;IACD,KAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,gBAAgB,CAACkB,MAArC,EAA6CK,CAAC,EAA9C,EAAkD;MAChDH,kBAAkB,CAACpB,gBAAgB,CAACuB,CAAD,CAAjB,CAAlB;IACD;EACF,CAxBD;;EA0BA,MAAMgB,UAAU,GAAG,MAAM;IACvBtD,GAAG,GAAG,CAAN;EACD,CAFD;;EAIA,MAAMuD,WAAW,GAAIC,CAAD,IAAO;IACzB;IAEAvD,KAAK,GAAGwD,IAAI,CAACC,KAAL,CAAW,CAACzD,KAAK,GAAGuD,CAAT,IAAc,GAAzB,IAAgC,GAAxC;IAEErC,OAAO,CAACC,GAAR,CAAY,sBAAoBnB,KAAhC,EALuB,CAOzB;IACA;EACD,CATD;;EAWA,MAAMqB,UAAU,GAAIkC,CAAD,IAAO;IACxBrC,OAAO,CAACC,GAAR,CAAY,sBAAZ;IACA,IAAIuC,GAAG,GAAG,CAAV;;IAEA,IAAI3D,GAAG,GAAG,CAAN,IAAWwD,CAAC,GAAG,CAAnB,EAAsB;MACpBG,GAAG,GAAGA,GAAG,IAAIH,CAAC,GAAGxD,GAAG,GAAGwD,CAAd,CAAT;MACAG,GAAG,GAAGF,IAAI,CAACC,KAAL,CAAWC,GAAG,GAAG,GAAjB,IAAwB,GAA9B;IACD,CAHD,MAGO,IAAI3D,GAAG,GAAG,CAAN,IAAWwD,CAAC,KAAK,CAArB,EAAwB;MAC7BG,GAAG,GAAGA,GAAG,IAAIH,CAAC,GAAGxD,GAAG,GAAGwD,CAAd,CAAT;MAEAG,GAAG,GAAGF,IAAI,CAACC,KAAL,CAAWC,GAAG,GAAG,GAAjB,IAAwB,GAA9B;IACD,CAJM,MAIA,IAAI3D,GAAG,KAAK,CAAR,IAAawD,CAAC,GAAG,CAArB,EAAwB;MAE7BG,GAAG,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACC,GAAG,GAAGH,CAAP,IAAY,GAAvB,IAA8B,GAApC;IACD;;IAEDD,WAAW,CAACI,GAAD,CAAX,CAhBwB,CAiBxB;EACD,CAlBD;;EAoBA,MAAMC,cAAc,GAAG,MAAM;IAC3BzC,OAAO,CAACC,GAAR,CAAY,0BAAZ;;IACA,KAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3C,SAAS,CAAC4C,KAAV,CAAgBN,MAApC,EAA4CK,CAAC,EAA7C,EAAiD;MAC/C,IAAIpB,IAAI,GAAG,CAAX;;MACA,KAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7C,SAAS,CAAC4C,KAAV,CAAgB,CAAhB,EAAmBN,MAAvC,EAA+CO,CAAC,EAAhD,EAAoD;QAClD,IAAIC,MAAM,GAAG9C,SAAS,CAAC4C,KAAV,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB,CAAtB,CAAb;QACA,IAAIE,MAAM,GAAG/C,SAAS,CAAC4C,KAAV,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB,CAAtB,CAAb;;QAEA,IAAI9B,WAAW,CAAC+B,MAAD,CAAX,CAAoBC,MAApB,MAAgC,GAApC,EAAyC;UACvCxB,IAAI;QACL;MACF;;MAED,IAAIA,IAAI,KAAK,CAAb,EAAgB;QACdL,YAAY,CAAC8B,IAAb,CAAkBL,CAAlB;QACAtB,SAAS,CAACsB,CAAD,EAAI,KAAJ,CAAT;MACD;IACF;EACF,CAlBD;;EAoBA,MAAMuB,mBAAmB,GAAG,MAAM;IAChC1C,OAAO,CAACC,GAAR,CAAY,+BAAZ;IACAwC,cAAc;IACdT,aAAa,GAHmB,CAIhC;;IACAhC,OAAO,CAACC,GAAR,CAAY,qCAAmCP,YAAY,CAACoB,MAA5D;;IACA,IAAIpB,YAAY,CAACoB,MAAb,GAAsB,CAA1B,EAA6B;MAC3B,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,YAAY,CAACoB,MAAjC,EAAyCK,CAAC,EAA1C,EAA8C;QAC5CtB,SAAS,CAACH,YAAY,CAACyB,CAAD,CAAb,EAAkB,KAAlB,CAAT;MACD;IACF,CAJD,MAIO;MACL,IAAIrC,KAAK,GAAGD,GAAR,IAAe,GAAnB,EAAwB;QACtBC,KAAK,GAAGwD,IAAI,CAACC,KAAL,CAAW,CAACzD,KAAK,GAAGD,GAAT,IAAgB,GAA3B,IAAkC,GAA1C;QACAmB,OAAO,CAACC,GAAR,CAAY,0BAAwBnB,KAApC,EAFsB,CAGxB;QACE;QACA;;QAEA,IAAIA,KAAK,GAAGD,GAAZ,EAAiB;UACfsD,UAAU;QACX;MACF,CAVD,MAUO,IAAIrD,KAAK,GAAGD,GAAR,KAAgB,CAApB,EAAuB;QAC5BsD,UAAU;QACVrD,KAAK,GAAG,CAAR,CAF4B,CAG5B;QACA;MACD;IACF,CA3B+B,CA4BhC;;EACD,CA7BD;;EAgCA,MAAM6D,cAAc,GAAG,MAAM;IAC3B3C,OAAO,CAACC,GAAR,CAAY,0BAAZ;IACA,IAAI2C,EAAE,GAAG,KAAT;;IAEA,KAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3C,SAAS,CAAC4C,KAAV,CAAgBN,MAApC,EAA4CK,CAAC,EAA7C,EAAiD;MAC/C,IAAIpB,IAAI,GAAG,CAAX;;MACA,KAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7C,SAAS,CAAC4C,KAAV,CAAgB,CAAhB,EAAmBN,MAAvC,EAA+CO,CAAC,EAAhD,EAAoD;QAClD,IAAIC,MAAM,GAAG9C,SAAS,CAAC4C,KAAV,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB,CAAtB,CAAb;QACA,IAAIE,MAAM,GAAG/C,SAAS,CAAC4C,KAAV,CAAgBD,CAAhB,EAAmBE,CAAnB,EAAsB,CAAtB,CAAb;QACArB,OAAO,CAACC,GAAR,CAAY,EAAZ;;QACA,IAAIV,WAAW,CAAC+B,MAAD,CAAX,CAAoBC,MAApB,MAAgC,GAApC,EAAyC;UACvCxB,IAAI;QACL;MACF;;MAED,IAAIA,IAAI,KAAK,CAAb,EAAgB;QACd6C,EAAE,GAAG,IAAL;QACAlD,YAAY,CAAC8B,IAAb,CAAkBL,CAAlB;QACAtB,SAAS,CAACsB,CAAD,EAAI,IAAJ,CAAT,CAHc,CAId;;QACA;MACD;IACF;;IAED,OAAOyB,EAAP;EACD,CAzBD;;EA4BA,MAAM7B,QAAQ,GAAG,MAAM;IACrBf,OAAO,CAACC,GAAR,CAAY,oBAAZ;;IACA,IAAIZ,MAAM,GAAG,CAAb,EAAgB;MACd,IAAIU,IAAI,GAAG4C,cAAc,EAAzB;;MACA,IAAI,CAAC5C,IAAL,EAAW;QACT2C,mBAAmB;MACpB;IACF;EAEF,CATD;;EAWA,MAAMG,aAAa,GAAG,MAAK;IACzB,KAAI,IAAI1B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAiBA,CAAC,EAAlB,EAAqB;MACnB,KAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAiBA,CAAC,EAAlB,EAAqB;QACnB5B,IAAI,CAACqD,OAAL,CAAaC,UAAb,CAAwB5B,CAAxB,EAA2B6B,UAA3B,CAAsCC,QAAtC,CAA+C,CAA/C,EAAkDC,UAAlD,CAA6D,CAA7D,EAAgEC,KAAhE,GAAsE,cAAtE;MACD;IACF;EACF,CAND;;EAQA9E,SAAS,CAAC,MAAI;IAEZ;IACF;IACA;IACC,IAAGgB,MAAM,GAAC,CAAP,IAAYI,IAAI,CAACqD,OAAL,CAAaC,UAAb,CAAwB,CAAxB,EAA2BC,UAA3B,CAAsCI,iBAAtC,KAA0D,GAAtE,IAA8E3D,IAAI,CAACqD,OAAL,CAAaG,QAAb,CAAsB,CAAtB,EAAyBA,QAAzB,CAAkC,CAAlC,EAAqCA,QAArC,CAA8C,EAA9C,EAAkDC,UAAlD,CAA6D,CAA7D,MAAkEG,SAAnJ,EAA6J;MAC5JrD,OAAO,CAACC,GAAR,CAAY,kCAAgCR,IAAI,CAACqD,OAAL,CAAaC,UAAb,CAAwB,CAAxB,EAA2BC,UAA3B,CAAsCI,iBAAlF;MACApD,OAAO,CAACC,GAAR,CAAY,uBAAqBR,IAAI,CAACqD,OAAL,CAAaC,UAAb,CAAwB,CAAxB,EAA2BC,UAA3B,CAAsCC,QAAtC,CAA+C,CAA/C,EAAkDC,UAAlD,CAA6D,CAA7D,EAAgEC,KAAjG;MACAnD,OAAO,CAACC,GAAR,CAAY,gCAA+BT,cAAc,CAAC,CAAD,CAAf,CAAoB,CAApB,CAA1C;MACA,IAAI8D,QAAQ,GAAE9D,cAAc,CAAC,CAAD,CAAf,CAAoB,CAApB,CAAb;MACAQ,OAAO,CAACC,GAAR,CAAY,oCAAkCqD,QAA9C;MACA7D,IAAI,CAACqD,OAAL,CAAaC,UAAb,CAAwB,CAAxB,EAA2BC,UAA3B,CAAsCC,QAAtC,CAA+C,CAA/C,EAAkDC,UAAlD,CAA6D,CAA7D,EAAgEC,KAAhE,GAAsE,cAAtE,CAN4J,CAQhK;;MACInD,OAAO,CAACC,GAAR,CAAY,oCAAkCR,IAAI,CAACqD,OAAL,CAAaG,QAAb,CAAsB,CAAtB,EAAyBA,QAAzB,CAAkC,CAAlC,EAAqCA,QAArC,CAA8C,EAA9C,EAAkDC,UAAlD,CAA6D,CAA7D,CAA9C,EAT4J,CAW7J;MACA;IACC;;IACAlD,OAAO,CAACC,GAAR,CAAY,+BAA6BV,WAAzC;IACAS,OAAO,CAACC,GAAR,CAAY,yDAAuDT,cAAc,CAACsB,MAAlF;IACAd,OAAO,CAACC,GAAR,CAAY,2BAAyBT,cAArC;IAEAQ,OAAO,CAACC,GAAR,CAAY,cAAYnB,KAAZ,GAAkB,iBAAlB,GAAoCO,MAAhD;IAEAN,OAAO,GAACD,KAAR;EACD,CA1BQ,EA0BP,CAACO,MAAD,CA1BO,CAAT;;EA4BA,MAAMkE,WAAW,GAAIlB,CAAD,IAAO;IACzBxD,GAAG,GAAGwD,CAAN;EACD,CAFD;;EAIA,MAAMmB,QAAQ,GAAG,MAAM;IACrBxD,OAAO,CAACC,GAAR,CAAY,oBAAZ;;IACA,IAAIpB,GAAG,KAAK,CAAR,IAAaC,KAAK,GAAG,CAAzB,EAA4B;MAC1B2E,KAAK,CAAC,sBAAD,CAAL;IACD,CAFD,MAEO,IAAI5E,GAAG,KAAK,CAAR,IAAaC,KAAK,KAAK,CAA3B,EAA8B;MACnC2E,KAAK,CAAC,+CAAD,CAAL;IACD,CAFM,MAEA;MACLnE,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT,CADK,CAEV;IACI;;IACDW,OAAO,CAACC,GAAR,CAAY,iCAA+BV,WAAW,CAACuB,MAAvD;EACH,CAXC;;EAaA,MAAMF,mBAAmB,GAAG,CAAC8C,OAAD,EAAUjE,IAAV,KAAmB;IAC7CO,OAAO,CAACC,GAAR,CAAY,+BAA6BR,IAAzC;IACAF,WAAW,CAACiC,IAAZ,CAAiB/B,IAAjB;IACAD,cAAc,CAACgC,IAAf,CAAoBkC,OAApB;IAEA,OAAOhE,YAAP;EACD,CAND;;EAQA,oBACE;IAAA,wBACA,QAAC,MAAD,CAAQ,GAAR;MAAY,EAAE,EAAC,SAAf;MAAA,qCACS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADT;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAIE,QAAC,MAAD,CAAQ,GAAR;MAAY,SAAS,EAAC,WAAtB;MAAA,uBACE,QAAC,MAAD,CAAQ,GAAR;QAAY,SAAS,EAAC,eAAtB;QAAA,uBACE,QAAC,MAAD,CAAQ,GAAR;UAAa,SAAS,EAAC,SAAvB;UAAiC,GAAG,EAAED,IAAtC;UAAA,UACGW,WAAW;QADd;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF,eAWQ;MAAK,EAAE,EAAC,UAAR;MAAA,wBACA;QACE,SAAS,EAAE,CAACjB,OAAD,GAAW,cAAX,GAA4B,MADzC;QAEE,OAAO,EAAE,MAAM;UACbqE,QAAQ;QACT,CAJH;QAKE,QAAQ,EAAErE,OALZ;QAAA,UAMGA,OAAO,GAAG,YAAH,GAAkB;MAN5B;QAAA;QAAA;QAAA;MAAA,QADA,eASA,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QATA,eAUA,QAAC,GAAD;QAAK,KAAK,EAAEL,KAAZ;QAAmB,MAAM,EAAEyE;MAA3B;QAAA;QAAA;QAAA;MAAA,QAVA,eAWA;QAAA,kCACQ;UAAM,EAAE,EAAC,OAAT;UAAA,UAAkBxE;QAAlB;UAAA;UAAA;UAAA;QAAA,QADR;MAAA;QAAA;QAAA;QAAA;MAAA,QAXA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXR;EAAA,gBADF;AA6BD,CA5YyB,kCAAb,iCAAb;;MAAMC,O;AA8YN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}