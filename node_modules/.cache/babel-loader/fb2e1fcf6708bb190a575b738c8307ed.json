{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\ScoreBet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Bet from './Bet';\nimport CalculateScore from './CalculateScore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet bet = 0;\n\nconst ScoreBet = props => {\n  _s();\n\n  const [score, setScore] = useState(2);\n\n  const callbackBet = e => {\n    bet = e;\n    props.callBackSetBet(e);\n  };\n\n  const callbackScore = scr => {\n    setTimeout(() => {\n      setScore(scr);\n    }, 350);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Bet, {\n      block: props.block,\n      score: score,\n      setBet: callbackBet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalculateScore, {\n      spinResults: props.resultsArray,\n      spinResultsIdx: props.resultsArrayIdx,\n      myBet: bet,\n      callbackSetBet: callbackBet,\n      setCallbackScore: callbackScore,\n      game: props.game,\n      winningLinesCallBack: props.winningLinesCallBack,\n      looserCallBack: props.looserCallBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ScoreBet, \"cidTy/0QTqYWV6l0yj/74goiK7s=\");\n\n_c = ScoreBet;\nexport default ScoreBet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScoreBet\");","map":{"version":3,"names":["React","useState","useEffect","Bet","CalculateScore","bet","ScoreBet","props","score","setScore","callbackBet","e","callBackSetBet","callbackScore","scr","setTimeout","block","resultsArray","resultsArrayIdx","game","winningLinesCallBack","looserCallBack"],"sources":["F:/Games/slotmachinereact/src/components/ScoreBet.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport Bet from './Bet';\r\nimport CalculateScore from './CalculateScore';\r\n\r\n\r\nlet bet=0;\r\n\r\nconst ScoreBet = (props) => {\r\n\r\n  const [score, setScore] = useState(2);\r\n  \r\n  const callbackBet = (e) => {   \r\n      bet=e;\r\n      props.callBackSetBet(e);\r\n  }\r\n\r\n  const callbackScore = (scr) => {\r\n   \r\n      setTimeout(()=>{\r\n        setScore(scr);\r\n      },350)\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Bet block ={props.block} score={score} setBet={callbackBet} />\r\n      <CalculateScore spinResults={props.resultsArray} spinResultsIdx={props.resultsArrayIdx} myBet={bet} callbackSetBet={callbackBet} setCallbackScore={callbackScore} game={props.game} winningLinesCallBack={props.winningLinesCallBack} looserCallBack={props.looserCallBack}/>\r\n    </>\r\n  );\r\n};\r\nexport default ScoreBet;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAGA,IAAIC,GAAG,GAAC,CAAR;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAE1B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;;EAEA,MAAMS,WAAW,GAAIC,CAAD,IAAO;IACvBN,GAAG,GAACM,CAAJ;IACAJ,KAAK,CAACK,cAAN,CAAqBD,CAArB;EACH,CAHD;;EAKA,MAAME,aAAa,GAAIC,GAAD,IAAS;IAE3BC,UAAU,CAAC,MAAI;MACbN,QAAQ,CAACK,GAAD,CAAR;IACD,CAFS,EAER,GAFQ,CAAV;EAIH,CAND;;EAUA,oBACE;IAAA,wBACE,QAAC,GAAD;MAAK,KAAK,EAAGP,KAAK,CAACS,KAAnB;MAA0B,KAAK,EAAER,KAAjC;MAAwC,MAAM,EAAEE;IAAhD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,cAAD;MAAgB,WAAW,EAAEH,KAAK,CAACU,YAAnC;MAAiD,cAAc,EAAEV,KAAK,CAACW,eAAvE;MAAwF,KAAK,EAAEb,GAA/F;MAAoG,cAAc,EAAEK,WAApH;MAAiI,gBAAgB,EAAEG,aAAnJ;MAAkK,IAAI,EAAEN,KAAK,CAACY,IAA9K;MAAoL,oBAAoB,EAAEZ,KAAK,CAACa,oBAAhN;MAAsO,cAAc,EAAEb,KAAK,CAACc;IAA5P;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD,CAzBD;;GAAMf,Q;;KAAAA,Q;AA0BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}