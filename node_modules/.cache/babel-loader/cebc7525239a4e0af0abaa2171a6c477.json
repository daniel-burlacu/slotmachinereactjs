{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BN = require(\"bn.js\");\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar ethereumjs_account_1 = require(\"ethereumjs-account\");\n\nvar bloom_1 = require(\"./bloom\");\n\nvar evm_1 = require(\"./evm/evm\");\n\nvar message_1 = require(\"./evm/message\");\n\nvar txContext_1 = require(\"./evm/txContext\");\n\nvar Block = require('ethereumjs-block');\n/**\n * @ignore\n */\n\n\nfunction runTx(opts) {\n  return __awaiter(this, void 0, void 0, function () {\n    var state, result, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (opts === undefined) {\n            throw new Error('invalid input, opts must be provided');\n          } // tx is required\n\n\n          if (!opts.tx) {\n            throw new Error('invalid input, tx is required');\n          } // create a reasonable default if no block is given\n\n\n          if (!opts.block) {\n            opts.block = new Block();\n          }\n\n          if (new BN(opts.block.header.gasLimit).lt(new BN(opts.tx.gasLimit))) {\n            throw new Error('tx has a higher gas limit than the block');\n          }\n\n          state = this.pStateManager;\n          return [4\n          /*yield*/\n          , state.checkpoint()];\n\n        case 1:\n          _a.sent();\n\n          _a.label = 2;\n\n        case 2:\n          _a.trys.push([2, 5,, 7]);\n\n          return [4\n          /*yield*/\n          , _runTx.bind(this)(opts)];\n\n        case 3:\n          result = _a.sent();\n          return [4\n          /*yield*/\n          , state.commit()];\n\n        case 4:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , result];\n\n        case 5:\n          e_1 = _a.sent();\n          return [4\n          /*yield*/\n          , state.revert()];\n\n        case 6:\n          _a.sent();\n\n          throw e_1;\n\n        case 7:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.default = runTx;\n\nfunction _runTx(opts) {\n  return __awaiter(this, void 0, void 0, function () {\n    var block, tx, state, basefee, gasLimit, fromAccount, txContext, message, evm, results, gasRefund, finalFromBalance, minerAccount, keys, _i, keys_1, k;\n\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          block = opts.block;\n          tx = opts.tx;\n          state = this.pStateManager;\n          /**\n           * The `beforeTx` event\n           *\n           * @event Event: beforeTx\n           * @type {Object}\n           * @property {Transaction} tx emits the Transaction that is about to be processed\n           */\n\n          return [4\n          /*yield*/\n          , this._emit('beforeTx', tx) // Validate gas limit against base fee\n          ];\n\n        case 1:\n          /**\n           * The `beforeTx` event\n           *\n           * @event Event: beforeTx\n           * @type {Object}\n           * @property {Transaction} tx emits the Transaction that is about to be processed\n           */\n          _a.sent();\n\n          basefee = tx.getBaseFee();\n          gasLimit = new BN(tx.gasLimit);\n\n          if (gasLimit.lt(basefee)) {\n            throw new Error('base fee exceeds gas limit');\n          }\n\n          gasLimit.isub(basefee);\n          return [4\n          /*yield*/\n          , state.getAccount(tx.getSenderAddress())];\n\n        case 2:\n          fromAccount = _a.sent();\n\n          if (!opts.skipBalance && new BN(fromAccount.balance).lt(tx.getUpfrontCost())) {\n            throw new Error(\"sender doesn't have enough funds to send tx. The upfront cost is: \" + tx.getUpfrontCost().toString() + (\" and the sender's account only has: \" + new BN(fromAccount.balance).toString()));\n          } else if (!opts.skipNonce && !new BN(fromAccount.nonce).eq(new BN(tx.nonce))) {\n            throw new Error(\"the tx doesn't have the correct nonce. account has nonce of: \" + new BN(fromAccount.nonce).toString() + \" tx has nonce of: \" + new BN(tx.nonce).toString());\n          } // Update from account's nonce and balance\n\n\n          fromAccount.nonce = ethereumjs_util_1.toBuffer(new BN(fromAccount.nonce).addn(1));\n          fromAccount.balance = ethereumjs_util_1.toBuffer(new BN(fromAccount.balance).sub(new BN(tx.gasLimit).mul(new BN(tx.gasPrice))));\n          return [4\n          /*yield*/\n          , state.putAccount(tx.getSenderAddress(), fromAccount)\n          /*\n           * Execute message\n           */\n          ];\n\n        case 3:\n          _a.sent();\n\n          txContext = new txContext_1.default(tx.gasPrice, tx.getSenderAddress());\n          message = new message_1.default({\n            caller: tx.getSenderAddress(),\n            gasLimit: gasLimit,\n            to: tx.to.toString('hex') !== '' ? tx.to : undefined,\n            value: tx.value,\n            data: tx.data\n          });\n\n          state._wrapped._clearOriginalStorageCache();\n\n          evm = new evm_1.default(this, txContext, block);\n          return [4\n          /*yield*/\n          , evm.executeMessage(message)];\n\n        case 4:\n          results = _a.sent();\n          /*\n           * Parse results\n           */\n          // Generate the bloom for the tx\n\n          results.bloom = txLogsBloom(results.execResult.logs); // Caculate the total gas used\n\n          results.gasUsed = results.gasUsed.add(basefee);\n          gasRefund = evm._refund;\n\n          if (gasRefund) {\n            if (gasRefund.lt(results.gasUsed.divn(2))) {\n              results.gasUsed.isub(gasRefund);\n            } else {\n              results.gasUsed.isub(results.gasUsed.divn(2));\n            }\n          }\n\n          results.amountSpent = results.gasUsed.mul(new BN(tx.gasPrice));\n          return [4\n          /*yield*/\n          , state.getAccount(tx.getSenderAddress())];\n\n        case 5:\n          // Update sender's balance\n          fromAccount = _a.sent();\n          finalFromBalance = new BN(tx.gasLimit).sub(results.gasUsed).mul(new BN(tx.gasPrice)).add(new BN(fromAccount.balance));\n          fromAccount.balance = ethereumjs_util_1.toBuffer(finalFromBalance);\n          return [4\n          /*yield*/\n          , state.putAccount(ethereumjs_util_1.toBuffer(tx.getSenderAddress()), fromAccount) // Update miner's balance\n          ];\n\n        case 6:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , state.getAccount(block.header.coinbase) // add the amount spent on gas to the miner's account\n          ];\n\n        case 7:\n          minerAccount = _a.sent(); // add the amount spent on gas to the miner's account\n\n          minerAccount.balance = ethereumjs_util_1.toBuffer(new BN(minerAccount.balance).add(results.amountSpent));\n          if (!!new BN(minerAccount.balance).isZero()) return [3\n          /*break*/\n          , 9];\n          return [4\n          /*yield*/\n          , state.putAccount(block.header.coinbase, minerAccount)];\n\n        case 8:\n          _a.sent();\n\n          _a.label = 9;\n\n        case 9:\n          if (!results.execResult.selfdestruct) return [3\n          /*break*/\n          , 13];\n          keys = Object.keys(results.execResult.selfdestruct);\n          _i = 0, keys_1 = keys;\n          _a.label = 10;\n\n        case 10:\n          if (!(_i < keys_1.length)) return [3\n          /*break*/\n          , 13];\n          k = keys_1[_i];\n          return [4\n          /*yield*/\n          , state.putAccount(Buffer.from(k, 'hex'), new ethereumjs_account_1.default())];\n\n        case 11:\n          _a.sent();\n\n          _a.label = 12;\n\n        case 12:\n          _i++;\n          return [3\n          /*break*/\n          , 10];\n\n        case 13:\n          return [4\n          /*yield*/\n          , state.cleanupTouchedAccounts()\n          /**\n           * The `afterTx` event\n           *\n           * @event Event: afterTx\n           * @type {Object}\n           * @property {Object} result result of the transaction\n           */\n          ];\n\n        case 14:\n          _a.sent();\n          /**\n           * The `afterTx` event\n           *\n           * @event Event: afterTx\n           * @type {Object}\n           * @property {Object} result result of the transaction\n           */\n\n\n          return [4\n          /*yield*/\n          , this._emit('afterTx', results)];\n\n        case 15:\n          /**\n           * The `afterTx` event\n           *\n           * @event Event: afterTx\n           * @type {Object}\n           * @property {Object} result result of the transaction\n           */\n          _a.sent();\n\n          return [2\n          /*return*/\n          , results];\n      }\n    });\n  });\n}\n/**\n * @method txLogsBloom\n * @private\n */\n\n\nfunction txLogsBloom(logs) {\n  var bloom = new bloom_1.default();\n\n  if (logs) {\n    for (var i = 0; i < logs.length; i++) {\n      var log = logs[i]; // add the address\n\n      bloom.add(log[0]); // add the topics\n\n      var topics = log[1];\n\n      for (var q = 0; q < topics.length; q++) {\n        bloom.add(topics[q]);\n      }\n    }\n  }\n\n  return bloom;\n}","map":{"version":3,"mappings":"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","names":["Block","require","runTx","opts","undefined","Error","tx","block","BN","header","gasLimit","lt","state","pStateManager","checkpoint","_a","_runTx","bind","result","commit","revert","e_1","exports","_emit","basefee","getBaseFee","isub","getAccount","getSenderAddress","fromAccount","skipBalance","balance","getUpfrontCost","toString","skipNonce","nonce","eq","ethereumjs_util_1","addn","sub","mul","gasPrice","putAccount","txContext","txContext_1","message","message_1","caller","to","value","data","_wrapped","_clearOriginalStorageCache","evm","evm_1","executeMessage","results","bloom","txLogsBloom","execResult","logs","gasUsed","add","gasRefund","_refund","divn","amountSpent","finalFromBalance","coinbase","minerAccount","isZero","selfdestruct","keys","Object","keys_1","_i","k","Buffer","from","ethereumjs_account_1","cleanupTouchedAccounts","bloom_1","i","length","log","topics","q"],"sources":["../lib/runTx.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}