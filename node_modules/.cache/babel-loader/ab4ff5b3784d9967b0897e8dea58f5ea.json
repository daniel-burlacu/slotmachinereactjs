{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportChangeTokenBalances = void 0;\n\nconst ethers_1 = require(\"ethers\");\n\nconst account_1 = require(\"./misc/account\");\n\nfunction supportChangeTokenBalances(Assertion) {\n  Assertion.addMethod('changeTokenBalances', function (token, accounts, balanceChanges) {\n    const subject = this._obj;\n    const derivedPromise = Promise.all([getBalanceChanges(subject, token, accounts), getAddresses(accounts)]).then(_ref => {\n      let [actualChanges, accountAddresses] = _ref;\n      this.assert(actualChanges.every((change, ind) => change.eq(ethers_1.BigNumber.from(balanceChanges[ind]))), `Expected ${accountAddresses} to change balance by ${balanceChanges} wei, ` + `but it has changed by ${actualChanges} wei`, `Expected ${accountAddresses} to not change balance by ${balanceChanges} wei,`, balanceChanges.map(balanceChange => balanceChange.toString()), actualChanges.map(actualChange => actualChange.toString()));\n    });\n    this.then = derivedPromise.then.bind(derivedPromise);\n    this.catch = derivedPromise.catch.bind(derivedPromise);\n    this.promise = derivedPromise;\n    return this;\n  });\n}\n\nexports.supportChangeTokenBalances = supportChangeTokenBalances;\n\nfunction getAddresses(accounts) {\n  return Promise.all(accounts.map(account => account_1.getAddressOf(account)));\n}\n\nasync function getBalances(token, accounts) {\n  return Promise.all(accounts.map(async account => {\n    return token['balanceOf(address)'](account_1.getAddressOf(account));\n  }));\n}\n\nasync function getBalanceChanges(transactionCall, token, accounts) {\n  const balancesBefore = await getBalances(token, accounts);\n  await transactionCall();\n  const balancesAfter = await getBalances(token, accounts);\n  return balancesAfter.map((balance, ind) => balance.sub(balancesBefore[ind]));\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","supportChangeTokenBalances","ethers_1","require","account_1","Assertion","addMethod","token","accounts","balanceChanges","subject","_obj","derivedPromise","Promise","all","getBalanceChanges","getAddresses","then","actualChanges","accountAddresses","assert","every","change","ind","eq","BigNumber","from","map","balanceChange","toString","actualChange","bind","catch","promise","account","getAddressOf","getBalances","transactionCall","balancesBefore","balancesAfter","balance","sub"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/chai/dist/cjs/matchers/changeTokenBalances.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.supportChangeTokenBalances = void 0;\nconst ethers_1 = require(\"ethers\");\nconst account_1 = require(\"./misc/account\");\nfunction supportChangeTokenBalances(Assertion) {\n    Assertion.addMethod('changeTokenBalances', function (token, accounts, balanceChanges) {\n        const subject = this._obj;\n        const derivedPromise = Promise.all([\n            getBalanceChanges(subject, token, accounts),\n            getAddresses(accounts)\n        ]).then(([actualChanges, accountAddresses]) => {\n            this.assert(actualChanges.every((change, ind) => change.eq(ethers_1.BigNumber.from(balanceChanges[ind]))), `Expected ${accountAddresses} to change balance by ${balanceChanges} wei, ` +\n                `but it has changed by ${actualChanges} wei`, `Expected ${accountAddresses} to not change balance by ${balanceChanges} wei,`, balanceChanges.map((balanceChange) => balanceChange.toString()), actualChanges.map((actualChange) => actualChange.toString()));\n        });\n        this.then = derivedPromise.then.bind(derivedPromise);\n        this.catch = derivedPromise.catch.bind(derivedPromise);\n        this.promise = derivedPromise;\n        return this;\n    });\n}\nexports.supportChangeTokenBalances = supportChangeTokenBalances;\nfunction getAddresses(accounts) {\n    return Promise.all(accounts.map((account) => account_1.getAddressOf(account)));\n}\nasync function getBalances(token, accounts) {\n    return Promise.all(accounts.map(async (account) => {\n        return token['balanceOf(address)'](account_1.getAddressOf(account));\n    }));\n}\nasync function getBalanceChanges(transactionCall, token, accounts) {\n    const balancesBefore = await getBalances(token, accounts);\n    await transactionCall();\n    const balancesAfter = await getBalances(token, accounts);\n    return balancesAfter.map((balance, ind) => balance.sub(balancesBefore[ind]));\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,0BAAR,GAAqC,KAAK,CAA1C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;AACA,SAASF,0BAAT,CAAoCI,SAApC,EAA+C;EAC3CA,SAAS,CAACC,SAAV,CAAoB,qBAApB,EAA2C,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,cAA3B,EAA2C;IAClF,MAAMC,OAAO,GAAG,KAAKC,IAArB;IACA,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAY,CAC/BC,iBAAiB,CAACL,OAAD,EAAUH,KAAV,EAAiBC,QAAjB,CADc,EAE/BQ,YAAY,CAACR,QAAD,CAFmB,CAAZ,EAGpBS,IAHoB,CAGf,QAAuC;MAAA,IAAtC,CAACC,aAAD,EAAgBC,gBAAhB,CAAsC;MAC3C,KAAKC,MAAL,CAAYF,aAAa,CAACG,KAAd,CAAoB,CAACC,MAAD,EAASC,GAAT,KAAiBD,MAAM,CAACE,EAAP,CAAUtB,QAAQ,CAACuB,SAAT,CAAmBC,IAAnB,CAAwBjB,cAAc,CAACc,GAAD,CAAtC,CAAV,CAArC,CAAZ,EAA4G,YAAWJ,gBAAiB,yBAAwBV,cAAe,QAApE,GACtG,yBAAwBS,aAAc,MAD3C,EACmD,YAAWC,gBAAiB,6BAA4BV,cAAe,OAD1H,EACkIA,cAAc,CAACkB,GAAf,CAAoBC,aAAD,IAAmBA,aAAa,CAACC,QAAd,EAAtC,CADlI,EACmMX,aAAa,CAACS,GAAd,CAAmBG,YAAD,IAAkBA,YAAY,CAACD,QAAb,EAApC,CADnM;IAEH,CANsB,CAAvB;IAOA,KAAKZ,IAAL,GAAYL,cAAc,CAACK,IAAf,CAAoBc,IAApB,CAAyBnB,cAAzB,CAAZ;IACA,KAAKoB,KAAL,GAAapB,cAAc,CAACoB,KAAf,CAAqBD,IAArB,CAA0BnB,cAA1B,CAAb;IACA,KAAKqB,OAAL,GAAerB,cAAf;IACA,OAAO,IAAP;EACH,CAbD;AAcH;;AACDb,OAAO,CAACE,0BAAR,GAAqCA,0BAArC;;AACA,SAASe,YAAT,CAAsBR,QAAtB,EAAgC;EAC5B,OAAOK,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACmB,GAAT,CAAcO,OAAD,IAAa9B,SAAS,CAAC+B,YAAV,CAAuBD,OAAvB,CAA1B,CAAZ,CAAP;AACH;;AACD,eAAeE,WAAf,CAA2B7B,KAA3B,EAAkCC,QAAlC,EAA4C;EACxC,OAAOK,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACmB,GAAT,CAAa,MAAOO,OAAP,IAAmB;IAC/C,OAAO3B,KAAK,CAAC,oBAAD,CAAL,CAA4BH,SAAS,CAAC+B,YAAV,CAAuBD,OAAvB,CAA5B,CAAP;EACH,CAFkB,CAAZ,CAAP;AAGH;;AACD,eAAenB,iBAAf,CAAiCsB,eAAjC,EAAkD9B,KAAlD,EAAyDC,QAAzD,EAAmE;EAC/D,MAAM8B,cAAc,GAAG,MAAMF,WAAW,CAAC7B,KAAD,EAAQC,QAAR,CAAxC;EACA,MAAM6B,eAAe,EAArB;EACA,MAAME,aAAa,GAAG,MAAMH,WAAW,CAAC7B,KAAD,EAAQC,QAAR,CAAvC;EACA,OAAO+B,aAAa,CAACZ,GAAd,CAAkB,CAACa,OAAD,EAAUjB,GAAV,KAAkBiB,OAAO,CAACC,GAAR,CAAYH,cAAc,CAACf,GAAD,CAA1B,CAApC,CAAP;AACH"},"metadata":{},"sourceType":"script"}