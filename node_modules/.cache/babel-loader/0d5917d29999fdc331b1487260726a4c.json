{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\ReelSet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Constants from \"../Constants\";\nimport Bet from \"./Bet\";\nimport Withdrawal from \"./Withdrawal\";\nimport \"../assets/css/App.css\";\nimport Reel from \"./Reel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet score = 2;\nlet bet = 0;\n\nconst ReelSet = props => {\n  _s();\n\n  //  const [spinReel, setSpinReel] = useState(false)\n  const [gameOn, setGameOn] = useState(0); //  let [bet, setBet] = useState(0)\n  //  const [startGame, setStartGa] = useState(2);\n  //let gameOn=0;\n\n  const [rolling, setRolling] = useState(false);\n  let spinResultsIdx = [];\n  let scoreRef = 0; //let score = 2;\n\n  let spinResults = [];\n  let results = []; //  let bet = 0;\n\n  let winningLines = [];\n  let countWin = 0;\n  let symbolSellection = [];\n  let randomNr = 0; //  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPBBQQAAG\";\n  //const symbols = \"DDDGNNSS\"\n\n  const symbols = Constants.REEL_SYMBOLS;\n\n  const handleScore = e => {\n    // /  const [gameScore, setGameScore] = useState({score:0, bet:0})\n    score = Math.round((score + e) * 100) / 100; //  console.log(\"mySetGameScore = \"+gameScore.score);\n\n    console.log(\"My handleScore score=\" + score); //setGameScore(score);\n    // props.dadCallback(score)\n  };\n\n  const callbackCreateArray = (reelIdx, reel) => {\n    console.log(\"Receiving callback Array: \" + reel);\n    spinResults.push(reel);\n    spinResultsIdx.push(reelIdx);\n  };\n\n  const renderReels = () => {\n    let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(Reel, {\n        reel: el,\n        index: idx,\n        gameOn: gameOn,\n        createArray: callbackCreateArray\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    });\n    setTimeout(() => {\n      if (spinResults.length > 0) {\n        console.log(\"My array length is:\" + spinResults.length);\n        console.log(\"My current score is:\" + score); //      checkWin();\n      }\n    }, 7500);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: reelList\n    }, void 0, false);\n  };\n\n  const drawScore = (lineNumberType, fool) => {\n    let newScore = 0;\n\n    if (fool) {\n      lineNumberType = 18;\n    }\n\n    switch (lineNumberType) {\n      case 0:\n        // top line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 1:\n        // middle line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 2:\n        // bottom line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 3:\n        // V shape starting bottom left\n        //        audioWin.play();\n        newScore = 0.2;\n        break;\n\n      case 4:\n        // V shape starting bottom right\n        //        audioWin.play();\n        newScore = 0.2;\n        break;\n\n      case 5:\n        // W shape starting top left\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 6:\n        // M shape starting bottom left\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 7:\n        // M shape on top half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 8:\n        // W shape on top half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 9:\n        //W shape on bottom half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 10:\n        // M shape on bottom half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 11:\n        // U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 12:\n        // inverse U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 13:\n        // U shape on bottom half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 14:\n        // inverse U shape on bottom half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 15:\n        // inverse U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 16:\n        // Z shape from top left\n        //        audioWin.play();\n        newScore = 0.4;\n        break;\n\n      case 17:\n        // Z shape from bottom left\n        //        audioWin.play();\n        newScore = 0.4;\n        break;\n\n      case 18:\n        // Z shape from bottom left\n        //        audioWinBonus.play();\n        newScore = 100;\n        break;\n\n      default:\n        newScore = 0;\n    }\n\n    console.log(\"My Adding to score:\" + score + \" + \" + newScore);\n\n    if (gameOn > 0) {\n      setMyScore(newScore);\n    }\n\n    return;\n  };\n\n  const spinReel = () => {\n    console.log(\"My testBet value is\" + bet);\n\n    if (bet === 0) {\n      console.log(\"you can't play\");\n    } else {\n      setGameOn(gameOn + 1);\n      console.log(\"GameOn is\" + gameOn); //  checkWin();\n      //  game=1+gameOn;\n      // /  console.log(\"My spinReel game=\"+game);\n      // props.parrentCallBack(score);callbackBetcallbackBet \n    }\n  };\n\n  useEffect(() => {\n    console.log(\"This is the beginign !\" + score);\n\n    const checkWin = () => {\n      console.log(\"My checkWin is: \" + gameOn + \"My reels is:\" + gameOn);\n\n      if (gameOn > 0) {\n        let fool = checkFiveFools();\n\n        if (!fool) {\n          evaluateResults();\n        }\n      }\n\n      console.log(\"We are in checkWin: \" + gameOn + \"Final score is:\" + score);\n    };\n  }, [gameOn]);\n\n  const callbackBet = e => {\n    //bet=e;\n    //setBet(()=>({bet:e}));\n    bet = e;\n    console.log(\"My bet callbackBet is:\" + bet);\n  };\n\n  const checkLinesElements = symbol => {\n    countWin++;\n    let symNr = 0;\n    let fool = 0;\n\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      fool = 0;\n      symNr = 0;\n\n      for (let j = 0; j < Constants.LINES[i].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n\n        if (symbol === spinResults[indexI][indexJ]) {\n          symNr++;\n        }\n      }\n\n      if (fool + symNr === 5 && fool < 4) {\n        winningLines.push(i);\n      }\n    }\n\n    winningLines = uniq(winningLines);\n  };\n\n  const uniq = a => {\n    return a.sort().filter(function (item, pos, ary) {\n      return !pos || item !== ary[pos - 1];\n    });\n  };\n\n  const checkElements = () => {\n    let fool = 0;\n\n    for (let k = 0; k < 3; k++) {\n      fool = 0;\n\n      for (let i = 0; i < spinResults.length; i++) {\n        let symb = \"\";\n\n        for (let j = k; j < spinResults[i].length; j++) {\n          if (spinResults[i][j] !== \"D\") {\n            symb = spinResults[i][j];\n            j = spinResults[i].length;\n          } else {\n            fool++;\n            j = spinResults[i].length;\n          }\n        }\n\n        if (fool < 4 && symb !== \"\") {\n          symbolSellection.push(symb);\n        }\n      }\n    }\n\n    for (let i = 0; i < symbolSellection.length; i++) {\n      checkLinesElements(symbolSellection[i]);\n    }\n  };\n\n  const setBetZero = () => {\n    bet = 0;\n  };\n\n  const setMyScore = e => {\n    let scr = 0;\n\n    if (bet > 0 && e > 0) {\n      console.log(\"Calculating 1: gameOn =\" + gameOn + \" | \" + scr + \"+(\" + bet + \"*\" + e + \")\");\n      scr = scr + (e + bet * e);\n      scr = Math.round(scr * 100) / 100;\n    } else if (bet > 0 && e === 0) {\n      scr = scr - (e + bet * e);\n      console.log(\"Calculating 2: gameOn =\" + gameOn + \" | \" + scr + \"-(\" + bet + \"*\" + e + \")\");\n      scr = Math.round(scr * 100) / 100;\n    } else if (bet === 0 && e > 0) {\n      console.log(\"Calculating 3: gameOn =\" + gameOn + \" | \" + scr + \" + \" + e);\n      scr = Math.round((scr + e) * 100) / 100;\n    }\n\n    console.log(\"your setMyScore scr=\" + scr); // score= Math.round((score+scr) * 100) / 100;\n\n    console.log(\"We are in setScore: \" + e + \" ,gameOn=\" + gameOn + \" ,score=\" + score + \" bet=\" + bet);\n\n    if (spinResults.length > 0) {\n      handleScore(scr);\n    } //  setScore(scr);\n\n  };\n\n  const checkFourFools = () => {\n    for (let k = 0; k < spinResults.length; k++) {\n      for (let i = 0; i < Constants.LINES.length; i++) {\n        let fool = 0;\n\n        for (let j = 0; j < Constants.LINES[0].length; j++) {\n          let indexI = Constants.LINES[i][j][0];\n          let indexJ = Constants.LINES[i][j][1]; //        console.log(\"Spin results from checkFourFools is: \"+spinResults);\n          //        console.log(\"checkFourFools indexI= \"+indexI+\"| indexJ= \"+indexJ);\n\n          console.log(\"checkFourFools Comparing: \" + spinResults[indexI][indexJ] + \" === D\");\n\n          if (spinResults[indexI][indexJ] === \"D\") {\n            fool++;\n          }\n        }\n\n        console.log(\"My fool from checkFourFools is: \" + fool);\n\n        if (fool === 4) {\n          console.log(\"Pushing line nr.: \" + i);\n          winningLines.push(i);\n          drawScore(i, false);\n        }\n      }\n    }\n  };\n\n  const evaluateResults = () => {\n    checkFourFools();\n    checkElements(); //highLightWinningLines(0);\n\n    if (winningLines.length > 0) {\n      console.log(\"We have winning line !!!\");\n\n      for (let i = 0; i < winningLines.length; i++) {\n        //  console.log(\"NoRun drawScore !\");\n        drawScore(winningLines[i], false);\n      }\n    } else {\n      console.log(\"We have no winning lines !!!\");\n\n      if (score - bet >= 0.2) {\n        if (spinResults.length > 0) {\n          console.log(\"score - bet >= 0.2 , spinResults populated: \" + spinResults.length);\n          score = Math.round((score - bet) * 100) / 100;\n        } else {\n          console.log(\"score - bet >= 0.2 , spinResults empty\");\n        } //  setScore(scr);\n        //handleScore(scr);\n\n\n        console.log(\"your evaluateResults score - bet >= 0.2 => scr=\" + score);\n\n        if (score < bet) {\n          setBetZero();\n        }\n      } else if (score - bet === 0) {\n        setBetZero();\n        score = 0;\n        console.log(\"your evaluateResults scr=bet === 0 = > scr=\" + score); //  setScore(scr);\n        //handleScore(scr);\n      }\n    } //winningLines=[];\n\n  };\n\n  const checkFiveFools = () => {\n    let fl = false;\n    console.log(\"My spinResults checkFiveFools are: \" + spinResults);\n\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      let fool = 0;\n\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n        console.log(\"checkFiveFools comparing: \" + spinResults[indexI][indexJ] + \" === D\");\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n      }\n\n      console.log(\"Checking 5 fools =\" + fool);\n\n      if (fool === 5) {\n        fl = true;\n        winningLines.push(i);\n        drawScore(i, true); //  highLightWinningLines(0);\n\n        break;\n      }\n    }\n\n    console.log(\"We have checked 5 fools, and returning: \" + fl);\n    return fl;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"jackpot\",\n      children: [\"Jackpot: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reelSet\",\n          children: renderReels()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !rolling ? \"roll rolling\" : \"roll\",\n        onClick: () => {\n          spinReel();\n        },\n        disabled: rolling,\n        children: rolling ? \"Rolling...\" : \"ROLL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Withdrawal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Bet, {\n        score: score,\n        setBet: callbackBet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"score\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ReelSet, \"n9arhrzjE3eUsfyapyF2EhFPxz4=\");\n\n_c = ReelSet;\nexport default ReelSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReelSet\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Constants","Bet","Withdrawal","Reel","score","bet","ReelSet","props","gameOn","setGameOn","rolling","setRolling","spinResultsIdx","scoreRef","spinResults","results","winningLines","countWin","symbolSellection","randomNr","symbols","REEL_SYMBOLS","handleScore","e","Math","round","console","log","callbackCreateArray","reelIdx","reel","push","renderReels","reelList","Array","apply","REELS","map","el","idx","setTimeout","length","drawScore","lineNumberType","fool","newScore","setMyScore","spinReel","checkWin","checkFiveFools","evaluateResults","callbackBet","checkLinesElements","symbol","symNr","i","LINES","j","indexI","indexJ","uniq","a","sort","filter","item","pos","ary","checkElements","k","symb","setBetZero","scr","checkFourFools","fl"],"sources":["F:/Games/slotmachinereact/src/components/ReelSet.js"],"sourcesContent":["import React, { useEffect, useRef, useState} from \"react\";\r\nimport Constants from \"../Constants\";\r\nimport Bet from \"./Bet\";\r\nimport Withdrawal from \"./Withdrawal\";\r\nimport \"../assets/css/App.css\";\r\nimport Reel from \"./Reel\";\r\n\r\nlet score=2;\r\nlet bet=0;\r\n\r\nconst ReelSet = (props) => {\r\n  //  const [spinReel, setSpinReel] = useState(false)\r\n  const [gameOn, setGameOn] = useState(0);\r\n\r\n//  let [bet, setBet] = useState(0)\r\n//  const [startGame, setStartGa] = useState(2);\r\n //let gameOn=0;\r\n  const [rolling, setRolling] = useState(false);\r\n  let spinResultsIdx = [];\r\n  let scoreRef = 0;\r\n  //let score = 2;\r\n\r\n\r\n  let spinResults = [];\r\n  let results = [];\r\n\r\n//  let bet = 0;\r\n\r\n  let winningLines = [];\r\n  let countWin = 0;\r\n  let symbolSellection = [];\r\n  let randomNr = 0;\r\n//  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPBBQQAAG\";\r\n//const symbols = \"DDDGNNSS\"\r\nconst symbols = Constants.REEL_SYMBOLS;\r\n\r\nconst handleScore =(e)=>{\r\n// /  const [gameScore, setGameScore] = useState({score:0, bet:0})\r\n score=Math.round((score+e) * 100) / 100;\r\n\r\n//  console.log(\"mySetGameScore = \"+gameScore.score);\r\n console.log(\"My handleScore score=\"+score);\r\n//setGameScore(score);\r\n// props.dadCallback(score)\r\n\r\n}\r\n\r\nconst callbackCreateArray = (reelIdx, reel) => {\r\n  console.log(\"Receiving callback Array: \"+reel);\r\n  spinResults.push(reel);\r\n  spinResultsIdx.push(reelIdx);\r\n}\r\n\r\n  const renderReels = () => {\r\n    let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\r\n      return <Reel reel={el} key={idx} index={idx} gameOn={gameOn} createArray={callbackCreateArray}/>;\r\n    });\r\n\r\n    setTimeout(()=>{\r\n      if(spinResults.length>0){\r\n     console.log(\"My array length is:\"+spinResults.length);\r\n     console.log(\"My current score is:\"+score);\r\n//      checkWin();\r\n    }},7500)\r\n\r\n    return <>{reelList}</>;\r\n  };\r\n\r\n  const drawScore = (lineNumberType, fool) => {\r\n    let newScore = 0;\r\n    if (fool) {\r\n      lineNumberType = 18;\r\n    }\r\n    switch (lineNumberType) {\r\n      case 0: // top line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 1: // middle line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 2: // bottom line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 3: // V shape starting bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 4: // V shape starting bottom right\r\n        //        audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 5: // W shape starting top left\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 6: // M shape starting bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 7: // M shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 8: // W shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 9: //W shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 10: // M shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 11: // U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 12: // inverse U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 13: // U shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 14: // inverse U shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 15: // inverse U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 16: // Z shape from top left\r\n        //        audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 17: // Z shape from bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 18: // Z shape from bottom left\r\n        //        audioWinBonus.play();\r\n        newScore = 100;\r\n        break;\r\n      default:\r\n        newScore = 0;\r\n    }\r\n\r\n    console.log(\"My Adding to score:\"+score+\" + \" + newScore);\r\n    if(gameOn>0){\r\n      setMyScore(newScore);\r\n   }\r\n    return;\r\n  };\r\n\r\n\r\n  const spinReel = () => {\r\n    console.log(\"My testBet value is\"+bet);\r\n    if(bet===0){\r\n      console.log(\"you can't play\");\r\n    }else{\r\n    setGameOn(gameOn+1);\r\n\r\n    console.log(\"GameOn is\"+gameOn);\r\n  //  checkWin();\r\n  //  game=1+gameOn;\r\n  // /  console.log(\"My spinReel game=\"+game);\r\n   \r\n  // props.parrentCallBack(score);callbackBetcallbackBet \r\n}\r\n  };\r\n\r\n  useEffect(()=>{\r\n      console.log(\"This is the beginign !\"+score);\r\n     \r\n      const checkWin = () => {\r\n\r\n        console.log(\"My checkWin is: \"+gameOn + \"My reels is:\" + gameOn);\r\n        if(gameOn>0){\r\n        \r\n        let fool = checkFiveFools();\r\n        if (!fool) {\r\n          evaluateResults();\r\n        }\r\n      }\r\n      \r\n      console.log(\"We are in checkWin: \"+gameOn+\"Final score is:\"+score);\r\n      };\r\n    \r\n  },[gameOn])\r\n\r\n  const callbackBet = (e) => {\r\n    //bet=e;\r\n    //setBet(()=>({bet:e}));\r\n    \r\n    bet=e;\r\n    console.log(\"My bet callbackBet is:\"+bet);\r\n  }\r\n\r\n  const checkLinesElements = (symbol) => {\r\n    countWin++;\r\n    let symNr = 0;\r\n    let fool = 0;\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      fool = 0;\r\n      symNr = 0;\r\n      for (let j = 0; j < Constants.LINES[i].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n        if (symbol === spinResults[indexI][indexJ]) {\r\n          symNr++;\r\n        }\r\n      }\r\n      if (fool + symNr === 5 && fool < 4) {\r\n        winningLines.push(i);\r\n      }\r\n    }\r\n    winningLines = uniq(winningLines);\r\n  };\r\n\r\n  const uniq = (a) => {\r\n    return a.sort().filter(function (item, pos, ary) {\r\n      return !pos || item !== ary[pos - 1];\r\n    });\r\n  };\r\n\r\n  const checkElements = () => {\r\n    let fool = 0;\r\n    for (let k = 0; k < 3; k++) {\r\n      fool = 0;\r\n      for (let i = 0; i < spinResults.length; i++) {\r\n        let symb = \"\";\r\n        for (let j = k; j < spinResults[i].length; j++) {\r\n          if (spinResults[i][j] !== \"D\") {\r\n            symb = spinResults[i][j];\r\n            j = spinResults[i].length;\r\n          } else {\r\n            fool++;\r\n            j = spinResults[i].length;\r\n          }\r\n        }\r\n        if (fool < 4 && symb !== \"\") {\r\n          symbolSellection.push(symb);\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < symbolSellection.length; i++) {\r\n      checkLinesElements(symbolSellection[i]);\r\n    }\r\n  };\r\n\r\n  const setBetZero = () => {\r\n    bet = 0;\r\n  };\r\n\r\n  const setMyScore = (e) => {\r\n    let scr = 0;\r\n  \r\n    if (bet > 0 && e > 0) {\r\n      console.log(\"Calculating 1: gameOn =\"+gameOn+\" | \" + scr + \"+(\" + bet + \"*\" + e + \")\");\r\n      scr = scr + (e + bet * e);\r\n      scr = Math.round(scr * 100) / 100;\r\n    } else if (bet > 0 && e === 0) {\r\n      scr = scr - (e + bet * e);\r\n      console.log(\"Calculating 2: gameOn =\"+gameOn+\" | \" + scr + \"-(\" + bet + \"*\" + e + \")\");\r\n      scr = Math.round(scr * 100) / 100;\r\n    } else if (bet === 0 && e > 0) {\r\n      console.log(\"Calculating 3: gameOn =\"+gameOn+\" | \" + scr + \" + \" + e);\r\n      scr = Math.round((scr + e) * 100) / 100;\r\n    }\r\n    console.log(\"your setMyScore scr=\"+scr);\r\n   // score= Math.round((score+scr) * 100) / 100;\r\n\r\n    console.log(\"We are in setScore: \" + e +\" ,gameOn=\"+gameOn +\" ,score=\"+score +\" bet=\"+bet);\r\n    if(spinResults.length>0){\r\n      handleScore(scr);\r\n    }\r\n  //  setScore(scr);\r\n    \r\n  };\r\n\r\n  const checkFourFools = () => {\r\n    for(let k=0; k<spinResults.length;k++){\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n//        console.log(\"Spin results from checkFourFools is: \"+spinResults);\r\n//        console.log(\"checkFourFools indexI= \"+indexI+\"| indexJ= \"+indexJ);\r\n        console.log(\"checkFourFools Comparing: \"+ spinResults[indexI][indexJ]+\" === D\")\r\n       \r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n      }\r\n      console.log(\"My fool from checkFourFools is: \"+fool);\r\n      if (fool === 4) {\r\n        console.log(\"Pushing line nr.: \"+i);\r\n        winningLines.push(i);\r\n        drawScore(i, false);\r\n      }\r\n    }\r\n  }\r\n  };\r\n\r\n  const evaluateResults = () => {\r\n    checkFourFools();\r\n    checkElements();\r\n    //highLightWinningLines(0);\r\n    if (winningLines.length > 0) {\r\n      console.log(\"We have winning line !!!\");\r\n      for (let i = 0; i < winningLines.length; i++) {\r\n      //  console.log(\"NoRun drawScore !\");\r\n        drawScore(winningLines[i], false);\r\n      }\r\n    } else {\r\n      console.log(\"We have no winning lines !!!\");\r\n      if (score - bet >= 0.2) {\r\n        if(spinResults.length>0){\r\n          console.log(\"score - bet >= 0.2 , spinResults populated: \"+spinResults.length);\r\n        score = Math.round((score- bet) * 100) / 100;\r\n      }else{\r\n        console.log(\"score - bet >= 0.2 , spinResults empty\");\r\n      }\r\n      //  setScore(scr);\r\n      //handleScore(scr);\r\n      console.log(\"your evaluateResults score - bet >= 0.2 => scr=\"+score)\r\n        if (score < bet) {\r\n          setBetZero();\r\n        }\r\n      } else if (score - bet === 0) {\r\n        setBetZero();\r\n        score = 0;\r\n        console.log(\"your evaluateResults scr=bet === 0 = > scr=\"+score)\r\n      //  setScore(scr);\r\n      //handleScore(scr);\r\n      }\r\n    }\r\n    //winningLines=[];\r\n  };\r\n  const checkFiveFools = () => {\r\n    let fl = false;\r\n    console.log(\"My spinResults checkFiveFools are: \"+spinResults);\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n        console.log(\"checkFiveFools comparing: \"+(spinResults[indexI])[indexJ]+ \" === D\");\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n      }\r\n      console.log(\"Checking 5 fools =\"+fool);\r\n      if (fool === 5) {\r\n        fl = true;\r\n        winningLines.push(i);\r\n          drawScore(i,true);\r\n        //  highLightWinningLines(0);\r\n        break;\r\n      }\r\n    }\r\n    console.log(\"We have checked 5 fools, and returning: \"+fl);\r\n    return fl;\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div id=\"jackpot\" >\r\n    Jackpot: <span>100</span>\r\n  </div>\r\n      <div className=\"container\" >\r\n        <div className=\"playContainer\">\r\n          <div className=\"reelSet\" >\r\n            {renderReels()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n            <div id=\"controls\">\r\n            <div\r\n              className={!rolling ? \"roll rolling\" : \"roll\"}\r\n              onClick={() => {\r\n                spinReel();\r\n              }}\r\n              disabled={rolling} >\r\n              {rolling ? \"Rolling...\" : \"ROLL\"}\r\n            </div>\r\n            <Withdrawal/>\r\n            <Bet score={score} setBet={callbackBet} />\r\n            <label>\r\n              Score:<span id=\"score\">{score}</span>\r\n            </label>\r\n          </div>\r\n          </>\r\n  );\r\n};\r\n\r\nexport default ReelSet;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}