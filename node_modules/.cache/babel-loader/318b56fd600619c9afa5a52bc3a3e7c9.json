{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\Mint.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport '../assets/css/App.css';\nimport { ethers } from \"ethers\";\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/abi.json';\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Mint = props => {\n  _s();\n\n  const [mintAmount, setMintAmount] = useState(0);\n  const [leftToMint, setLeftToMint] = useState(0);\n\n  const howManyNFTsAreLeft = async () => {\n    let totalNFT = await props.contract.maxSupply();\n    let mintedNFT = await props.contract.getNFTBalance(); //to be changed into getNFTBalance\n\n    console.log(\"My totalNFT's in howManyNFTsAreLeft is : \" + totalNFT);\n    console.log(\"My total mintedNFT is\" + mintedNFT);\n    let nftLeftToMint = totalNFT - mintedNFT;\n    setLeftToMint(nftLeftToMint);\n    console.log(\"Total NFT's left to mint \" + nftLeftToMint);\n  };\n\n  const handleSubmit = async () => {\n    if (mintAmount > 0) {\n      let cost = await props.contract.cost();\n      cost = cost * mintAmount;\n      console.log(\"Price is: \" + cost);\n      let transaction = await props.contract.mint(mintAmount, {\n        value: cost\n      });\n      let receipt = await wait(transaction);\n      console.log(\"Minted !\" + mintAmount, receipt);\n    } //    let nftTx = await contract.mint(mintAmount);\n    //    console.log(\"We are in handleSubmit: \"+mintAmount);\n    //mintAmount.preventDefault();\n    //,{ gasPrice: 33e9 }\n    //  let gasPrice = await props.contract.getGasPrice();\n    // console.log(\"Gas price is: \"+gasPrice);\n    //   /  let nftTx = await contract.mint(mintAmount);\n    //   console.log('Mining....', nftTx.hash)\n    //   let tx= nftTx.wait();\n    //  let nftTx = await props.contract.mint(mintAmount);\n    //  let tx = nftTx.wait();\n    //   console.log(\"Mined!\", tx);\n    // console.log(\"Mined!\", tx);\n    //await contract.withdrawal(mintAmount, \"dbabe1135898ac301cfb00e6ce2122515ccae2390fc4c304eef3523a8f69843b\");\n    // howManyNFTsAreLeft();\n    //  alert(`We have minted ${mintAmount}`)\n\n  };\n\n  useEffect(() => {\n    howManyNFTsAreLeft();\n  }, [mintAmount]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-mint\",\n        children: [\"NFT's left to mint:\", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p-welcomeMint\",\n          children: leftToMint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 14\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: [\"Mint Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: mintAmount,\n          onChange: e => setMintAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"form-submit-button\",\n      onClick: () => {\n        handleSubmit(mintAmount);\n      },\n      children: \"Mint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Mint, \"3GhxCDAq2ecw7JVLBNtpIVT2PU8=\");\n\n_c = Mint;\nexport default Mint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mint\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ethers","PFPRacerNFT","wait","Mint","props","mintAmount","setMintAmount","leftToMint","setLeftToMint","howManyNFTsAreLeft","totalNFT","contract","maxSupply","mintedNFT","getNFTBalance","console","log","nftLeftToMint","handleSubmit","cost","transaction","mint","value","receipt","e","target"],"sources":["F:/Games/slotmachinereact/src/components/Mint.js"],"sourcesContent":["import  React, { useEffect, useState, useRef } from \"react\";\r\nimport '../assets/css/App.css';\r\nimport {ethers} from \"ethers\";\r\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/abi.json';\r\nimport { wait } from \"@testing-library/user-event/dist/utils\";\r\n\r\nconst Mint = (props) =>{\r\n    const [mintAmount, setMintAmount] = useState(0);\r\n    const [leftToMint, setLeftToMint] = useState(0);\r\n\r\n    const howManyNFTsAreLeft = async () =>{\r\n        let totalNFT = await props.contract.maxSupply();\r\n        let mintedNFT= await props.contract.getNFTBalance(); //to be changed into getNFTBalance\r\n        console.log(\"My totalNFT's in howManyNFTsAreLeft is : \"+totalNFT);\r\n        console.log(\"My total mintedNFT is\"+mintedNFT);\r\n        let nftLeftToMint = totalNFT - mintedNFT;\r\n        setLeftToMint(nftLeftToMint);\r\n        console.log(\"Total NFT's left to mint \"+nftLeftToMint);\r\n      }\r\n\r\nconst handleSubmit= async() =>{\r\n    if(mintAmount>0){\r\n        let cost = await props.contract.cost();\r\n        cost = cost*mintAmount;\r\n        console.log(\"Price is: \"+cost);\r\n\r\n        let transaction = await props.contract.mint(mintAmount, {value: cost});\r\n        let receipt = await wait(transaction);\r\n\r\n        console.log(\"Minted !\"+mintAmount, receipt);\r\n    }\r\n//    let nftTx = await contract.mint(mintAmount);\r\n//    console.log(\"We are in handleSubmit: \"+mintAmount);\r\n    //mintAmount.preventDefault();\r\n//,{ gasPrice: 33e9 }\r\n  //  let gasPrice = await props.contract.getGasPrice();\r\n    \r\n   // console.log(\"Gas price is: \"+gasPrice);\r\n//   /  let nftTx = await contract.mint(mintAmount);\r\n //   console.log('Mining....', nftTx.hash)\r\n //   let tx= nftTx.wait();\r\n  //  let nftTx = await props.contract.mint(mintAmount);\r\n  //  let tx = nftTx.wait();\r\n //   console.log(\"Mined!\", tx);\r\n   // console.log(\"Mined!\", tx);\r\n   //await contract.withdrawal(mintAmount, \"dbabe1135898ac301cfb00e6ce2122515ccae2390fc4c304eef3523a8f69843b\");\r\n    // howManyNFTsAreLeft();\r\n  //  alert(`We have minted ${mintAmount}`)\r\n    \r\n}\r\n\r\n    useEffect(()=>{\r\n        howManyNFTsAreLeft();\r\n    },[mintAmount])\r\n\r\n      return (\r\n        <>\r\n        <form className=\"form\">\r\n        <label className=\"label-mint\">\r\n             NFT's left to mint:\r\n             <p className=\"p-welcomeMint\">{leftToMint}</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </label>\r\n          <label className=\"form-label\">\r\n            Mint Amount:\r\n            <input\r\n              type=\"text\"\r\n              value={mintAmount}\r\n              onChange={e => setMintAmount(e.target.value)}\r\n            />\r\n          </label>\r\n         \r\n        </form>\r\n        <button className=\"form-submit-button\" onClick={()=>{handleSubmit(mintAmount)}}>Mint</button>\r\n        \r\n        </>\r\n    \r\n      );\r\n}\r\n\r\n\r\n\r\nexport default Mint;"],"mappings":";;;AAAA,OAAQA,KAAR,IAAiBC,SAAjB,EAA4BC,QAA5B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,OAAO,uBAAP;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,WAAP,MAAwB,iDAAxB;AACA,SAASC,IAAT,QAAqB,wCAArB;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAU;EAAA;;EACnB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;EACA,MAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,CAAD,CAA5C;;EAEA,MAAMW,kBAAkB,GAAG,YAAW;IAClC,IAAIC,QAAQ,GAAG,MAAMN,KAAK,CAACO,QAAN,CAAeC,SAAf,EAArB;IACA,IAAIC,SAAS,GAAE,MAAMT,KAAK,CAACO,QAAN,CAAeG,aAAf,EAArB,CAFkC,CAEmB;;IACrDC,OAAO,CAACC,GAAR,CAAY,8CAA4CN,QAAxD;IACAK,OAAO,CAACC,GAAR,CAAY,0BAAwBH,SAApC;IACA,IAAII,aAAa,GAAGP,QAAQ,GAAGG,SAA/B;IACAL,aAAa,CAACS,aAAD,CAAb;IACAF,OAAO,CAACC,GAAR,CAAY,8BAA4BC,aAAxC;EACD,CARH;;EAUJ,MAAMC,YAAY,GAAE,YAAU;IAC1B,IAAGb,UAAU,GAAC,CAAd,EAAgB;MACZ,IAAIc,IAAI,GAAG,MAAMf,KAAK,CAACO,QAAN,CAAeQ,IAAf,EAAjB;MACAA,IAAI,GAAGA,IAAI,GAACd,UAAZ;MACAU,OAAO,CAACC,GAAR,CAAY,eAAaG,IAAzB;MAEA,IAAIC,WAAW,GAAG,MAAMhB,KAAK,CAACO,QAAN,CAAeU,IAAf,CAAoBhB,UAApB,EAAgC;QAACiB,KAAK,EAAEH;MAAR,CAAhC,CAAxB;MACA,IAAII,OAAO,GAAG,MAAMrB,IAAI,CAACkB,WAAD,CAAxB;MAEAL,OAAO,CAACC,GAAR,CAAY,aAAWX,UAAvB,EAAmCkB,OAAnC;IACH,CAVyB,CAW9B;IACA;IACI;IACJ;IACE;IAEC;IACH;IACC;IACA;IACC;IACA;IACD;IACE;IACA;IACC;IACF;;EAED,CA7BD;;EA+BI1B,SAAS,CAAC,MAAI;IACVY,kBAAkB;EACrB,CAFQ,EAEP,CAACJ,UAAD,CAFO,CAAT;EAIE,oBACE;IAAA,wBACA;MAAM,SAAS,EAAC,MAAhB;MAAA,wBACA;QAAO,SAAS,EAAC,YAAjB;QAAA,+CAEK;UAAG,SAAS,EAAC,eAAb;UAAA,UAA8BE;QAA9B;UAAA;UAAA;UAAA;QAAA,QAFL;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAKE;QAAO,SAAS,EAAC,YAAjB;QAAA,wCAEE;UACE,IAAI,EAAC,MADP;UAEE,KAAK,EAAEF,UAFT;UAGE,QAAQ,EAAEmB,CAAC,IAAIlB,aAAa,CAACkB,CAAC,CAACC,MAAF,CAASH,KAAV;QAH9B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAgBA;MAAQ,SAAS,EAAC,oBAAlB;MAAuC,OAAO,EAAE,MAAI;QAACJ,YAAY,CAACb,UAAD,CAAZ;MAAyB,CAA9E;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBA;EAAA,gBADF;AAsBL,CAvED;;GAAMF,I;;KAAAA,I;AA2EN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}