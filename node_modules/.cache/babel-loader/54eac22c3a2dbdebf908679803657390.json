{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MockProvider = void 0;\n\nconst ethers_1 = require(\"ethers\");\n\nconst CallHistory_1 = require(\"./CallHistory\");\n\nconst defaultAccounts_1 = require(\"./defaultAccounts\");\n\nconst ens_1 = require(\"@ethereum-waffle/ens\");\n\nclass MockProvider extends ethers_1.providers.Web3Provider {\n  constructor(options) {\n    super(require('ganache-core').provider({\n      accounts: defaultAccounts_1.defaultAccounts,\n      ...(options === null || options === void 0 ? void 0 : options.ganacheOptions)\n    }));\n    this.options = options;\n    this._callHistory = new CallHistory_1.CallHistory();\n\n    this._callHistory.record(this);\n  }\n\n  getWallets() {\n    var _a, _b;\n\n    const items = (_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.ganacheOptions.accounts) !== null && _b !== void 0 ? _b : defaultAccounts_1.defaultAccounts;\n    return items.map(x => new ethers_1.Wallet(x.secretKey, this));\n  }\n\n  createEmptyWallet() {\n    return ethers_1.Wallet.createRandom().connect(this);\n  }\n\n  clearCallHistory() {\n    this._callHistory.clear();\n  }\n\n  get callHistory() {\n    return this._callHistory.getCalls();\n  }\n\n  get ens() {\n    return this._ens;\n  }\n\n  async setupENS(wallet) {\n    if (!wallet) {\n      const wallets = this.getWallets();\n      wallet = wallets[wallets.length - 1];\n    }\n\n    const ens = await ens_1.deployENS(wallet);\n    this.network.ensAddress = ens.ens.address;\n    this._ens = ens;\n  }\n\n}\n\nexports.MockProvider = MockProvider;","map":{"version":3,"names":["Object","defineProperty","exports","value","MockProvider","ethers_1","require","CallHistory_1","defaultAccounts_1","ens_1","providers","Web3Provider","constructor","options","provider","accounts","defaultAccounts","ganacheOptions","_callHistory","CallHistory","record","getWallets","_a","_b","items","map","x","Wallet","secretKey","createEmptyWallet","createRandom","connect","clearCallHistory","clear","callHistory","getCalls","ens","_ens","setupENS","wallet","wallets","length","deployENS","network","ensAddress","address"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/provider/dist/cjs/MockProvider.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MockProvider = void 0;\nconst ethers_1 = require(\"ethers\");\nconst CallHistory_1 = require(\"./CallHistory\");\nconst defaultAccounts_1 = require(\"./defaultAccounts\");\nconst ens_1 = require(\"@ethereum-waffle/ens\");\nclass MockProvider extends ethers_1.providers.Web3Provider {\n    constructor(options) {\n        super(require('ganache-core').provider({ accounts: defaultAccounts_1.defaultAccounts, ...options === null || options === void 0 ? void 0 : options.ganacheOptions }));\n        this.options = options;\n        this._callHistory = new CallHistory_1.CallHistory();\n        this._callHistory.record(this);\n    }\n    getWallets() {\n        var _a, _b;\n        const items = (_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.ganacheOptions.accounts) !== null && _b !== void 0 ? _b : defaultAccounts_1.defaultAccounts;\n        return items.map((x) => new ethers_1.Wallet(x.secretKey, this));\n    }\n    createEmptyWallet() {\n        return ethers_1.Wallet.createRandom().connect(this);\n    }\n    clearCallHistory() {\n        this._callHistory.clear();\n    }\n    get callHistory() {\n        return this._callHistory.getCalls();\n    }\n    get ens() {\n        return this._ens;\n    }\n    async setupENS(wallet) {\n        if (!wallet) {\n            const wallets = this.getWallets();\n            wallet = wallets[wallets.length - 1];\n        }\n        const ens = await ens_1.deployENS(wallet);\n        this.network.ensAddress = ens.ens.address;\n        this._ens = ens;\n    }\n}\nexports.MockProvider = MockProvider;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,eAAD,CAA7B;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,mBAAD,CAAjC;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,sBAAD,CAArB;;AACA,MAAMF,YAAN,SAA2BC,QAAQ,CAACK,SAAT,CAAmBC,YAA9C,CAA2D;EACvDC,WAAW,CAACC,OAAD,EAAU;IACjB,MAAMP,OAAO,CAAC,cAAD,CAAP,CAAwBQ,QAAxB,CAAiC;MAAEC,QAAQ,EAAEP,iBAAiB,CAACQ,eAA9B;MAA+C,IAAGH,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACI,cAA7D;IAA/C,CAAjC,CAAN;IACA,KAAKJ,OAAL,GAAeA,OAAf;IACA,KAAKK,YAAL,GAAoB,IAAIX,aAAa,CAACY,WAAlB,EAApB;;IACA,KAAKD,YAAL,CAAkBE,MAAlB,CAAyB,IAAzB;EACH;;EACDC,UAAU,GAAG;IACT,IAAIC,EAAJ,EAAQC,EAAR;;IACA,MAAMC,KAAK,GAAG,CAACD,EAAE,GAAG,CAACD,EAAE,GAAG,KAAKT,OAAX,MAAwB,IAAxB,IAAgCS,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACL,cAAH,CAAkBF,QAAjF,MAA+F,IAA/F,IAAuGQ,EAAE,KAAK,KAAK,CAAnH,GAAuHA,EAAvH,GAA4Hf,iBAAiB,CAACQ,eAA5J;IACA,OAAOQ,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAO,IAAIrB,QAAQ,CAACsB,MAAb,CAAoBD,CAAC,CAACE,SAAtB,EAAiC,IAAjC,CAAjB,CAAP;EACH;;EACDC,iBAAiB,GAAG;IAChB,OAAOxB,QAAQ,CAACsB,MAAT,CAAgBG,YAAhB,GAA+BC,OAA/B,CAAuC,IAAvC,CAAP;EACH;;EACDC,gBAAgB,GAAG;IACf,KAAKd,YAAL,CAAkBe,KAAlB;EACH;;EACc,IAAXC,WAAW,GAAG;IACd,OAAO,KAAKhB,YAAL,CAAkBiB,QAAlB,EAAP;EACH;;EACM,IAAHC,GAAG,GAAG;IACN,OAAO,KAAKC,IAAZ;EACH;;EACa,MAARC,QAAQ,CAACC,MAAD,EAAS;IACnB,IAAI,CAACA,MAAL,EAAa;MACT,MAAMC,OAAO,GAAG,KAAKnB,UAAL,EAAhB;MACAkB,MAAM,GAAGC,OAAO,CAACA,OAAO,CAACC,MAAR,GAAiB,CAAlB,CAAhB;IACH;;IACD,MAAML,GAAG,GAAG,MAAM3B,KAAK,CAACiC,SAAN,CAAgBH,MAAhB,CAAlB;IACA,KAAKI,OAAL,CAAaC,UAAb,GAA0BR,GAAG,CAACA,GAAJ,CAAQS,OAAlC;IACA,KAAKR,IAAL,GAAYD,GAAZ;EACH;;AAhCsD;;AAkC3DlC,OAAO,CAACE,YAAR,GAAuBA,YAAvB"},"metadata":{},"sourceType":"script"}