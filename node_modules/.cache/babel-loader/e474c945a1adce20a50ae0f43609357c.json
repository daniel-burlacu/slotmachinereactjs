{"ast":null,"code":"var txserializer = require(\"./txserializer\");\n\nvar async = require(\"async\");\n\nvar Block = require(\"ethereumjs-block\");\n\nmodule.exports = {\n  encode: function (block, done) {\n    var encoded = block.toJSON(true);\n    async.map(block.transactions, function (tx, finished) {\n      txserializer.encode(tx, finished);\n    }, function (err, transactions) {\n      if (err) {\n        return done(err);\n      }\n\n      encoded.transactions = transactions;\n      done(null, encoded);\n    });\n  },\n  decode: function (json, done) {\n    var transactions = json.transactions;\n    json.transactions = [];\n    var block = new Block(json);\n    async.eachSeries(transactions, function (txJson, finished) {\n      txserializer.decode(txJson, function (err, tx) {\n        if (err) {\n          return finished(err);\n        }\n\n        block.transactions.push(tx);\n        finished();\n      });\n    }, function (err) {\n      if (err) {\n        return done(err);\n      }\n\n      done(null, block);\n    });\n  }\n};","map":{"version":3,"names":["txserializer","require","async","Block","module","exports","encode","block","done","encoded","toJSON","map","transactions","tx","finished","err","decode","json","eachSeries","txJson","push"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/lib/database/blockserializer.js"],"sourcesContent":["var txserializer = require(\"./txserializer\");\nvar async = require(\"async\");\nvar Block = require(\"ethereumjs-block\");\n\nmodule.exports = {\n  encode: function(block, done) {\n    var encoded = block.toJSON(true);\n\n    async.map(\n      block.transactions,\n      function(tx, finished) {\n        txserializer.encode(tx, finished);\n      },\n      function(err, transactions) {\n        if (err) {\n          return done(err);\n        }\n        encoded.transactions = transactions;\n        done(null, encoded);\n      }\n    );\n  },\n  decode: function(json, done) {\n    var transactions = json.transactions;\n    json.transactions = [];\n\n    var block = new Block(json);\n\n    async.eachSeries(\n      transactions,\n      function(txJson, finished) {\n        txserializer.decode(txJson, function(err, tx) {\n          if (err) {\n            return finished(err);\n          }\n          block.transactions.push(tx);\n          finished();\n        });\n      },\n      function(err) {\n        if (err) {\n          return done(err);\n        }\n\n        done(null, block);\n      }\n    );\n  }\n};\n"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,kBAAD,CAAnB;;AAEAG,MAAM,CAACC,OAAP,GAAiB;EACfC,MAAM,EAAE,UAASC,KAAT,EAAgBC,IAAhB,EAAsB;IAC5B,IAAIC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa,IAAb,CAAd;IAEAR,KAAK,CAACS,GAAN,CACEJ,KAAK,CAACK,YADR,EAEE,UAASC,EAAT,EAAaC,QAAb,EAAuB;MACrBd,YAAY,CAACM,MAAb,CAAoBO,EAApB,EAAwBC,QAAxB;IACD,CAJH,EAKE,UAASC,GAAT,EAAcH,YAAd,EAA4B;MAC1B,IAAIG,GAAJ,EAAS;QACP,OAAOP,IAAI,CAACO,GAAD,CAAX;MACD;;MACDN,OAAO,CAACG,YAAR,GAAuBA,YAAvB;MACAJ,IAAI,CAAC,IAAD,EAAOC,OAAP,CAAJ;IACD,CAXH;EAaD,CAjBc;EAkBfO,MAAM,EAAE,UAASC,IAAT,EAAeT,IAAf,EAAqB;IAC3B,IAAII,YAAY,GAAGK,IAAI,CAACL,YAAxB;IACAK,IAAI,CAACL,YAAL,GAAoB,EAApB;IAEA,IAAIL,KAAK,GAAG,IAAIJ,KAAJ,CAAUc,IAAV,CAAZ;IAEAf,KAAK,CAACgB,UAAN,CACEN,YADF,EAEE,UAASO,MAAT,EAAiBL,QAAjB,EAA2B;MACzBd,YAAY,CAACgB,MAAb,CAAoBG,MAApB,EAA4B,UAASJ,GAAT,EAAcF,EAAd,EAAkB;QAC5C,IAAIE,GAAJ,EAAS;UACP,OAAOD,QAAQ,CAACC,GAAD,CAAf;QACD;;QACDR,KAAK,CAACK,YAAN,CAAmBQ,IAAnB,CAAwBP,EAAxB;QACAC,QAAQ;MACT,CAND;IAOD,CAVH,EAWE,UAASC,GAAT,EAAc;MACZ,IAAIA,GAAJ,EAAS;QACP,OAAOP,IAAI,CAACO,GAAD,CAAX;MACD;;MAEDP,IAAI,CAAC,IAAD,EAAOD,KAAP,CAAJ;IACD,CAjBH;EAmBD;AA3Cc,CAAjB"},"metadata":{},"sourceType":"script"}