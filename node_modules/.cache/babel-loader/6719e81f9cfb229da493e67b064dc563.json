{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\Withdrawal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport '../assets/css/App.css';\nimport { ethers } from \"ethers\";\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/PFPRacerNFT.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Withdrawal = props => {\n  _s();\n\n  const [rolling, setRolling] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(\"\");\n\n  const initConnection = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = provider.getSigner();\n      setAccount(accounts[0]);\n      setContract(new ethers.Contract(\"0xE0059D8C4242BDf03c9ca37E0e651c07b1b9d587\", PFPRacerNFT.abi, newSigner));\n    } else {\n      console.log(\"Please install metamask\");\n    }\n  };\n\n  const getNFTBalance = async () => {\n    let balance = await contract.getNFTBalance();\n    console.log(\"How many NFT's have been  minted ? \" + balance);\n    return balance;\n  };\n\n  const howManyNFTsAreLeft = async () => {\n    let totalNFT = await contract.maxSupply();\n    let mintedNFT = await getNFTBalance();\n    let nftLeftToMint = totalNFT - mintedNFT;\n    console.log(\"Total NFT's left to mint \" + nftLeftToMint);\n  };\n\n  useEffect(() => {\n    initConnection();\n  }, [account]);\n\n  const makeWithdrawal = async refCode => {\n    let score = Math.floor(props.getScoreCallback());\n    console.log(\"My score in makeWithdrawal is \" + score);\n\n    if (score === 0) {\n      window.confirm(\"You need to have at least 1 NFT to withdrawal\");\n    } else if (score > 0) {\n      window.confirm(\"Please be aware: if you have 1.2 or 20.2 NFT's you will be able to withdrawal only the integer part like 1 or 2.\"); //await contract.withdrawal(refCode);\n\n      console.log(\"This is the withdrawal function !!!\");\n      let myScr = props.getScoreCallback() - score;\n      console.log(\"My score is \" + myScr); //props.callbackSetScore(myScr);\n\n      props.setScoreCallBack(myScr);\n    }\n  };\n\n  const withdrawal = () => {\n    console.log(\"Withdrawal has been activated\");\n    console.log(\"My account is: \" + account);\n    howManyNFTsAreLeft();\n    let refCode = prompt(\"Please enter your refCode:\", \"RefCode\");\n\n    if (refCode == null || refCode == \"\" || refCode !== \"RACECOUPLE2022\") {\n      let text = \"Withdrawal has been canceled !!! You have the option to buy the NFT's\";\n      window.confirm(text);\n    } else {\n      console.log(\"My withdrawal is: \" + blockWithdraw);\n\n      if (!props.blockWithdraw) {\n        makeWithdrawal(refCode);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: withdrawal ? \"roll rolling\" : \"roll\",\n    onClick: () => {\n      withdrawal();\n    },\n    children: \"Withdrawal\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Withdrawal, \"YMWh4SPmI+fS85XywQLQRJu3nhQ=\");\n\n_c = Withdrawal;\nexport default Withdrawal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Withdrawal\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ethers","PFPRacerNFT","Withdrawal","props","rolling","setRolling","name","setName","account","setAccount","contract","setContract","initConnection","window","ethereum","accounts","request","method","provider","providers","Web3Provider","newSigner","getSigner","Contract","abi","console","log","getNFTBalance","balance","howManyNFTsAreLeft","totalNFT","maxSupply","mintedNFT","nftLeftToMint","makeWithdrawal","refCode","score","Math","floor","getScoreCallback","confirm","myScr","setScoreCallBack","withdrawal","prompt","text","blockWithdraw"],"sources":["F:/Games/slotmachinereact/src/components/Withdrawal.js"],"sourcesContent":["import  React, { useEffect, useState, useRef } from \"react\";\r\nimport '../assets/css/App.css';\r\nimport {ethers} from \"ethers\";\r\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/PFPRacerNFT.json'\r\n \r\nconst Withdrawal=(props)=>{\r\n    const [rolling, setRolling] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [account, setAccount] = useState(\"\");\r\n    const [contract, setContract] = useState(\"\");\r\n\r\n    const initConnection = async () =>{\r\n      if(typeof window.ethereum !== \"undefined\"){\r\n        const accounts = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const newSigner = provider.getSigner();\r\n        setAccount(accounts[0]);\r\n        setContract(\r\n          new ethers.Contract(\r\n            \"0xE0059D8C4242BDf03c9ca37E0e651c07b1b9d587\",\r\n            PFPRacerNFT.abi,\r\n            newSigner\r\n          )\r\n        )\r\n      }else{\r\n        console.log(\"Please install metamask\");\r\n      }\r\n    }\r\n\r\n    const getNFTBalance = async () =>{\r\n      let balance = await contract.getNFTBalance();\r\n      console.log(\"How many NFT's have been  minted ? \"+balance );\r\n\r\n      return balance;\r\n    }\r\n\r\n    const howManyNFTsAreLeft = async () =>{\r\n      let totalNFT = await contract.maxSupply();\r\n      let mintedNFT= await getNFTBalance();\r\n      let nftLeftToMint = totalNFT -mintedNFT;\r\n\r\n      console.log(\"Total NFT's left to mint \"+nftLeftToMint);\r\n    }\r\n\r\n    useEffect(()=>{\r\n      initConnection();\r\n    },[account]);\r\n\r\n  const makeWithdrawal = async(refCode) => {\r\n    let score = Math.floor(props.getScoreCallback());\r\n    console.log(\"My score in makeWithdrawal is \"+score);\r\n    if(score===0){\r\n      window.confirm(\"You need to have at least 1 NFT to withdrawal\");\r\n    }else if(score > 0){\r\n    window.confirm(\"Please be aware: if you have 1.2 or 20.2 NFT's you will be able to withdrawal only the integer part like 1 or 2.\");\r\n    //await contract.withdrawal(refCode);\r\n    console.log(\"This is the withdrawal function !!!\");\r\n    let myScr= props.getScoreCallback()-score;\r\n    console.log(\"My score is \"+myScr);\r\n    //props.callbackSetScore(myScr);\r\n    props.setScoreCallBack(myScr);\r\n    }\r\n  }\r\n    \r\n  const withdrawal = () => {\r\n        console.log(\"Withdrawal has been activated\");\r\n        console.log(\"My account is: \"+account);\r\n        howManyNFTsAreLeft();\r\n\r\n        let refCode = prompt(\"Please enter your refCode:\", \"RefCode\");\r\n  if (refCode == null || refCode == \"\" || refCode !== \"RACECOUPLE2022\") {\r\n    let text = \"Withdrawal has been canceled !!! You have the option to buy the NFT's\";\r\n    window.confirm(text)\r\n  } else {\r\n    console.log(\"My withdrawal is: \"+blockWithdraw);\r\n    if(!props.blockWithdraw){\r\n      makeWithdrawal(refCode);\r\n    }\r\n  } };\r\n\r\n    return(\r\n    <div\r\n         className={withdrawal ? \"roll rolling\" : \"roll\"}\r\n         onClick={() => {withdrawal()}}\r\n    >Withdrawal</div>\r\n    )\r\n}\r\n\r\nexport default Withdrawal;"],"mappings":"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"},"metadata":{},"sourceType":"module"}