{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\ReelSet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, forwardRef } from \"react\";\nimport Constants from \"../Constants\";\nimport Bet from \"./Bet\";\nimport Withdrawal from \"./Withdrawal\";\nimport \"../assets/css/App.css\";\nimport Reel from \"./Reel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet score = 2;\nlet bet = 0;\n\nconst ReelSet = (props, ref) => {\n  _s();\n\n  //  const [spinReel, setSpinReel] = useState(false)\n  const [gameOn, setGameOn] = useState(0);\n  let reelsRef = useRef();\n  let reels = []; //  let [bet, setBet] = useState(0)\n  //  const [startGame, setStartGa] = useState(2);\n  //let gameOn=0;\n\n  const [rolling, setRolling] = useState(false);\n  let scoreRef = 0; //let score = 2;\n\n  let spinResults = [];\n  let results = []; //  let bet = 0;\n\n  let winningLines = [];\n  let countWin = 0;\n  let symbolSellection = [];\n  let randomNr = 0; //  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPBBQQAAG\";\n  //const symbols = \"DDDGNNSS\"\n\n  const symbols = Constants.REEL_SYMBOLS;\n\n  const handleScore = e => {\n    score = Math.round((score + e) * 100) / 100;\n  };\n\n  const createArray = (randomNr, index) => {\n    console.log(\"My random nr is for list: \" + symbols[index] + \" => \" + -(randomNr / 242));\n\n    for (let i = 0; i < 3; i++) {\n      console.log(\"My sign is on position: \" + (-(randomNr / 242) + i));\n      results.push(symbols[index][-(randomNr / 242) + i]);\n    }\n\n    console.log(\"Results array has been created\" + results);\n  };\n\n  const randomBetween = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const spin = () => {\n    for (let i = 0; i < Constants.REELS; i++) {\n      reels[i].scrollByOffSet(randomBetween((Constants.REELS_REPEAT - 6) * reels[i].Constants.REEL_WIDTH, (Constants.REELS_REPEAT - 5) * reels[i].Constants.REEL_WIDTH));\n    }\n  };\n\n  const getRandomNr = index => {\n    if (gameOn > 0) {\n      randomNr = -(Math.floor(Math.random() * (symbols[index].length - 3) + 3) * 242);\n      createArray(randomNr, index);\n    }\n\n    console.log(\"randomNr = \" + randomNr);\n    return randomNr;\n  };\n\n  useEffect(() => {\n    console.log(\"My reelTest is: \" + reels);\n  });\n\n  const renderReels = () => {\n    let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(Reel, {\n        index: idx,\n        ref: reels[idx] = ref\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 14\n      }, this);\n    });\n    return reelList;\n  };\n  /*\r\n    const renderReels = () => {\r\n      let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\r\n        return <Reel reel={el} key={idx} index={idx} gameOn={getRandomNr(idx)} ref={reels[idx]=ref}/>;\r\n      });    \r\n  \r\n    createResults();\r\n    console.log(\"My winningLines elements are: \"+winningLines);\r\n  \r\n  \r\n      return <>{reelList}</>;\r\n    };\r\n  */\n\n\n  const drawScore = (lineNumberType, fool) => {\n    let newScore = 0;\n\n    if (fool) {\n      lineNumberType = 18;\n    }\n\n    switch (lineNumberType) {\n      case 0:\n        // top line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 1:\n        // middle line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 2:\n        // bottom line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 3:\n        // V shape starting bottom left\n        //        audioWin.play();\n        newScore = 0.2;\n        break;\n\n      case 4:\n        // V shape starting bottom right\n        //        audioWin.play();\n        newScore = 0.2;\n        break;\n\n      case 5:\n        // W shape starting top left\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 6:\n        // M shape starting bottom left\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 7:\n        // M shape on top half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 8:\n        // W shape on top half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 9:\n        //W shape on bottom half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 10:\n        // M shape on bottom half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 11:\n        // U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 12:\n        // inverse U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 13:\n        // U shape on bottom half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 14:\n        // inverse U shape on bottom half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 15:\n        // inverse U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 16:\n        // Z shape from top left\n        //        audioWin.play();\n        newScore = 0.4;\n        break;\n\n      case 17:\n        // Z shape from bottom left\n        //        audioWin.play();\n        newScore = 0.4;\n        break;\n\n      case 18:\n        // Z shape from bottom left\n        //        audioWinBonus.play();\n        newScore = 100;\n        break;\n\n      default:\n        newScore = 0;\n    }\n\n    console.log(\"My Adding to score:\" + score + \" + \" + newScore);\n\n    if (gameOn > 0) {\n      setMyScore(newScore);\n    }\n\n    return;\n  };\n\n  const createResults = () => {\n    console.log(\"Calling createResults\");\n    let myResults = [];\n    let j = 0;\n\n    for (let i = 0; i <= results.length; i++) {\n      myResults[j] = results[i];\n      j++;\n\n      if (j === 3) {\n        spinResults.push(myResults);\n        myResults = [];\n        j = 0;\n      }\n    }\n\n    console.log(\"spinResults =  \" + spinResults); // checkWin();\n    // score=score+scr;\n    // handleScore();\n    // setScore(scr);\n  };\n\n  const spinReel = () => {\n    console.log(\"My testBet value is\" + bet);\n\n    if (bet === 0) {\n      console.log(\"you can't play\");\n    } else {\n      setGameOn(gameOn + 1);\n      console.log(\"GameOn is\" + gameOn); //  checkWin();\n      //  game=1+gameOn;\n      // /  console.log(\"My spinReel game=\"+game);\n      // props.parrentCallBack(score);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect bet is\" + bet);\n  }, [gameOn]);\n\n  const callbackBet = e => {\n    //bet=e;\n    //setBet(()=>({bet:e}));\n    bet = e;\n    console.log(\"My bet callbackBet is:\" + bet);\n  };\n\n  const checkLinesElements = symbol => {\n    countWin++;\n    let symNr = 0;\n    let fool = 0;\n\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      fool = 0;\n      symNr = 0;\n\n      for (let j = 0; j < Constants.LINES[i].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n\n        if (symbol === spinResults[indexI][indexJ]) {\n          symNr++;\n        }\n      }\n\n      if (fool + symNr === 5 && fool < 4) {\n        winningLines.push(i);\n      }\n    }\n\n    winningLines = uniq(winningLines);\n  };\n\n  const uniq = a => {\n    return a.sort().filter(function (item, pos, ary) {\n      return !pos || item !== ary[pos - 1];\n    });\n  };\n\n  const checkElements = () => {\n    let fool = 0;\n\n    for (let k = 0; k < 3; k++) {\n      fool = 0;\n\n      for (let i = 0; i < spinResults.length; i++) {\n        let symb = \"\";\n\n        for (let j = k; j < spinResults[i].length; j++) {\n          if (spinResults[i][j] !== \"D\") {\n            symb = spinResults[i][j];\n            j = spinResults[i].length;\n          } else {\n            fool++;\n            j = spinResults[i].length;\n          }\n        }\n\n        if (fool < 4 && symb !== \"\") {\n          symbolSellection.push(symb);\n        }\n      }\n    }\n\n    for (let i = 0; i < symbolSellection.length; i++) {\n      checkLinesElements(symbolSellection[i]);\n    }\n  };\n\n  const setBetZero = () => {\n    bet = 0;\n  };\n\n  const setMyScore = e => {\n    let scr = 0;\n\n    if (bet > 0 && e > 0) {\n      console.log(\"Calculating 1: gameOn =\" + gameOn + \" | \" + scr + \"+(\" + bet + \"*\" + e + \")\");\n      scr = scr + (e + bet * e);\n      scr = Math.round(scr * 100) / 100;\n    } else if (bet > 0 && e === 0) {\n      scr = scr - (e + bet * e);\n      console.log(\"Calculating 2: gameOn =\" + gameOn + \" | \" + scr + \"-(\" + bet + \"*\" + e + \")\");\n      scr = Math.round(scr * 100) / 100;\n    } else if (bet === 0 && e > 0) {\n      console.log(\"Calculating 3: gameOn =\" + gameOn + \" | \" + scr + \" + \" + e);\n      scr = Math.round((scr + e) * 100) / 100;\n    }\n\n    console.log(\"your setMyScore scr=\" + scr); // score= Math.round((score+scr) * 100) / 100;\n\n    console.log(\"We are in setScore: \" + e + \" ,gameOn=\" + gameOn + \" ,score=\" + score + \" bet=\" + bet);\n    handleScore(scr); //  setScore(scr);\n  };\n\n  const checkFourFools = () => {\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      let fool = 0;\n\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n      }\n\n      if (fool === 4) {\n        console.log(\"Pushing line nr.: \" + i);\n        winningLines.push(i);\n        drawScore(i, false);\n      }\n    }\n  };\n\n  const evaluateResults = () => {\n    checkFourFools();\n    checkElements(); //highLightWinningLines(0);\n\n    if (winningLines.length > 0) {\n      console.log(\"We have winning line !!!\");\n\n      for (let i = 0; i < winningLines.length; i++) {\n        drawScore(winningLines[i], false);\n      }\n    } else {\n      console.log(\"We have no winning lines !!!\");\n\n      if (score - bet >= 0.2) {\n        score = Math.round((score - bet) * 100) / 100; //  setScore(scr);\n        //handleScore(scr);\n\n        console.log(\"your evaluateResults score - bet >= 0.2 => scr=\" + score);\n\n        if (score < bet) {\n          setBetZero();\n        }\n      } else if (score - bet === 0) {\n        setBetZero();\n        score = 0;\n        console.log(\"your evaluateResults scr=bet === 0 = > scr=\" + score); //  setScore(scr);\n        //handleScore(scr);\n      }\n    } //winningLines=[];\n\n  };\n\n  const checkFiveFools = () => {\n    let fl = false;\n\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      let fool = 0;\n\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n      }\n\n      if (fool === 5) {\n        fl = true;\n        winningLines.push(i);\n        drawScore(i, true); //  highLightWinningLines(0);\n\n        break;\n      }\n    }\n\n    return fl;\n  };\n\n  const checkWin = () => {\n    if (gameOn > 0) {\n      let fool = checkFiveFools();\n\n      if (!fool) {\n        evaluateResults();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"jackpot\",\n      children: [\"Jackpot: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reelSet\",\n          children: renderReels()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !rolling ? \"roll rolling\" : \"roll\",\n        onClick: () => {\n          spinReel();\n        },\n        disabled: rolling,\n        children: rolling ? \"Rolling...\" : \"ROLL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Withdrawal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Bet, {\n        score: score,\n        setBet: callbackBet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"score\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ReelSet, \"Cv3Acr0storXMgzCmbz/2u9ooYs=\");\n\n_c = ReelSet;\nexport default ReelSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReelSet\");","map":{"version":3,"names":["React","useEffect","useRef","useState","forwardRef","Constants","Bet","Withdrawal","Reel","score","bet","ReelSet","props","ref","gameOn","setGameOn","reelsRef","reels","rolling","setRolling","scoreRef","spinResults","results","winningLines","countWin","symbolSellection","randomNr","symbols","REEL_SYMBOLS","handleScore","e","Math","round","createArray","index","console","log","i","push","randomBetween","min","max","floor","random","spin","REELS","scrollByOffSet","REELS_REPEAT","REEL_WIDTH","getRandomNr","length","renderReels","reelList","Array","apply","map","el","idx","drawScore","lineNumberType","fool","newScore","setMyScore","createResults","myResults","j","spinReel","callbackBet","checkLinesElements","symbol","symNr","LINES","indexI","indexJ","uniq","a","sort","filter","item","pos","ary","checkElements","k","symb","setBetZero","scr","checkFourFools","evaluateResults","checkFiveFools","fl","checkWin"],"sources":["F:/Games/slotmachinereact/src/components/ReelSet.js"],"sourcesContent":["import React, { useEffect, useRef, useState, forwardRef} from \"react\";\r\nimport Constants from \"../Constants\";\r\nimport Bet from \"./Bet\";\r\nimport Withdrawal from \"./Withdrawal\";\r\nimport \"../assets/css/App.css\";\r\nimport Reel from \"./Reel\";\r\n\r\nlet score=2;\r\nlet bet=0;\r\n\r\nconst ReelSet = (props,ref) => {\r\n  //  const [spinReel, setSpinReel] = useState(false)\r\n  const [gameOn, setGameOn] = useState(0);\r\n\r\n  let reelsRef = useRef();\r\n\r\n  let reels = [];\r\n\r\n//  let [bet, setBet] = useState(0)\r\n//  const [startGame, setStartGa] = useState(2);\r\n //let gameOn=0;\r\n  const [rolling, setRolling] = useState(false);\r\n\r\n  let scoreRef = 0;\r\n  //let score = 2;\r\n\r\n\r\n  let spinResults = [];\r\n  let results = [];\r\n\r\n//  let bet = 0;\r\n\r\n  let winningLines = [];\r\n  let countWin = 0;\r\n  let symbolSellection = [];\r\n  let randomNr = 0;\r\n//  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPBBQQAAG\";\r\n//const symbols = \"DDDGNNSS\"\r\nconst symbols = Constants.REEL_SYMBOLS;\r\n\r\nconst handleScore =(e)=>{\r\n\r\n score=Math.round((score+e) * 100) / 100;\r\n\r\n}\r\n  const createArray = (randomNr, index) => {\r\n    console.log(\"My random nr is for list: \"+symbols[index]+\" => \" + (-(randomNr / 242)));\r\n    for (let i = 0; i < 3; i++) {\r\n      console.log(\"My sign is on position: \"+(-(randomNr / 242) + i))\r\n      results.push((symbols[index])[-(randomNr / 242) + i]);\r\n    }\r\n    console.log(\"Results array has been created\" + results)\r\n  };\r\n\r\n  const randomBetween = (min, max) =>{\r\n    return Math.floor(Math.random()*(max-min+1)+min);\r\n  }\r\n\r\n  const spin=()=>{\r\n    for(let i=0; i<Constants.REELS; i++){\r\n      reels[i].scrollByOffSet(randomBetween(\r\n          (Constants.REELS_REPEAT-6)*reels[i].Constants.REEL_WIDTH,\r\n          (Constants.REELS_REPEAT-5)*reels[i].Constants.REEL_WIDTH\r\n      ));\r\n    }\r\n    \r\n  }\r\n\r\n  const getRandomNr = (index) => {\r\n    if (gameOn > 0) {\r\n      randomNr = -(Math.floor(Math.random() * (symbols[index].length-3)+3) * 242);\r\n      createArray(randomNr, index);\r\n    }\r\n    console.log(\"randomNr = \"+randomNr);\r\n    return randomNr;\r\n  };\r\n\r\n  useEffect(()=>{\r\n    console.log(\"My reelTest is: \"+reels);\r\n  })\r\n\r\n  const renderReels = () => {\r\n    let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\r\n      return <Reel key={idx} index={idx} ref={reels[idx]=ref}/>;\r\n    }); \r\n\r\n    return reelList;\r\n  }\r\n\r\n\r\n/*\r\n  const renderReels = () => {\r\n    let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\r\n      return <Reel reel={el} key={idx} index={idx} gameOn={getRandomNr(idx)} ref={reels[idx]=ref}/>;\r\n    });    \r\n\r\n  createResults();\r\n  console.log(\"My winningLines elements are: \"+winningLines);\r\n\r\n\r\n    return <>{reelList}</>;\r\n  };\r\n*/\r\n  const drawScore = (lineNumberType, fool) => {\r\n    let newScore = 0;\r\n    if (fool) {\r\n      lineNumberType = 18;\r\n    }\r\n    switch (lineNumberType) {\r\n      case 0: // top line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 1: // middle line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 2: // bottom line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 3: // V shape starting bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 4: // V shape starting bottom right\r\n        //        audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 5: // W shape starting top left\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 6: // M shape starting bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 7: // M shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 8: // W shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 9: //W shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 10: // M shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 11: // U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 12: // inverse U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 13: // U shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 14: // inverse U shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 15: // inverse U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 16: // Z shape from top left\r\n        //        audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 17: // Z shape from bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 18: // Z shape from bottom left\r\n        //        audioWinBonus.play();\r\n        newScore = 100;\r\n        break;\r\n      default:\r\n        newScore = 0;\r\n    }\r\n\r\n    console.log(\"My Adding to score:\"+score+\" + \" + newScore);\r\n    if(gameOn>0){\r\n      setMyScore(newScore);\r\n   }\r\n    return;\r\n  };\r\n\r\n  const createResults = () => {\r\n\r\n    console.log(\"Calling createResults\");\r\n    let myResults = [];\r\n    let j=0;\r\n\r\n    for(let i=0; i<=results.length;i++){\r\n      \r\n      myResults[j]=(results[i]);\r\n      j++;\r\n\r\n      if(j===3){\r\n        spinResults.push(myResults);\r\n        myResults=[];\r\n        j=0;\r\n      } \r\n    }\r\n\r\n   console.log(\"spinResults =  \"+spinResults);\r\n  // checkWin();\r\n  // score=score+scr;\r\n  // handleScore();\r\n  // setScore(scr);\r\n  \r\n  };\r\n\r\n\r\n  const spinReel = () => {\r\n    console.log(\"My testBet value is\"+bet);\r\n    if(bet===0){\r\n      console.log(\"you can't play\");\r\n    }else{\r\n    setGameOn(gameOn+1);\r\n\r\n    console.log(\"GameOn is\"+gameOn);\r\n  //  checkWin();\r\n  //  game=1+gameOn;\r\n  // /  console.log(\"My spinReel game=\"+game);\r\n   \r\n  // props.parrentCallBack(score);\r\n}\r\n  };\r\n\r\n  useEffect(()=>{\r\n    console.log(\"useEffect bet is\"+bet);\r\n  },[gameOn])\r\n\r\n  const callbackBet = (e) => {\r\n    //bet=e;\r\n    //setBet(()=>({bet:e}));\r\n    \r\n    bet=e;\r\n    console.log(\"My bet callbackBet is:\"+bet);\r\n  }\r\n\r\n  const checkLinesElements = (symbol) => {\r\n    countWin++;\r\n    let symNr = 0;\r\n    let fool = 0;\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      fool = 0;\r\n      symNr = 0;\r\n      for (let j = 0; j < Constants.LINES[i].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n        if (symbol === spinResults[indexI][indexJ]) {\r\n          symNr++;\r\n        }\r\n      }\r\n      if (fool + symNr === 5 && fool < 4) {\r\n        winningLines.push(i);\r\n      }\r\n    }\r\n    winningLines = uniq(winningLines);\r\n    \r\n  };\r\n\r\n  const uniq = (a) => {\r\n    return a.sort().filter(function (item, pos, ary) {\r\n      return !pos || item !== ary[pos - 1];\r\n    });\r\n  };\r\n\r\n  const checkElements = () => {\r\n    let fool = 0;\r\n    for (let k = 0; k < 3; k++) {\r\n      fool = 0;\r\n      for (let i = 0; i < spinResults.length; i++) {\r\n        let symb = \"\";\r\n        for (let j = k; j < spinResults[i].length; j++) {\r\n          if (spinResults[i][j] !== \"D\") {\r\n            symb = spinResults[i][j];\r\n            j = spinResults[i].length;\r\n          } else {\r\n            fool++;\r\n            j = spinResults[i].length;\r\n          }\r\n        }\r\n        if (fool < 4 && symb !== \"\") {\r\n          symbolSellection.push(symb);\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < symbolSellection.length; i++) {\r\n      checkLinesElements(symbolSellection[i]);\r\n    }\r\n  };\r\n\r\n  const setBetZero = () => {\r\n    bet = 0;\r\n  };\r\n\r\n  const setMyScore = (e) => {\r\n    let scr = 0;\r\n  \r\n    if (bet > 0 && e > 0) {\r\n      console.log(\"Calculating 1: gameOn =\"+gameOn+\" | \" + scr + \"+(\" + bet + \"*\" + e + \")\");\r\n      scr = scr + (e + bet * e);\r\n      scr = Math.round(scr * 100) / 100;\r\n    } else if (bet > 0 && e === 0) {\r\n      scr = scr - (e + bet * e);\r\n      console.log(\"Calculating 2: gameOn =\"+gameOn+\" | \" + scr + \"-(\" + bet + \"*\" + e + \")\");\r\n      scr = Math.round(scr * 100) / 100;\r\n    } else if (bet === 0 && e > 0) {\r\n      console.log(\"Calculating 3: gameOn =\"+gameOn+\" | \" + scr + \" + \" + e);\r\n      scr = Math.round((scr + e) * 100) / 100;\r\n    }\r\n    console.log(\"your setMyScore scr=\"+scr);\r\n   // score= Math.round((score+scr) * 100) / 100;\r\n\r\n    console.log(\"We are in setScore: \" + e +\" ,gameOn=\"+gameOn +\" ,score=\"+score +\" bet=\"+bet);\r\n    handleScore(scr);\r\n  //  setScore(scr);\r\n    \r\n  };\r\n\r\n  const checkFourFools = () => {\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n      }\r\n      if (fool === 4) {\r\n        console.log(\"Pushing line nr.: \"+i);\r\n        winningLines.push(i);\r\n        drawScore(i, false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const evaluateResults = () => {\r\n    checkFourFools();\r\n    checkElements();\r\n    //highLightWinningLines(0);\r\n    if (winningLines.length > 0) {\r\n      console.log(\"We have winning line !!!\");\r\n      for (let i = 0; i < winningLines.length; i++) {\r\n        drawScore(winningLines[i], false);\r\n      }\r\n    } else {\r\n      console.log(\"We have no winning lines !!!\");\r\n      if (score - bet >= 0.2) {\r\n        score = Math.round((score- bet) * 100) / 100;\r\n      //  setScore(scr);\r\n      //handleScore(scr);\r\n      console.log(\"your evaluateResults score - bet >= 0.2 => scr=\"+score)\r\n        if (score < bet) {\r\n          setBetZero();\r\n        }\r\n      } else if (score - bet === 0) {\r\n        setBetZero();\r\n        score = 0;\r\n        console.log(\"your evaluateResults scr=bet === 0 = > scr=\"+score)\r\n      //  setScore(scr);\r\n      //handleScore(scr);\r\n      }\r\n    }\r\n    //winningLines=[];\r\n  };\r\n  const checkFiveFools = () => {\r\n    let fl = false;\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n      }\r\n      if (fool === 5) {\r\n        fl = true;\r\n        winningLines.push(i);\r\n          drawScore(i,true);\r\n        //  highLightWinningLines(0);\r\n        break;\r\n      }\r\n    }\r\n\r\n    return fl;\r\n  };\r\n\r\n  const checkWin = () => {\r\n\r\n    if(gameOn>0){\r\n    \r\n    let fool = checkFiveFools();\r\n    if (!fool) {\r\n      evaluateResults();\r\n    }\r\n  }\r\n  \r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div id=\"jackpot\" >\r\n    Jackpot: <span>100</span>\r\n  </div>\r\n      <div className=\"container\" >\r\n        <div className=\"playContainer\">\r\n          <div className=\"reelSet\" >\r\n            {renderReels()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n            <div id=\"controls\">\r\n            <div\r\n              className={!rolling ? \"roll rolling\" : \"roll\"}\r\n              onClick={() => {\r\n                spinReel();\r\n              }}\r\n              disabled={rolling} >\r\n              {rolling ? \"Rolling...\" : \"ROLL\"}\r\n            </div>\r\n            <Withdrawal/>\r\n            <Bet score={score} setBet={callbackBet} />\r\n            <label>\r\n              Score:<span id=\"score\">{score}</span>\r\n            </label>\r\n          </div>\r\n          </>\r\n  );\r\n};\r\n\r\nexport default ReelSet;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}