{"ast":null,"code":"const ethUtil = require('ethereumjs-util');\n\nmodule.exports = secureInterface;\n\nfunction secureInterface(trie) {\n  // overwrites\n  trie.copy = copy.bind(trie, trie.copy.bind(trie));\n  trie.get = get.bind(trie, trie.get.bind(trie));\n  trie.put = put.bind(trie, trie.put.bind(trie));\n  trie.del = del.bind(trie, trie.del.bind(trie));\n} // adds the interface when copying the trie\n\n\nfunction copy(_super) {\n  var trie = _super();\n\n  secureInterface(trie);\n  return trie;\n}\n\nfunction get(_super, key, cb) {\n  var hash = ethUtil.sha3(key);\n\n  _super(hash, cb);\n} // for a falsey value, use the original key\n// to avoid double hashing the key\n\n\nfunction put(_super, key, val, cb) {\n  if (!val) {\n    this.del(key, cb);\n  } else {\n    var hash = ethUtil.sha3(key);\n\n    _super(hash, val, cb);\n  }\n}\n\nfunction del(_super, key, cb) {\n  var hash = ethUtil.sha3(key);\n\n  _super(hash, cb);\n}","map":{"version":3,"names":["ethUtil","require","module","exports","secureInterface","trie","copy","bind","get","put","del","_super","key","cb","hash","sha3","val"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/node_modules/ethereumjs-vm/node_modules/merkle-patricia-tree/secure-interface.js"],"sourcesContent":["const ethUtil = require('ethereumjs-util')\n\nmodule.exports = secureInterface\n\nfunction secureInterface (trie) {\n  // overwrites\n  trie.copy = copy.bind(trie, trie.copy.bind(trie))\n  trie.get = get.bind(trie, trie.get.bind(trie))\n  trie.put = put.bind(trie, trie.put.bind(trie))\n  trie.del = del.bind(trie, trie.del.bind(trie))\n}\n\n// adds the interface when copying the trie\nfunction copy (_super) {\n  var trie = _super()\n  secureInterface(trie)\n  return trie\n}\n\nfunction get (_super, key, cb) {\n  var hash = ethUtil.sha3(key)\n  _super(hash, cb)\n}\n\n// for a falsey value, use the original key\n// to avoid double hashing the key\nfunction put (_super, key, val, cb) {\n  if (!val) {\n    this.del(key, cb)\n  } else {\n    var hash = ethUtil.sha3(key)\n    _super(hash, val, cb)\n  }\n}\n\nfunction del (_super, key, cb) {\n  var hash = ethUtil.sha3(key)\n  _super(hash, cb)\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,iBAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,eAAjB;;AAEA,SAASA,eAAT,CAA0BC,IAA1B,EAAgC;EAC9B;EACAA,IAAI,CAACC,IAAL,GAAYA,IAAI,CAACC,IAAL,CAAUF,IAAV,EAAgBA,IAAI,CAACC,IAAL,CAAUC,IAAV,CAAeF,IAAf,CAAhB,CAAZ;EACAA,IAAI,CAACG,GAAL,GAAWA,GAAG,CAACD,IAAJ,CAASF,IAAT,EAAeA,IAAI,CAACG,GAAL,CAASD,IAAT,CAAcF,IAAd,CAAf,CAAX;EACAA,IAAI,CAACI,GAAL,GAAWA,GAAG,CAACF,IAAJ,CAASF,IAAT,EAAeA,IAAI,CAACI,GAAL,CAASF,IAAT,CAAcF,IAAd,CAAf,CAAX;EACAA,IAAI,CAACK,GAAL,GAAWA,GAAG,CAACH,IAAJ,CAASF,IAAT,EAAeA,IAAI,CAACK,GAAL,CAASH,IAAT,CAAcF,IAAd,CAAf,CAAX;AACD,C,CAED;;;AACA,SAASC,IAAT,CAAeK,MAAf,EAAuB;EACrB,IAAIN,IAAI,GAAGM,MAAM,EAAjB;;EACAP,eAAe,CAACC,IAAD,CAAf;EACA,OAAOA,IAAP;AACD;;AAED,SAASG,GAAT,CAAcG,MAAd,EAAsBC,GAAtB,EAA2BC,EAA3B,EAA+B;EAC7B,IAAIC,IAAI,GAAGd,OAAO,CAACe,IAAR,CAAaH,GAAb,CAAX;;EACAD,MAAM,CAACG,IAAD,EAAOD,EAAP,CAAN;AACD,C,CAED;AACA;;;AACA,SAASJ,GAAT,CAAcE,MAAd,EAAsBC,GAAtB,EAA2BI,GAA3B,EAAgCH,EAAhC,EAAoC;EAClC,IAAI,CAACG,GAAL,EAAU;IACR,KAAKN,GAAL,CAASE,GAAT,EAAcC,EAAd;EACD,CAFD,MAEO;IACL,IAAIC,IAAI,GAAGd,OAAO,CAACe,IAAR,CAAaH,GAAb,CAAX;;IACAD,MAAM,CAACG,IAAD,EAAOE,GAAP,EAAYH,EAAZ,CAAN;EACD;AACF;;AAED,SAASH,GAAT,CAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,EAA3B,EAA+B;EAC7B,IAAIC,IAAI,GAAGd,OAAO,CAACe,IAAR,CAAaH,GAAb,CAAX;;EACAD,MAAM,CAACG,IAAD,EAAOD,EAAP,CAAN;AACD"},"metadata":{},"sourceType":"script"}