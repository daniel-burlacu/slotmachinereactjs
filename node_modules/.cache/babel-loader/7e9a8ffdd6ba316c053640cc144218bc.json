{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\n\nvar _ = require('underscore');\n\nvar core = require('web3-core');\n\nvar helpers = require('web3-core-helpers');\n\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\n\nvar Method = require('web3-core-method');\n\nvar utils = require('web3-utils');\n\nvar Net = require('web3-net');\n\nvar ENS = require('web3-eth-ens');\n\nvar Personal = require('web3-eth-personal');\n\nvar BaseContract = require('web3-eth-contract');\n\nvar Iban = require('web3-eth-iban');\n\nvar Accounts = require('web3-eth-accounts');\n\nvar abi = require('web3-eth-abi');\n\nvar getNetworkType = require('./getNetworkType.js');\n\nvar formatter = helpers.formatters;\n\nvar blockCall = function (args) {\n  return _.isString(args[0]) && args[0].indexOf('0x') === 0 ? \"eth_getBlockByHash\" : \"eth_getBlockByNumber\";\n};\n\nvar transactionFromBlockCall = function (args) {\n  return _.isString(args[0]) && args[0].indexOf('0x') === 0 ? 'eth_getTransactionByBlockHashAndIndex' : 'eth_getTransactionByBlockNumberAndIndex';\n};\n\nvar uncleCall = function (args) {\n  return _.isString(args[0]) && args[0].indexOf('0x') === 0 ? 'eth_getUncleByBlockHashAndIndex' : 'eth_getUncleByBlockNumberAndIndex';\n};\n\nvar getBlockTransactionCountCall = function (args) {\n  return _.isString(args[0]) && args[0].indexOf('0x') === 0 ? 'eth_getBlockTransactionCountByHash' : 'eth_getBlockTransactionCountByNumber';\n};\n\nvar uncleCountCall = function (args) {\n  return _.isString(args[0]) && args[0].indexOf('0x') === 0 ? 'eth_getUncleCountByBlockHash' : 'eth_getUncleCountByBlockNumber';\n};\n\nvar Eth = function Eth() {\n  var _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, arguments); // overwrite package setRequestManager\n\n  var setRequestManager = this.setRequestManager;\n\n  this.setRequestManager = function (manager) {\n    setRequestManager(manager);\n\n    _this.net.setRequestManager(manager);\n\n    _this.personal.setRequestManager(manager);\n\n    _this.accounts.setRequestManager(manager);\n\n    _this.Contract._requestManager = _this._requestManager;\n    _this.Contract.currentProvider = _this._provider;\n    return true;\n  }; // overwrite setProvider\n\n\n  var setProvider = this.setProvider;\n\n  this.setProvider = function () {\n    setProvider.apply(_this, arguments);\n\n    _this.setRequestManager(_this._requestManager); // Set detectedAddress/lastSyncCheck back to null because the provider could be connected to a different chain now\n\n\n    _this.ens._detectedAddress = null;\n    _this.ens._lastSyncCheck = null;\n  };\n\n  var handleRevert = false;\n  var defaultAccount = null;\n  var defaultBlock = 'latest';\n  var transactionBlockTimeout = 50;\n  var transactionConfirmationBlocks = 24;\n  var transactionPollingTimeout = 750;\n  var maxListenersWarningThreshold = 100;\n  var defaultChain, defaultHardfork, defaultCommon;\n  Object.defineProperty(this, 'handleRevert', {\n    get: function () {\n      return handleRevert;\n    },\n    set: function (val) {\n      handleRevert = val; // also set on the Contract object\n\n      _this.Contract.handleRevert = handleRevert; // update handleRevert\n\n      methods.forEach(function (method) {\n        method.handleRevert = handleRevert;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultCommon', {\n    get: function () {\n      return defaultCommon;\n    },\n    set: function (val) {\n      defaultCommon = val; // also set on the Contract object\n\n      _this.Contract.defaultCommon = defaultCommon; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultCommon = defaultCommon;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultHardfork', {\n    get: function () {\n      return defaultHardfork;\n    },\n    set: function (val) {\n      defaultHardfork = val; // also set on the Contract object\n\n      _this.Contract.defaultHardfork = defaultHardfork; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultHardfork = defaultHardfork;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultChain', {\n    get: function () {\n      return defaultChain;\n    },\n    set: function (val) {\n      defaultChain = val; // also set on the Contract object\n\n      _this.Contract.defaultChain = defaultChain; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultChain = defaultChain;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'transactionPollingTimeout', {\n    get: function () {\n      return transactionPollingTimeout;\n    },\n    set: function (val) {\n      transactionPollingTimeout = val; // also set on the Contract object\n\n      _this.Contract.transactionPollingTimeout = transactionPollingTimeout; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.transactionPollingTimeout = transactionPollingTimeout;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'transactionConfirmationBlocks', {\n    get: function () {\n      return transactionConfirmationBlocks;\n    },\n    set: function (val) {\n      transactionConfirmationBlocks = val; // also set on the Contract object\n\n      _this.Contract.transactionConfirmationBlocks = transactionConfirmationBlocks; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.transactionConfirmationBlocks = transactionConfirmationBlocks;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'transactionBlockTimeout', {\n    get: function () {\n      return transactionBlockTimeout;\n    },\n    set: function (val) {\n      transactionBlockTimeout = val; // also set on the Contract object\n\n      _this.Contract.transactionBlockTimeout = transactionBlockTimeout; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.transactionBlockTimeout = transactionBlockTimeout;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultAccount', {\n    get: function () {\n      return defaultAccount;\n    },\n    set: function (val) {\n      if (val) {\n        defaultAccount = utils.toChecksumAddress(formatter.inputAddressFormatter(val));\n      } // also set on the Contract object\n\n\n      _this.Contract.defaultAccount = defaultAccount;\n      _this.personal.defaultAccount = defaultAccount; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultAccount = defaultAccount;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultBlock', {\n    get: function () {\n      return defaultBlock;\n    },\n    set: function (val) {\n      defaultBlock = val; // also set on the Contract object\n\n      _this.Contract.defaultBlock = defaultBlock;\n      _this.personal.defaultBlock = defaultBlock; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultBlock = defaultBlock;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'maxListenersWarningThreshold', {\n    get: function () {\n      return maxListenersWarningThreshold;\n    },\n    set: function (val) {\n      if (_this.currentProvider && _this.currentProvider.setMaxListeners) {\n        maxListenersWarningThreshold = val;\n\n        _this.currentProvider.setMaxListeners(val);\n      }\n    },\n    enumerable: true\n  });\n  this.clearSubscriptions = _this._requestManager.clearSubscriptions.bind(_this._requestManager); // add net\n\n  this.net = new Net(this); // add chain detection\n\n  this.net.getNetworkType = getNetworkType.bind(this); // add accounts\n\n  this.accounts = new Accounts(this); // add personal\n\n  this.personal = new Personal(this);\n  this.personal.defaultAccount = this.defaultAccount; // set warnings threshold\n\n  this.maxListenersWarningThreshold = maxListenersWarningThreshold; // create a proxy Contract type for this instance, as a Contract's provider\n  // is stored as a class member rather than an instance variable. If we do\n  // not create this proxy type, changing the provider in one instance of\n  // web3-eth would subsequently change the provider for _all_ contract\n  // instances!\n\n  var self = this;\n\n  var Contract = function Contract() {\n    BaseContract.apply(this, arguments); // when Eth.setProvider is called, call packageInit\n    // on all contract instances instantiated via this Eth\n    // instances. This will update the currentProvider for\n    // the contract instances\n\n    var _this = this;\n\n    var setProvider = self.setProvider;\n\n    self.setProvider = function () {\n      setProvider.apply(self, arguments);\n      core.packageInit(_this, [self]);\n    };\n  };\n\n  Contract.setProvider = function () {\n    BaseContract.setProvider.apply(this, arguments);\n  }; // make our proxy Contract inherit from web3-eth-contract so that it has all\n  // the right functionality and so that instanceof and friends work properly\n\n\n  Contract.prototype = Object.create(BaseContract.prototype);\n  Contract.prototype.constructor = Contract; // add contract\n\n  this.Contract = Contract;\n  this.Contract.defaultAccount = this.defaultAccount;\n  this.Contract.defaultBlock = this.defaultBlock;\n  this.Contract.transactionBlockTimeout = this.transactionBlockTimeout;\n  this.Contract.transactionConfirmationBlocks = this.transactionConfirmationBlocks;\n  this.Contract.transactionPollingTimeout = this.transactionPollingTimeout;\n  this.Contract.handleRevert = this.handleRevert;\n  this.Contract._requestManager = this._requestManager;\n  this.Contract._ethAccounts = this.accounts;\n  this.Contract.currentProvider = this._requestManager.provider; // add IBAN\n\n  this.Iban = Iban; // add ABI\n\n  this.abi = abi; // add ENS\n\n  this.ens = new ENS(this);\n  var methods = [new Method({\n    name: 'getNodeInfo',\n    call: 'web3_clientVersion'\n  }), new Method({\n    name: 'getProtocolVersion',\n    call: 'eth_protocolVersion',\n    params: 0\n  }), new Method({\n    name: 'getCoinbase',\n    call: 'eth_coinbase',\n    params: 0\n  }), new Method({\n    name: 'isMining',\n    call: 'eth_mining',\n    params: 0\n  }), new Method({\n    name: 'getHashrate',\n    call: 'eth_hashrate',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'isSyncing',\n    call: 'eth_syncing',\n    params: 0,\n    outputFormatter: formatter.outputSyncingFormatter\n  }), new Method({\n    name: 'getGasPrice',\n    call: 'eth_gasPrice',\n    params: 0,\n    outputFormatter: formatter.outputBigNumberFormatter\n  }), new Method({\n    name: 'getAccounts',\n    call: 'eth_accounts',\n    params: 0,\n    outputFormatter: utils.toChecksumAddress\n  }), new Method({\n    name: 'getBlockNumber',\n    call: 'eth_blockNumber',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getBalance',\n    call: 'eth_getBalance',\n    params: 2,\n    inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n    outputFormatter: formatter.outputBigNumberFormatter\n  }), new Method({\n    name: 'getStorageAt',\n    call: 'eth_getStorageAt',\n    params: 3,\n    inputFormatter: [formatter.inputAddressFormatter, utils.numberToHex, formatter.inputDefaultBlockNumberFormatter]\n  }), new Method({\n    name: 'getCode',\n    call: 'eth_getCode',\n    params: 2,\n    inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter]\n  }), new Method({\n    name: 'getBlock',\n    call: blockCall,\n    params: 2,\n    inputFormatter: [formatter.inputBlockNumberFormatter, function (val) {\n      return !!val;\n    }],\n    outputFormatter: formatter.outputBlockFormatter\n  }), new Method({\n    name: 'getUncle',\n    call: uncleCall,\n    params: 2,\n    inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n    outputFormatter: formatter.outputBlockFormatter\n  }), new Method({\n    name: 'getBlockTransactionCount',\n    call: getBlockTransactionCountCall,\n    params: 1,\n    inputFormatter: [formatter.inputBlockNumberFormatter],\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getBlockUncleCount',\n    call: uncleCountCall,\n    params: 1,\n    inputFormatter: [formatter.inputBlockNumberFormatter],\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getTransaction',\n    call: 'eth_getTransactionByHash',\n    params: 1,\n    inputFormatter: [null],\n    outputFormatter: formatter.outputTransactionFormatter\n  }), new Method({\n    name: 'getTransactionFromBlock',\n    call: transactionFromBlockCall,\n    params: 2,\n    inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n    outputFormatter: formatter.outputTransactionFormatter\n  }), new Method({\n    name: 'getTransactionReceipt',\n    call: 'eth_getTransactionReceipt',\n    params: 1,\n    inputFormatter: [null],\n    outputFormatter: formatter.outputTransactionReceiptFormatter\n  }), new Method({\n    name: 'getTransactionCount',\n    call: 'eth_getTransactionCount',\n    params: 2,\n    inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'sendSignedTransaction',\n    call: 'eth_sendRawTransaction',\n    params: 1,\n    inputFormatter: [null],\n    abiCoder: abi\n  }), new Method({\n    name: 'signTransaction',\n    call: 'eth_signTransaction',\n    params: 1,\n    inputFormatter: [formatter.inputTransactionFormatter]\n  }), new Method({\n    name: 'sendTransaction',\n    call: 'eth_sendTransaction',\n    params: 1,\n    inputFormatter: [formatter.inputTransactionFormatter],\n    abiCoder: abi\n  }), new Method({\n    name: 'sign',\n    call: 'eth_sign',\n    params: 2,\n    inputFormatter: [formatter.inputSignFormatter, formatter.inputAddressFormatter],\n    transformPayload: function (payload) {\n      payload.params.reverse();\n      return payload;\n    }\n  }), new Method({\n    name: 'call',\n    call: 'eth_call',\n    params: 2,\n    inputFormatter: [formatter.inputCallFormatter, formatter.inputDefaultBlockNumberFormatter],\n    abiCoder: abi\n  }), new Method({\n    name: 'estimateGas',\n    call: 'eth_estimateGas',\n    params: 1,\n    inputFormatter: [formatter.inputCallFormatter],\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'submitWork',\n    call: 'eth_submitWork',\n    params: 3\n  }), new Method({\n    name: 'getWork',\n    call: 'eth_getWork',\n    params: 0\n  }), new Method({\n    name: 'getPastLogs',\n    call: 'eth_getLogs',\n    params: 1,\n    inputFormatter: [formatter.inputLogFormatter],\n    outputFormatter: formatter.outputLogFormatter\n  }), new Method({\n    name: 'getChainId',\n    call: 'eth_chainId',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'requestAccounts',\n    call: 'eth_requestAccounts',\n    params: 0,\n    outputFormatter: utils.toChecksumAddress\n  }), new Method({\n    name: 'getProof',\n    call: 'eth_getProof',\n    params: 3,\n    inputFormatter: [formatter.inputAddressFormatter, formatter.inputStorageKeysFormatter, formatter.inputDefaultBlockNumberFormatter],\n    outputFormatter: formatter.outputProofFormatter\n  }), new Method({\n    name: 'getPendingTransactions',\n    call: 'eth_pendingTransactions',\n    params: 0,\n    outputFormatter: formatter.outputTransactionFormatter\n  }), // subscriptions\n  new Subscriptions({\n    name: 'subscribe',\n    type: 'eth',\n    subscriptions: {\n      'newBlockHeaders': {\n        // TODO rename on RPC side?\n        subscriptionName: 'newHeads',\n        // replace subscription with this name\n        params: 0,\n        outputFormatter: formatter.outputBlockFormatter\n      },\n      'pendingTransactions': {\n        subscriptionName: 'newPendingTransactions',\n        // replace subscription with this name\n        params: 0\n      },\n      'logs': {\n        params: 1,\n        inputFormatter: [formatter.inputLogFormatter],\n        outputFormatter: formatter.outputLogFormatter,\n        // DUBLICATE, also in web3-eth-contract\n        subscriptionHandler: function (output) {\n          if (output.removed) {\n            this.emit('changed', output);\n          } else {\n            this.emit('data', output);\n          }\n\n          if (_.isFunction(this.callback)) {\n            this.callback(null, output, this);\n          }\n        }\n      },\n      'syncing': {\n        params: 0,\n        outputFormatter: formatter.outputSyncingFormatter,\n        subscriptionHandler: function (output) {\n          var _this = this; // fire TRUE at start\n\n\n          if (this._isSyncing !== true) {\n            this._isSyncing = true;\n            this.emit('changed', _this._isSyncing);\n\n            if (_.isFunction(this.callback)) {\n              this.callback(null, _this._isSyncing, this);\n            }\n\n            setTimeout(function () {\n              _this.emit('data', output);\n\n              if (_.isFunction(_this.callback)) {\n                _this.callback(null, output, _this);\n              }\n            }, 0); // fire sync status\n          } else {\n            this.emit('data', output);\n\n            if (_.isFunction(_this.callback)) {\n              this.callback(null, output, this);\n            } // wait for some time before fireing the FALSE\n\n\n            clearTimeout(this._isSyncingTimeout);\n            this._isSyncingTimeout = setTimeout(function () {\n              if (output.currentBlock > output.highestBlock - 200) {\n                _this._isSyncing = false;\n\n                _this.emit('changed', _this._isSyncing);\n\n                if (_.isFunction(_this.callback)) {\n                  _this.callback(null, _this._isSyncing, _this);\n                }\n              }\n            }, 500);\n          }\n        }\n      }\n    }\n  })];\n  methods.forEach(function (method) {\n    method.attachToObject(_this);\n    method.setRequestManager(_this._requestManager, _this.accounts); // second param is the eth.accounts module (necessary for signing transactions locally)\n\n    method.defaultBlock = _this.defaultBlock;\n    method.defaultAccount = _this.defaultAccount;\n    method.transactionBlockTimeout = _this.transactionBlockTimeout;\n    method.transactionConfirmationBlocks = _this.transactionConfirmationBlocks;\n    method.transactionPollingTimeout = _this.transactionPollingTimeout;\n    method.handleRevert = _this.handleRevert;\n  });\n}; // Adds the static givenProvider and providers property to the Eth module\n\n\ncore.addProviders(Eth);\nmodule.exports = Eth;","map":{"version":3,"names":["_","require","core","helpers","Subscriptions","subscriptions","Method","utils","Net","ENS","Personal","BaseContract","Iban","Accounts","abi","getNetworkType","formatter","formatters","blockCall","args","isString","indexOf","transactionFromBlockCall","uncleCall","getBlockTransactionCountCall","uncleCountCall","Eth","_this","packageInit","arguments","setRequestManager","manager","net","personal","accounts","Contract","_requestManager","currentProvider","_provider","setProvider","apply","ens","_detectedAddress","_lastSyncCheck","handleRevert","defaultAccount","defaultBlock","transactionBlockTimeout","transactionConfirmationBlocks","transactionPollingTimeout","maxListenersWarningThreshold","defaultChain","defaultHardfork","defaultCommon","Object","defineProperty","get","set","val","methods","forEach","method","enumerable","toChecksumAddress","inputAddressFormatter","setMaxListeners","clearSubscriptions","bind","self","prototype","create","constructor","_ethAccounts","provider","name","call","params","outputFormatter","hexToNumber","outputSyncingFormatter","outputBigNumberFormatter","inputFormatter","inputDefaultBlockNumberFormatter","numberToHex","inputBlockNumberFormatter","outputBlockFormatter","outputTransactionFormatter","outputTransactionReceiptFormatter","abiCoder","inputTransactionFormatter","inputSignFormatter","transformPayload","payload","reverse","inputCallFormatter","inputLogFormatter","outputLogFormatter","inputStorageKeysFormatter","outputProofFormatter","type","subscriptionName","subscriptionHandler","output","removed","emit","isFunction","callback","_isSyncing","setTimeout","clearTimeout","_isSyncingTimeout","currentBlock","highestBlock","attachToObject","addProviders","module","exports"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/node_modules/web3-eth/src/index.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar helpers = require('web3-core-helpers');\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\nvar Method = require('web3-core-method');\nvar utils = require('web3-utils');\nvar Net = require('web3-net');\n\nvar ENS = require('web3-eth-ens');\nvar Personal = require('web3-eth-personal');\nvar BaseContract = require('web3-eth-contract');\nvar Iban = require('web3-eth-iban');\nvar Accounts = require('web3-eth-accounts');\nvar abi = require('web3-eth-abi');\n\nvar getNetworkType = require('./getNetworkType.js');\nvar formatter = helpers.formatters;\n\n\nvar blockCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? \"eth_getBlockByHash\" : \"eth_getBlockByNumber\";\n};\n\nvar transactionFromBlockCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getTransactionByBlockHashAndIndex' : 'eth_getTransactionByBlockNumberAndIndex';\n};\n\nvar uncleCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleByBlockHashAndIndex' : 'eth_getUncleByBlockNumberAndIndex';\n};\n\nvar getBlockTransactionCountCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getBlockTransactionCountByHash' : 'eth_getBlockTransactionCountByNumber';\n};\n\nvar uncleCountCall = function (args) {\n    return (_.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleCountByBlockHash' : 'eth_getUncleCountByBlockNumber';\n};\n\n\nvar Eth = function Eth() {\n    var _this = this;\n\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n\n    // overwrite package setRequestManager\n    var setRequestManager = this.setRequestManager;\n    this.setRequestManager = function (manager) {\n        setRequestManager(manager);\n\n        _this.net.setRequestManager(manager);\n        _this.personal.setRequestManager(manager);\n        _this.accounts.setRequestManager(manager);\n        _this.Contract._requestManager = _this._requestManager;\n        _this.Contract.currentProvider = _this._provider;\n\n        return true;\n    };\n\n    // overwrite setProvider\n    var setProvider = this.setProvider;\n    this.setProvider = function () {\n        setProvider.apply(_this, arguments);\n\n        _this.setRequestManager(_this._requestManager);\n\n        // Set detectedAddress/lastSyncCheck back to null because the provider could be connected to a different chain now\n        _this.ens._detectedAddress = null;\n        _this.ens._lastSyncCheck = null;\n    };\n\n\n    var handleRevert = false;\n    var defaultAccount = null;\n    var defaultBlock = 'latest';\n    var transactionBlockTimeout = 50;\n    var transactionConfirmationBlocks = 24;\n    var transactionPollingTimeout = 750;\n    var maxListenersWarningThreshold = 100;\n    var defaultChain, defaultHardfork, defaultCommon;\n\n    Object.defineProperty(this, 'handleRevert', {\n        get: function () {\n            return handleRevert;\n        },\n        set: function (val) {\n            handleRevert = val;\n\n            // also set on the Contract object\n            _this.Contract.handleRevert = handleRevert;\n\n            // update handleRevert\n            methods.forEach(function(method) {\n                method.handleRevert = handleRevert;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultCommon', {\n        get: function () {\n            return defaultCommon;\n        },\n        set: function (val) {\n            defaultCommon = val;\n\n            // also set on the Contract object\n            _this.Contract.defaultCommon = defaultCommon;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultCommon = defaultCommon;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultHardfork', {\n        get: function () {\n            return defaultHardfork;\n        },\n        set: function (val) {\n            defaultHardfork = val;\n\n            // also set on the Contract object\n            _this.Contract.defaultHardfork = defaultHardfork;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultHardfork = defaultHardfork;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultChain', {\n        get: function () {\n            return defaultChain;\n        },\n        set: function (val) {\n            defaultChain = val;\n\n            // also set on the Contract object\n            _this.Contract.defaultChain = defaultChain;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultChain = defaultChain;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionPollingTimeout', {\n        get: function () {\n            return transactionPollingTimeout;\n        },\n        set: function (val) {\n            transactionPollingTimeout = val;\n\n            // also set on the Contract object\n            _this.Contract.transactionPollingTimeout = transactionPollingTimeout;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.transactionPollingTimeout = transactionPollingTimeout;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionConfirmationBlocks', {\n        get: function () {\n            return transactionConfirmationBlocks;\n        },\n        set: function (val) {\n            transactionConfirmationBlocks = val;\n\n            // also set on the Contract object\n            _this.Contract.transactionConfirmationBlocks = transactionConfirmationBlocks;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.transactionConfirmationBlocks = transactionConfirmationBlocks;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionBlockTimeout', {\n        get: function () {\n            return transactionBlockTimeout;\n        },\n        set: function (val) {\n            transactionBlockTimeout = val;\n\n            // also set on the Contract object\n            _this.Contract.transactionBlockTimeout = transactionBlockTimeout;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.transactionBlockTimeout = transactionBlockTimeout;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultAccount', {\n        get: function () {\n            return defaultAccount;\n        },\n        set: function (val) {\n            if(val) {\n                defaultAccount = utils.toChecksumAddress(formatter.inputAddressFormatter(val));\n            }\n\n            // also set on the Contract object\n            _this.Contract.defaultAccount = defaultAccount;\n            _this.personal.defaultAccount = defaultAccount;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultAccount = defaultAccount;\n            });\n\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultBlock', {\n        get: function () {\n            return defaultBlock;\n        },\n        set: function (val) {\n            defaultBlock = val;\n            // also set on the Contract object\n            _this.Contract.defaultBlock = defaultBlock;\n            _this.personal.defaultBlock = defaultBlock;\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultBlock = defaultBlock;\n            });\n\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'maxListenersWarningThreshold', {\n        get: function () {\n            return maxListenersWarningThreshold;\n        },\n        set: function (val) {\n            if (_this.currentProvider && _this.currentProvider.setMaxListeners){\n                maxListenersWarningThreshold = val;\n                _this.currentProvider.setMaxListeners(val);\n            }\n        },\n        enumerable: true\n    });\n\n\n    this.clearSubscriptions = _this._requestManager.clearSubscriptions.bind(_this._requestManager);\n\n    // add net\n    this.net = new Net(this);\n    // add chain detection\n    this.net.getNetworkType = getNetworkType.bind(this);\n\n    // add accounts\n    this.accounts = new Accounts(this);\n\n    // add personal\n    this.personal = new Personal(this);\n    this.personal.defaultAccount = this.defaultAccount;\n\n    // set warnings threshold\n    this.maxListenersWarningThreshold = maxListenersWarningThreshold;\n\n    // create a proxy Contract type for this instance, as a Contract's provider\n    // is stored as a class member rather than an instance variable. If we do\n    // not create this proxy type, changing the provider in one instance of\n    // web3-eth would subsequently change the provider for _all_ contract\n    // instances!\n    var self = this;\n    var Contract = function Contract() {\n        BaseContract.apply(this, arguments);\n\n        // when Eth.setProvider is called, call packageInit\n        // on all contract instances instantiated via this Eth\n        // instances. This will update the currentProvider for\n        // the contract instances\n        var _this = this;\n        var setProvider = self.setProvider;\n        self.setProvider = function() {\n          setProvider.apply(self, arguments);\n          core.packageInit(_this, [self]);\n        };\n    };\n\n    Contract.setProvider = function() {\n        BaseContract.setProvider.apply(this, arguments);\n    };\n\n    // make our proxy Contract inherit from web3-eth-contract so that it has all\n    // the right functionality and so that instanceof and friends work properly\n    Contract.prototype = Object.create(BaseContract.prototype);\n    Contract.prototype.constructor = Contract;\n\n    // add contract\n    this.Contract = Contract;\n    this.Contract.defaultAccount = this.defaultAccount;\n    this.Contract.defaultBlock = this.defaultBlock;\n    this.Contract.transactionBlockTimeout = this.transactionBlockTimeout;\n    this.Contract.transactionConfirmationBlocks = this.transactionConfirmationBlocks;\n    this.Contract.transactionPollingTimeout = this.transactionPollingTimeout;\n    this.Contract.handleRevert = this.handleRevert;\n    this.Contract._requestManager = this._requestManager;\n    this.Contract._ethAccounts = this.accounts;\n    this.Contract.currentProvider = this._requestManager.provider;\n\n    // add IBAN\n    this.Iban = Iban;\n\n    // add ABI\n    this.abi = abi;\n\n    // add ENS\n    this.ens = new ENS(this);\n\n    var methods = [\n        new Method({\n            name: 'getNodeInfo',\n            call: 'web3_clientVersion'\n        }),\n        new Method({\n            name: 'getProtocolVersion',\n            call: 'eth_protocolVersion',\n            params: 0\n        }),\n        new Method({\n            name: 'getCoinbase',\n            call: 'eth_coinbase',\n            params: 0\n        }),\n        new Method({\n            name: 'isMining',\n            call: 'eth_mining',\n            params: 0\n        }),\n        new Method({\n            name: 'getHashrate',\n            call: 'eth_hashrate',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'isSyncing',\n            call: 'eth_syncing',\n            params: 0,\n            outputFormatter: formatter.outputSyncingFormatter\n        }),\n        new Method({\n            name: 'getGasPrice',\n            call: 'eth_gasPrice',\n            params: 0,\n            outputFormatter: formatter.outputBigNumberFormatter\n        }),\n        new Method({\n            name: 'getAccounts',\n            call: 'eth_accounts',\n            params: 0,\n            outputFormatter: utils.toChecksumAddress\n        }),\n        new Method({\n            name: 'getBlockNumber',\n            call: 'eth_blockNumber',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getBalance',\n            call: 'eth_getBalance',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: formatter.outputBigNumberFormatter\n        }),\n        new Method({\n            name: 'getStorageAt',\n            call: 'eth_getStorageAt',\n            params: 3,\n            inputFormatter: [formatter.inputAddressFormatter, utils.numberToHex, formatter.inputDefaultBlockNumberFormatter]\n        }),\n        new Method({\n            name: 'getCode',\n            call: 'eth_getCode',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter]\n        }),\n        new Method({\n            name: 'getBlock',\n            call: blockCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, function (val) { return !!val; }],\n            outputFormatter: formatter.outputBlockFormatter\n        }),\n        new Method({\n            name: 'getUncle',\n            call: uncleCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n            outputFormatter: formatter.outputBlockFormatter,\n\n        }),\n        new Method({\n            name: 'getBlockTransactionCount',\n            call: getBlockTransactionCountCall,\n            params: 1,\n            inputFormatter: [formatter.inputBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getBlockUncleCount',\n            call: uncleCountCall,\n            params: 1,\n            inputFormatter: [formatter.inputBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getTransaction',\n            call: 'eth_getTransactionByHash',\n            params: 1,\n            inputFormatter: [null],\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n        new Method({\n            name: 'getTransactionFromBlock',\n            call: transactionFromBlockCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n        new Method({\n            name: 'getTransactionReceipt',\n            call: 'eth_getTransactionReceipt',\n            params: 1,\n            inputFormatter: [null],\n            outputFormatter: formatter.outputTransactionReceiptFormatter\n        }),\n        new Method({\n            name: 'getTransactionCount',\n            call: 'eth_getTransactionCount',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'sendSignedTransaction',\n            call: 'eth_sendRawTransaction',\n            params: 1,\n            inputFormatter: [null],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'signTransaction',\n            call: 'eth_signTransaction',\n            params: 1,\n            inputFormatter: [formatter.inputTransactionFormatter]\n        }),\n        new Method({\n            name: 'sendTransaction',\n            call: 'eth_sendTransaction',\n            params: 1,\n            inputFormatter: [formatter.inputTransactionFormatter],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'sign',\n            call: 'eth_sign',\n            params: 2,\n            inputFormatter: [formatter.inputSignFormatter, formatter.inputAddressFormatter],\n            transformPayload: function (payload) {\n                payload.params.reverse();\n                return payload;\n            }\n        }),\n        new Method({\n            name: 'call',\n            call: 'eth_call',\n            params: 2,\n            inputFormatter: [formatter.inputCallFormatter, formatter.inputDefaultBlockNumberFormatter],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'estimateGas',\n            call: 'eth_estimateGas',\n            params: 1,\n            inputFormatter: [formatter.inputCallFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'submitWork',\n            call: 'eth_submitWork',\n            params: 3\n        }),\n        new Method({\n            name: 'getWork',\n            call: 'eth_getWork',\n            params: 0\n        }),\n        new Method({\n            name: 'getPastLogs',\n            call: 'eth_getLogs',\n            params: 1,\n            inputFormatter: [formatter.inputLogFormatter],\n            outputFormatter: formatter.outputLogFormatter\n        }),\n        new Method({\n            name: 'getChainId',\n            call: 'eth_chainId',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'requestAccounts',\n            call: 'eth_requestAccounts',\n            params: 0,\n            outputFormatter: utils.toChecksumAddress\n        }),\n        new Method({\n            name: 'getProof',\n            call: 'eth_getProof',\n            params: 3,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputStorageKeysFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: formatter.outputProofFormatter\n        }),\n        new Method({\n            name: 'getPendingTransactions',\n            call: 'eth_pendingTransactions',\n            params: 0,\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n\n        // subscriptions\n        new Subscriptions({\n            name: 'subscribe',\n            type: 'eth',\n            subscriptions: {\n                'newBlockHeaders': {\n                    // TODO rename on RPC side?\n                    subscriptionName: 'newHeads', // replace subscription with this name\n                    params: 0,\n                    outputFormatter: formatter.outputBlockFormatter\n                },\n                'pendingTransactions': {\n                    subscriptionName: 'newPendingTransactions', // replace subscription with this name\n                    params: 0\n                },\n                'logs': {\n                    params: 1,\n                    inputFormatter: [formatter.inputLogFormatter],\n                    outputFormatter: formatter.outputLogFormatter,\n                    // DUBLICATE, also in web3-eth-contract\n                    subscriptionHandler: function (output) {\n                        if(output.removed) {\n                            this.emit('changed', output);\n                        } else {\n                            this.emit('data', output);\n                        }\n\n                        if (_.isFunction(this.callback)) {\n                            this.callback(null, output, this);\n                        }\n                    }\n                },\n                'syncing': {\n                    params: 0,\n                    outputFormatter: formatter.outputSyncingFormatter,\n                    subscriptionHandler: function (output) {\n                        var _this = this;\n\n                        // fire TRUE at start\n                        if(this._isSyncing !== true) {\n                            this._isSyncing = true;\n                            this.emit('changed', _this._isSyncing);\n\n                            if (_.isFunction(this.callback)) {\n                                this.callback(null, _this._isSyncing, this);\n                            }\n\n                            setTimeout(function () {\n                                _this.emit('data', output);\n\n                                if (_.isFunction(_this.callback)) {\n                                    _this.callback(null, output, _this);\n                                }\n                            }, 0);\n\n                            // fire sync status\n                        } else {\n                            this.emit('data', output);\n                            if (_.isFunction(_this.callback)) {\n                                this.callback(null, output, this);\n                            }\n\n                            // wait for some time before fireing the FALSE\n                            clearTimeout(this._isSyncingTimeout);\n                            this._isSyncingTimeout = setTimeout(function () {\n                                if(output.currentBlock > output.highestBlock - 200) {\n                                    _this._isSyncing = false;\n                                    _this.emit('changed', _this._isSyncing);\n\n                                    if (_.isFunction(_this.callback)) {\n                                        _this.callback(null, _this._isSyncing, _this);\n                                    }\n                                }\n                            }, 500);\n                        }\n                    }\n                }\n            }\n        })\n    ];\n\n    methods.forEach(function(method) {\n        method.attachToObject(_this);\n        method.setRequestManager(_this._requestManager, _this.accounts); // second param is the eth.accounts module (necessary for signing transactions locally)\n        method.defaultBlock = _this.defaultBlock;\n        method.defaultAccount = _this.defaultAccount;\n        method.transactionBlockTimeout = _this.transactionBlockTimeout;\n        method.transactionConfirmationBlocks = _this.transactionConfirmationBlocks;\n        method.transactionPollingTimeout = _this.transactionPollingTimeout;\n        method.handleRevert = _this.handleRevert;\n    });\n\n};\n\n// Adds the static givenProvider and providers property to the Eth module\ncore.addProviders(Eth);\n\n\nmodule.exports = Eth;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}