{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\Reel.js\";\nimport React, { useState, useRef, useEffect, forwardRef } from \"react\";\nimport Constants from \"../Constants\";\nimport Symbol from \"./Symbol\";\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet offset = 0;\n\nconst Reel = props => {\n  //42 symbols\n  //  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPKKQQAAG\";\n  //const symbols = \"DDDGNNSS\";\n  const symbols = Constants.REEL_SYMBOLS;\n  let reelIdx = [];\n  let reelImg = [];\n  let reelSymbols = \"\";\n  let reels = [];\n  let randomNr = 3;\n  let opacity = props.opacity;\n\n  const randomBetween = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const generatedSymbols = randomNr => {\n    //   for(let i=0; i<3;i++){\n    //       element=(symbols[props.index])[(randomNr/246)+i];\n    //       reelIdx.push(element);\n    //   }\n    let elementPos = -(randomNr / 246);\n\n    for (let i = 0; i < 3; i++) {\n      reelIdx.push(elementPos + i);\n      reelImg.push(reelSymbols[elementPos + i]);\n    }\n  };\n\n  const getRandomNr = () => {\n    if (props.game > 0) {\n      randomNr = -(randomBetween((Constants.REELS_REPEAT - 2) * symbols[props.index].length, (Constants.REELS_REPEAT - 8) * symbols[props.index].length) * 246);\n    }\n\n    if (offset === randomNr) {\n      getRandomNr();\n    } else {\n      offset = randomNr;\n    }\n\n    console.log(\"randomNr = \" + randomNr);\n    generatedSymbols(randomNr);\n  };\n\n  if (props.game === 0) {\n    reelSymbols = symbols[props.index].split(\"\");\n  } else if (props.game > 0) {\n    reelSymbols = symbols[props.index].repeat(Constants.REELS_REPEAT).split(\"\");\n    getRandomNr();\n  }\n\n  const sendArrayList = () => {\n    if (reelIdx.length === 3) {\n      props.createArray(reelIdx, reelImg);\n    }\n  };\n\n  const createReels = () => {\n    reels = reelSymbols.map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(Symbol, {\n        symbol: el,\n        index: idx,\n        spin: props.game\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: reels\n    }, void 0, false);\n  };\n\n  const variants = {\n    opacity: {\n      opacity: 1\n    },\n    spin: {\n      y: offset,\n      opacity: opacity,\n      transition: {\n        duration: 3,\n        delay: props.index * 0.8\n      }\n    },\n    exit: {\n      opacity: 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"reel\",\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      variants: variants,\n      opacity: \"initial\",\n      animate: \"spin\",\n      className: \"icons\",\n      ref: symbolRef,\n      children: createReels()\n    }, props.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Reel;\nexport default Reel;\n/*\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Reel\");","map":{"version":3,"names":["React","useState","useRef","useEffect","forwardRef","Constants","Symbol","motion","offset","Reel","props","symbols","REEL_SYMBOLS","reelIdx","reelImg","reelSymbols","reels","randomNr","opacity","randomBetween","min","max","Math","floor","random","generatedSymbols","elementPos","i","push","getRandomNr","game","REELS_REPEAT","index","length","console","log","split","repeat","sendArrayList","createArray","createReels","map","el","idx","variants","spin","y","transition","duration","delay","exit","symbolRef"],"sources":["F:/Games/slotmachinereact/src/components/Reel.js"],"sourcesContent":["import React, { useState, useRef, useEffect, forwardRef } from \"react\";\r\nimport Constants from \"../Constants\";\r\nimport Symbol from \"./Symbol\";\r\nimport {motion} from 'framer-motion';\r\n\r\nlet offset=0;\r\n\r\nconst Reel = (props) => {\r\n  //42 symbols\r\n//  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPKKQQAAG\";\r\n//const symbols = \"DDDGNNSS\";\r\n  const symbols = Constants.REEL_SYMBOLS;\r\n  let reelIdx=[];\r\n  let reelImg= [];\r\n  let reelSymbols = \"\";\r\n  let reels = [];\r\n  let randomNr=3;\r\n  let opacity=props.opacity;\r\n\r\n  const randomBetween = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  const generatedSymbols =(randomNr)=>{\r\n    //   for(let i=0; i<3;i++){\r\n    //       element=(symbols[props.index])[(randomNr/246)+i];\r\n    //       reelIdx.push(element);\r\n    //   }\r\n       let elementPos=-(randomNr/246);\r\n\r\n       for(let i=0; i<3;i++){\r\n        reelIdx.push(elementPos+i);\r\n        reelImg.push(reelSymbols[elementPos+i]);\r\n       }\r\n     }\r\n\r\n     const getRandomNr = () => {\r\n      if (props.game > 0) {\r\n      randomNr = -(randomBetween(\r\n          (Constants.REELS_REPEAT - 2) * symbols[props.index].length,\r\n          (Constants.REELS_REPEAT - 8) * symbols[props.index].length\r\n        ) * 246);\r\n       \r\n      }\r\n  \r\n      if(offset===randomNr){\r\n        getRandomNr();\r\n    }\r\n   else{\r\n        offset=randomNr;\r\n    }\r\n    console.log(\"randomNr = \"+randomNr);\r\n    generatedSymbols(randomNr);\r\n  };\r\n\r\n  if (props.game === 0) {\r\n    reelSymbols = symbols[props.index].split(\"\");\r\n  } else if(props.game>0){\r\n    reelSymbols = symbols[props.index].repeat(Constants.REELS_REPEAT).split(\"\");\r\n    getRandomNr();\r\n  }\r\n\r\n\r\n  const sendArrayList = ()=>{\r\n    if(reelIdx.length===3){\r\n        props.createArray(reelIdx, reelImg);\r\n    }\r\n   \r\n  }\r\n  \r\n  const createReels = () =>{\r\n    reels=reelSymbols.map((el, idx) => {\r\n        return (\r\n          <Symbol symbol={el} key={idx} index={idx} spin={props.game} />\r\n        );\r\n      })\r\n      return <>{reels}</>\r\n  }\r\n  const variants = {\r\n    opacity:{\r\n        opacity: 1 \r\n    },\r\n    spin: {\r\n       y:offset,\r\n       opacity:opacity, \r\n       transition:{ \r\n            duration:3, \r\n            delay:props.index * 0.8 \r\n        },\r\n    },\r\n    exit : { opacity: 1 }\r\n  };\r\n \r\n  return (\r\n    <motion.div className=\"reel\" >\r\n      <motion.div key={props.index} variants={variants}  opacity=\"initial\"  animate=\"spin\" className=\"icons\" ref={symbolRef}>\r\n        {createReels()}\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\nexport default Reel;\r\n\r\n\r\n/*\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G\r\n*/\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}