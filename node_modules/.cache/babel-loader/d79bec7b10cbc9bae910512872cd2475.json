{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport ReelSet from \"./components/ReelSet\";\nimport './assets/css/App.css';\nimport './assets/css/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [score, setScore] = useState(2); // console.log(\"My score is: \"+scr);\n\n  let myScore = 2;\n  useEffect(() => {\n    console.log(\"mounted : \" + score);\n    return () => {\n      console.log(\"unmounted:\" + score);\n    };\n  }, [score]);\n\n  const handleCallback = e => {\n    console.log(\"Adding to score: \" + e);\n    myScore = Math.round((myScore + e) * 100) / 100;\n    console.log(\"handleCallback => My final score is:\" + myScore);\n    console.log(\"handleCallback => My score is: \" + score);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReelSet, {\n      dadCallback: handleCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"score\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"uQlvAjdpbWkldiR9YqoJYFOia/M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","ReelSet","App","props","score","setScore","myScore","console","log","handleCallback","e","Math","round"],"sources":["F:/Games/slotmachinereact/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport ReelSet from \"./components/ReelSet\"\nimport './assets/css/App.css'\n\nimport './assets/css/App.css';\n\nconst  App=(props)=> {\n\n  const [score, setScore] = useState(2);\n // console.log(\"My score is: \"+scr);\nlet myScore=2;\n\nuseEffect(() => {\n  console.log(\"mounted : \"+score);\n\n  return () => {\n    console.log(\"unmounted:\"+score); \n  };\n}, [score]);\n\nconst handleCallback = (e)=>{\n  console.log(\"Adding to score: \"+e);\n  myScore=Math.round((myScore+e) * 100) / 100;\n  console.log(\"handleCallback => My final score is:\"+myScore);\n  console.log(\"handleCallback => My score is: \"+score);\n  \n} \n\n  return (\n    <>\n      <ReelSet dadCallback={handleCallback}/>\n      <div id=\"controls\">\n      <label>\n              Score:<span id=\"score\">{score}</span>\n            </label>\n      </div>\n    </>\n  );\n}\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,sBAAP;AAEA,OAAO,sBAAP;;;;AAEA,MAAOC,GAAG,GAAEC,KAAD,IAAU;EAAA;;EAEnB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC,CAFmB,CAGpB;;EACD,IAAIS,OAAO,GAAC,CAAZ;EAEAP,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACC,GAAR,CAAY,eAAaJ,KAAzB;IAEA,OAAO,MAAM;MACXG,OAAO,CAACC,GAAR,CAAY,eAAaJ,KAAzB;IACD,CAFD;EAGD,CANQ,EAMN,CAACA,KAAD,CANM,CAAT;;EAQA,MAAMK,cAAc,GAAIC,CAAD,IAAK;IAC1BH,OAAO,CAACC,GAAR,CAAY,sBAAoBE,CAAhC;IACAJ,OAAO,GAACK,IAAI,CAACC,KAAL,CAAW,CAACN,OAAO,GAACI,CAAT,IAAc,GAAzB,IAAgC,GAAxC;IACAH,OAAO,CAACC,GAAR,CAAY,yCAAuCF,OAAnD;IACAC,OAAO,CAACC,GAAR,CAAY,oCAAkCJ,KAA9C;EAED,CAND;;EAQE,oBACE;IAAA,wBACE,QAAC,OAAD;MAAS,WAAW,EAAEK;IAAtB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,EAAE,EAAC,UAAR;MAAA,uBACA;QAAA,kCACc;UAAM,EAAE,EAAC,OAAT;UAAA,UAAkBL;QAAlB;UAAA;UAAA;UAAA;QAAA,QADd;MAAA;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAUD,CAhCD;;GAAOF,G;;KAAAA,G;AAiCP,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}