{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compile = exports.compileAndSave = exports.compileProject = void 0;\n\nconst config_1 = require(\"./config\");\n\nconst utils_1 = require(\"./utils\");\n\nconst getCompileFunction_1 = require(\"./getCompileFunction\");\n\nconst findInputs_1 = require(\"./findInputs\");\n\nconst saveOutput_1 = require(\"./saveOutput\");\n\nconst imports_fs_1 = require(\"@resolver-engine/imports-fs\");\n\nconst imports_1 = require(\"@resolver-engine/imports\");\n\nconst generateTypes_1 = require(\"./generateTypes\");\n\nasync function compileProject(configPath) {\n  const partialConfig = await config_1.loadConfig(configPath);\n  await compileAndSave(partialConfig);\n  const config = config_1.inputToConfig(partialConfig);\n\n  if (config.typechainEnabled) {\n    await generateTypes_1.generateTypes(config);\n  }\n}\n\nexports.compileProject = compileProject;\n\nasync function compileAndSave(input) {\n  const config = config_1.inputToConfig(input);\n  const output = await compile(config);\n  await processOutput(output, config);\n}\n\nexports.compileAndSave = compileAndSave;\n\nasync function compile(input) {\n  return newCompile(config_1.inputToConfig(input));\n}\n\nexports.compile = compile;\n\nasync function newCompile(config) {\n  const resolver = imports_fs_1.ImportsFsEngine().addResolver( // Backwards compatibility - change node_modules path\n  imports_fs_1.resolvers.BacktrackFsResolver(config.nodeModulesDirectory));\n  const sources = await imports_1.gatherSources(findInputs_1.findInputs(config.sourceDirectory, utils_1.getExtensionForCompilerType(config)), '.', resolver);\n  return getCompileFunction_1.getCompileFunction(config)(sources);\n}\n\nasync function processOutput(output, config) {\n  if (output.errors) {\n    console.error(formatErrors(output.errors));\n  }\n\n  if (anyNonWarningErrors(output.errors)) {\n    throw new Error('Compilation failed');\n  } else {\n    await saveOutput_1.saveOutput(output, config);\n  }\n}\n\nfunction anyNonWarningErrors(errors) {\n  return errors && !errors.every(error => error.severity === 'warning');\n}\n\nfunction formatErrors(errors) {\n  return errors.map(toFormattedMessage).join('\\n');\n}\n\nfunction toFormattedMessage(error) {\n  return typeof error === 'string' ? error : error.formattedMessage;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","compile","compileAndSave","compileProject","config_1","require","utils_1","getCompileFunction_1","findInputs_1","saveOutput_1","imports_fs_1","imports_1","generateTypes_1","configPath","partialConfig","loadConfig","config","inputToConfig","typechainEnabled","generateTypes","input","output","processOutput","newCompile","resolver","ImportsFsEngine","addResolver","resolvers","BacktrackFsResolver","nodeModulesDirectory","sources","gatherSources","findInputs","sourceDirectory","getExtensionForCompilerType","getCompileFunction","errors","console","error","formatErrors","anyNonWarningErrors","Error","saveOutput","every","severity","map","toFormattedMessage","join","formattedMessage"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/compiler/dist/cjs/compiler.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compile = exports.compileAndSave = exports.compileProject = void 0;\nconst config_1 = require(\"./config\");\nconst utils_1 = require(\"./utils\");\nconst getCompileFunction_1 = require(\"./getCompileFunction\");\nconst findInputs_1 = require(\"./findInputs\");\nconst saveOutput_1 = require(\"./saveOutput\");\nconst imports_fs_1 = require(\"@resolver-engine/imports-fs\");\nconst imports_1 = require(\"@resolver-engine/imports\");\nconst generateTypes_1 = require(\"./generateTypes\");\nasync function compileProject(configPath) {\n    const partialConfig = await config_1.loadConfig(configPath);\n    await compileAndSave(partialConfig);\n    const config = config_1.inputToConfig(partialConfig);\n    if (config.typechainEnabled) {\n        await generateTypes_1.generateTypes(config);\n    }\n}\nexports.compileProject = compileProject;\nasync function compileAndSave(input) {\n    const config = config_1.inputToConfig(input);\n    const output = await compile(config);\n    await processOutput(output, config);\n}\nexports.compileAndSave = compileAndSave;\nasync function compile(input) {\n    return newCompile(config_1.inputToConfig(input));\n}\nexports.compile = compile;\nasync function newCompile(config) {\n    const resolver = imports_fs_1.ImportsFsEngine().addResolver(\n    // Backwards compatibility - change node_modules path\n    imports_fs_1.resolvers.BacktrackFsResolver(config.nodeModulesDirectory));\n    const sources = await imports_1.gatherSources(findInputs_1.findInputs(config.sourceDirectory, utils_1.getExtensionForCompilerType(config)), '.', resolver);\n    return getCompileFunction_1.getCompileFunction(config)(sources);\n}\nasync function processOutput(output, config) {\n    if (output.errors) {\n        console.error(formatErrors(output.errors));\n    }\n    if (anyNonWarningErrors(output.errors)) {\n        throw new Error('Compilation failed');\n    }\n    else {\n        await saveOutput_1.saveOutput(output, config);\n    }\n}\nfunction anyNonWarningErrors(errors) {\n    return errors && !errors.every(error => error.severity === 'warning');\n}\nfunction formatErrors(errors) {\n    return errors.map(toFormattedMessage).join('\\n');\n}\nfunction toFormattedMessage(error) {\n    return typeof error === 'string' ? error : error.formattedMessage;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}