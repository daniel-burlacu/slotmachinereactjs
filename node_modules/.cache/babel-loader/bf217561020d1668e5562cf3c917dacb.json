{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deployMockContract = void 0;\n\nconst ethers_1 = require(\"ethers\");\n\nconst Doppelganger_json_1 = __importDefault(require(\"./Doppelganger.json\"));\n\nasync function deploy(signer) {\n  const factory = new ethers_1.ContractFactory(Doppelganger_json_1.default.abi, Doppelganger_json_1.default.bytecode, signer);\n  return factory.deploy();\n}\n\nfunction stub(mockContract, encoder, func, params) {\n  const callData = params ? mockContract.interface.encodeFunctionData(func, params) : mockContract.interface.getSighash(func);\n  return {\n    returns: async function () {\n      if (!func.outputs) return;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      const encoded = encoder.encode(func.outputs, args);\n      await mockContract.__waffle__mockReturns(callData, encoded);\n    },\n    reverts: async () => mockContract.__waffle__mockReverts(callData, 'Mock revert'),\n    revertsWithReason: async reason => mockContract.__waffle__mockReverts(callData, reason),\n    withArgs: function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return stub(mockContract, encoder, func, args);\n    }\n  };\n}\n\nfunction createMock(abi, mockContractInstance) {\n  const {\n    functions\n  } = new ethers_1.utils.Interface(abi);\n  const encoder = new ethers_1.utils.AbiCoder();\n  const mockedAbi = Object.values(functions).reduce((acc, func) => {\n    const stubbed = stub(mockContractInstance, encoder, func);\n    return { ...acc,\n      [func.name]: stubbed,\n      [func.format()]: stubbed\n    };\n  }, {});\n  return mockedAbi;\n}\n\nasync function deployMockContract(signer, abi) {\n  const mockContractInstance = await deploy(signer);\n  const mock = createMock(abi, mockContractInstance);\n  const mockedContract = new ethers_1.Contract(mockContractInstance.address, abi, signer);\n  mockedContract.mock = mock;\n  const encoder = new ethers_1.utils.AbiCoder();\n\n  mockedContract.staticcall = async function (contract, functionName) {\n    let func = contract.interface.functions[functionName];\n\n    if (!func) {\n      func = Object.values(contract.interface.functions).find(f => f.name === functionName);\n    }\n\n    if (!func) {\n      throw new Error(`Unknown function ${functionName}`);\n    }\n\n    if (!func.outputs) {\n      throw new Error('Cannot staticcall function with no outputs');\n    }\n\n    for (var _len3 = arguments.length, params = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n      params[_key3 - 2] = arguments[_key3];\n    }\n\n    const tx = await contract.populateTransaction[functionName](...params);\n    const data = tx.data;\n    let result;\n    const returnValue = await mockContractInstance.__waffle__staticcall(contract.address, data);\n    result = encoder.decode(func.outputs, returnValue);\n\n    if (result.length === 1) {\n      result = result[0];\n    }\n\n    return result;\n  };\n\n  mockedContract.call = async function (contract, functionName) {\n    for (var _len4 = arguments.length, params = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n      params[_key4 - 2] = arguments[_key4];\n    }\n\n    const tx = await contract.populateTransaction[functionName](...params);\n    const data = tx.data;\n    return mockContractInstance.__waffle__call(contract.address, data);\n  };\n\n  return mockedContract;\n}\n\nexports.deployMockContract = deployMockContract;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","deployMockContract","ethers_1","require","Doppelganger_json_1","deploy","signer","factory","ContractFactory","default","abi","bytecode","stub","mockContract","encoder","func","params","callData","interface","encodeFunctionData","getSighash","returns","outputs","args","encoded","encode","__waffle__mockReturns","reverts","__waffle__mockReverts","revertsWithReason","reason","withArgs","createMock","mockContractInstance","functions","utils","Interface","AbiCoder","mockedAbi","values","reduce","acc","stubbed","name","format","mock","mockedContract","Contract","address","staticcall","contract","functionName","find","f","Error","tx","populateTransaction","data","result","returnValue","__waffle__staticcall","decode","length","call","__waffle__call"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/mock-contract/dist/cjs/index.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deployMockContract = void 0;\nconst ethers_1 = require(\"ethers\");\nconst Doppelganger_json_1 = __importDefault(require(\"./Doppelganger.json\"));\nasync function deploy(signer) {\n    const factory = new ethers_1.ContractFactory(Doppelganger_json_1.default.abi, Doppelganger_json_1.default.bytecode, signer);\n    return factory.deploy();\n}\nfunction stub(mockContract, encoder, func, params) {\n    const callData = params\n        ? mockContract.interface.encodeFunctionData(func, params)\n        : mockContract.interface.getSighash(func);\n    return {\n        returns: async (...args) => {\n            if (!func.outputs)\n                return;\n            const encoded = encoder.encode(func.outputs, args);\n            await mockContract.__waffle__mockReturns(callData, encoded);\n        },\n        reverts: async () => mockContract.__waffle__mockReverts(callData, 'Mock revert'),\n        revertsWithReason: async (reason) => mockContract.__waffle__mockReverts(callData, reason),\n        withArgs: (...args) => stub(mockContract, encoder, func, args)\n    };\n}\nfunction createMock(abi, mockContractInstance) {\n    const { functions } = new ethers_1.utils.Interface(abi);\n    const encoder = new ethers_1.utils.AbiCoder();\n    const mockedAbi = Object.values(functions).reduce((acc, func) => {\n        const stubbed = stub(mockContractInstance, encoder, func);\n        return {\n            ...acc,\n            [func.name]: stubbed,\n            [func.format()]: stubbed\n        };\n    }, {});\n    return mockedAbi;\n}\nasync function deployMockContract(signer, abi) {\n    const mockContractInstance = await deploy(signer);\n    const mock = createMock(abi, mockContractInstance);\n    const mockedContract = new ethers_1.Contract(mockContractInstance.address, abi, signer);\n    mockedContract.mock = mock;\n    const encoder = new ethers_1.utils.AbiCoder();\n    mockedContract.staticcall = async (contract, functionName, ...params) => {\n        let func = contract.interface.functions[functionName];\n        if (!func) {\n            func = Object.values(contract.interface.functions).find(f => f.name === functionName);\n        }\n        if (!func) {\n            throw new Error(`Unknown function ${functionName}`);\n        }\n        if (!func.outputs) {\n            throw new Error('Cannot staticcall function with no outputs');\n        }\n        const tx = await contract.populateTransaction[functionName](...params);\n        const data = tx.data;\n        let result;\n        const returnValue = await mockContractInstance.__waffle__staticcall(contract.address, data);\n        result = encoder.decode(func.outputs, returnValue);\n        if (result.length === 1) {\n            result = result[0];\n        }\n        return result;\n    };\n    mockedContract.call = async (contract, functionName, ...params) => {\n        const tx = await contract.populateTransaction[functionName](...params);\n        const data = tx.data;\n        return mockContractInstance.__waffle__call(contract.address, data);\n    };\n    return mockedContract;\n}\nexports.deployMockContract = deployMockContract;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}