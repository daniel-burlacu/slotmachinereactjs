{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BN = require(\"bn.js\");\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar evm_1 = require(\"../evm\");\n\nvar assert = require('assert');\n\nfunction default_1(opts) {\n  assert(opts.data);\n  var gasUsed = new BN(opts._common.param('gasPrices', 'ecRecover'));\n\n  if (opts.gasLimit.lt(gasUsed)) {\n    return evm_1.OOGResult(opts.gasLimit);\n  }\n\n  var data = ethereumjs_util_1.setLengthRight(opts.data, 128);\n  var msgHash = data.slice(0, 32);\n  var v = data.slice(32, 64);\n  var r = data.slice(64, 96);\n  var s = data.slice(96, 128);\n  var publicKey;\n\n  try {\n    publicKey = ethereumjs_util_1.ecrecover(msgHash, new BN(v).toNumber(), r, s);\n  } catch (e) {\n    return {\n      gasUsed: gasUsed,\n      returnValue: Buffer.alloc(0)\n    };\n  }\n\n  return {\n    gasUsed: gasUsed,\n    returnValue: ethereumjs_util_1.setLengthLeft(ethereumjs_util_1.publicToAddress(publicKey), 32)\n  };\n}\n\nexports.default = default_1;","map":{"version":3,"mappings":";;;;;;AAAA;;AACA;;AAEA;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,mBAAwBC,IAAxB,EAA6C;EAC3CF,MAAM,CAACE,IAAI,CAACC,IAAN,CAAN;EAEA,IAAMC,OAAO,GAAG,IAAIC,EAAJ,CAAOH,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAmB,WAAnB,EAAgC,WAAhC,CAAP,CAAhB;;EAEA,IAAIL,IAAI,CAACM,QAAL,CAAcC,EAAd,CAAiBL,OAAjB,CAAJ,EAA+B;IAC7B,OAAOM,gBAAUR,IAAI,CAACM,QAAf,CAAP;EACD;;EAED,IAAML,IAAI,GAAGQ,iCAAeT,IAAI,CAACC,IAApB,EAA0B,GAA1B,CAAb;EAEA,IAAIS,OAAO,GAAGT,IAAI,CAACU,KAAL,CAAW,CAAX,EAAc,EAAd,CAAd;EACA,IAAMC,CAAC,GAAGX,IAAI,CAACU,KAAL,CAAW,EAAX,EAAe,EAAf,CAAV;EACA,IAAME,CAAC,GAAGZ,IAAI,CAACU,KAAL,CAAW,EAAX,EAAe,EAAf,CAAV;EACA,IAAMG,CAAC,GAAGb,IAAI,CAACU,KAAL,CAAW,EAAX,EAAe,GAAf,CAAV;EAEA,IAAII,SAAJ;;EACA,IAAI;IACFA,SAAS,GAAGN,4BAAUC,OAAV,EAAmB,IAAIP,EAAJ,CAAOS,CAAP,EAAUI,QAAV,EAAnB,EAAyCH,CAAzC,EAA4CC,CAA5C,CAAZ;EACD,CAFD,CAEE,OAAOG,CAAP,EAAU;IACV,OAAO;MACLf,OAAO,SADF;MAELgB,WAAW,EAAEC,MAAM,CAACC,KAAP,CAAa,CAAb;IAFR,CAAP;EAID;;EAED,OAAO;IACLlB,OAAO,SADF;IAELgB,WAAW,EAAET,gCAAcA,kCAAgBM,SAAhB,CAAd,EAA0C,EAA1C;EAFR,CAAP;AAID;;AA9BDM","names":["assert","require","opts","data","gasUsed","BN","_common","param","gasLimit","lt","evm_1","ethereumjs_util_1","msgHash","slice","v","r","s","publicKey","toNumber","e","returnValue","Buffer","alloc","exports"],"sources":["../../../lib/evm/precompiles/01-ecrecover.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}