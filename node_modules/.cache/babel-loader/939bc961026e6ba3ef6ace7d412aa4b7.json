{"ast":null,"code":"const RuntimeError = require(\"../runtimeerror\");\n\nconst {\n  BN\n} = require(\"ethereumjs-util\");\n\nconst bn = function () {\n  let val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new BN(val);\n};\n\nconst STIPEND = bn(2300);\n\nconst check = set => opname => set.has(opname);\n\nconst isCall = check(new Set([\"CALL\", \"DELEGATECALL\", \"STATICCALL\", \"CALLCODE\"]));\nconst isCallOrCallcode = check(new Set([\"CALL\", \"CALLCODE\"]));\nconst isCreate = check(new Set([\"CREATE\", \"CREATE2\"]));\nconst isTerminator = check(new Set([\"STOP\", \"RETURN\", \"REVERT\", \"INVALID\", \"SELFDESTRUCT\"]));\n\nmodule.exports = async (vm, runArgs, callback) => {\n  const steps = stepTracker();\n  vm.on(\"step\", steps.collect);\n\n  const Context = (index, fee) => {\n    const base = index === 0;\n    let start = index;\n    let stop = 0;\n    const cost = bn();\n    let sixtyFloorths = bn();\n    const op = steps.ops[index];\n    const next = steps.ops[index + 1];\n    const intermediateCost = op.gasLeft.sub(next.gasLeft);\n    const callingFee = fee || bn();\n    let compositeContext = false;\n\n    function addGas(val) {\n      // Add to our current context, but accounted for in sixtyfloorths\n      if (sixtyFloorths.gtn(0)) {\n        if (val.gte(sixtyFloorths)) {\n          sixtyFloorths = bn();\n        } else {\n          sixtyFloorths.isub(val);\n        }\n      }\n\n      cost.iadd(val);\n    }\n\n    return {\n      start: () => start,\n      stop: () => stop,\n      setStart: val => {\n        start = val;\n        compositeContext = true;\n      },\n      setStop: val => {\n        stop = val;\n      },\n      getCost: () => ({\n        cost,\n        sixtyFloorths\n      }),\n      transfer: ctx => {\n        const values = ctx.getCost();\n        addGas(values.cost);\n        sixtyFloorths.iadd(values.sixtyFloorths);\n      },\n      addSixtyFloorth: sixtyFloorth => {\n        sixtyFloorths.iadd(sixtyFloorth);\n      },\n      addRange: function () {\n        let fee = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : bn();\n        // only occurs on stack increasing ops\n        addGas(steps.ops[base || compositeContext ? start : start + 1].gasLeft.sub(steps.ops[stop].gasLeft).add(fee));\n      },\n      finalizeRange: () => {\n        let range; // if we have a composite context and we are NOT at the final terminator\n\n        if (compositeContext && stop !== steps.ops.length - 1) {\n          range = steps.ops[start].gasLeft.sub(steps.ops[stop - 1].gasLeft);\n          addGas(range);\n          const tail = steps.ops[stop - 1].gasLeft.sub(steps.ops[stop].gasLeft);\n          range = tail.add(intermediateCost);\n        } else {\n          range = steps.ops[start].gasLeft.sub(steps.ops[stop].gasLeft);\n        }\n\n        range.isub(callingFee);\n        addGas(range);\n\n        if (isCallOrCallcode(op.opcode.name) && !op.stack[op.stack.length - 3].isZero()) {\n          cost.iadd(sixtyFloorths);\n          const innerCost = next.gasLeft.sub(steps.ops[stop - 1].gasLeft);\n\n          if (innerCost.gt(STIPEND)) {\n            sixtyFloorths = cost.divn(63);\n          } else if (innerCost.lte(STIPEND)) {\n            sixtyFloorths = STIPEND.sub(innerCost);\n          }\n        } else if (stop !== steps.ops.length - 1) {\n          cost.iadd(sixtyFloorths);\n          sixtyFloorths = cost.divn(63);\n        }\n      }\n    };\n  };\n\n  const getTotal = () => {\n    const sysops = steps.systemOps;\n    const ops = steps.ops;\n\n    const opIndex = cursor => sysops[cursor].index;\n\n    const stack = [];\n    let cursor = 0;\n    let context = Context(0);\n\n    while (cursor < sysops.length) {\n      const currentIndex = opIndex(cursor);\n      const current = ops[currentIndex];\n      const name = current.opcode.name;\n\n      if (isCall(name) || isCreate(name)) {\n        if (steps.isPrecompile(currentIndex)) {\n          context.setStop(currentIndex + 1);\n          context.addRange();\n          context.setStart(currentIndex + 1);\n          context.addSixtyFloorth(STIPEND);\n        } else {\n          context.setStop(currentIndex);\n          context.addRange(bn(current.opcode.fee));\n          stack.push(context);\n          context = Context(currentIndex, bn(current.opcode.fee)); // setup next context\n        }\n      } else if (isTerminator(name)) {\n        // only on the last operation\n        context.setStop(currentIndex + 1 < steps.ops.length ? currentIndex + 1 : currentIndex);\n        context.finalizeRange();\n        const ctx = stack.pop();\n\n        if (ctx) {\n          ctx.transfer(context);\n          context = ctx;\n          context.setStart(currentIndex + 1);\n        } else {\n          break;\n        }\n      } else {\n        throw new Error(\"INVALID OPCODE\");\n      }\n\n      cursor++;\n    }\n\n    const gas = context.getCost();\n    return gas.cost.add(gas.sixtyFloorths);\n  };\n\n  const result = await vm.runTx(runArgs).catch(vmerr => ({\n    vmerr\n  }));\n  const vmerr = result.vmerr;\n\n  if (vmerr) {\n    return callback(vmerr);\n  } else if (result.execResult.exceptionError) {\n    const vmerr = RuntimeError.fromResults([runArgs.tx], {\n      results: [result]\n    });\n    return callback(vmerr, result);\n  } else if (steps.done()) {\n    const estimate = result.gasUsed;\n    result.gasEstimate = estimate;\n  } else {\n    const actualUsed = steps.ops[0].gasLeft.sub(steps.ops[steps.ops.length - 1].gasLeft);\n    const sixtyFloorths = getTotal().sub(actualUsed);\n    result.gasEstimate = result.gasUsed.add(sixtyFloorths);\n  }\n\n  callback(vmerr, result);\n};\n\nconst stepTracker = () => {\n  const sysOps = [];\n  const allOps = [];\n  const preCompile = new Set();\n  let preCompileCheck = false;\n  let precompileCallDepth = 0;\n  return {\n    collect: info => {\n      if (preCompileCheck) {\n        if (info.depth === precompileCallDepth) {\n          // If the current depth is unchanged.\n          // we record its position.\n          preCompile.add(allOps.length - 1);\n        } // Reset the flag immediately here\n\n\n        preCompileCheck = false;\n      }\n\n      if (isCall(info.opcode.name)) {\n        info.stack = info.stack.map(val => val.clone());\n        preCompileCheck = true;\n        precompileCallDepth = info.depth;\n        sysOps.push({\n          index: allOps.length,\n          depth: info.depth,\n          name: info.opcode.name\n        });\n      } else if (isCreate(info.opcode.name) || isTerminator(info.opcode.name)) {\n        sysOps.push({\n          index: allOps.length,\n          depth: info.depth,\n          name: info.opcode.name\n        });\n      } // This goes last so we can use the length for the index ^\n\n\n      allOps.push(info);\n    },\n    isPrecompile: index => preCompile.has(index),\n    done: () => !allOps.length || sysOps.length < 2 || !isTerminator(allOps[allOps.length - 1].opcode.name),\n    ops: allOps,\n    systemOps: sysOps\n  };\n};","map":{"version":3,"names":["RuntimeError","require","BN","bn","val","STIPEND","check","set","opname","has","isCall","Set","isCallOrCallcode","isCreate","isTerminator","module","exports","vm","runArgs","callback","steps","stepTracker","on","collect","Context","index","fee","base","start","stop","cost","sixtyFloorths","op","ops","next","intermediateCost","gasLeft","sub","callingFee","compositeContext","addGas","gtn","gte","isub","iadd","setStart","setStop","getCost","transfer","ctx","values","addSixtyFloorth","sixtyFloorth","addRange","add","finalizeRange","range","length","tail","opcode","name","stack","isZero","innerCost","gt","divn","lte","getTotal","sysops","systemOps","opIndex","cursor","context","currentIndex","current","isPrecompile","push","pop","Error","gas","result","runTx","catch","vmerr","execResult","exceptionError","fromResults","tx","results","done","estimate","gasUsed","gasEstimate","actualUsed","sysOps","allOps","preCompile","preCompileCheck","precompileCallDepth","info","depth","map","clone"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/lib/utils/gas/guestimation.js"],"sourcesContent":["const RuntimeError = require(\"../runtimeerror\");\n\nconst { BN } = require(\"ethereumjs-util\");\nconst bn = (val = 0) => new BN(val);\nconst STIPEND = bn(2300);\n\nconst check = (set) => (opname) => set.has(opname);\nconst isCall = check(new Set([\"CALL\", \"DELEGATECALL\", \"STATICCALL\", \"CALLCODE\"]));\nconst isCallOrCallcode = check(new Set([\"CALL\", \"CALLCODE\"]));\nconst isCreate = check(new Set([\"CREATE\", \"CREATE2\"]));\nconst isTerminator = check(new Set([\"STOP\", \"RETURN\", \"REVERT\", \"INVALID\", \"SELFDESTRUCT\"]));\n\nmodule.exports = async(vm, runArgs, callback) => {\n  const steps = stepTracker();\n  vm.on(\"step\", steps.collect);\n\n  const Context = (index, fee) => {\n    const base = index === 0;\n    let start = index;\n    let stop = 0;\n    const cost = bn();\n    let sixtyFloorths = bn();\n    const op = steps.ops[index];\n    const next = steps.ops[index + 1];\n    const intermediateCost = op.gasLeft.sub(next.gasLeft);\n    const callingFee = fee || bn();\n    let compositeContext = false;\n\n    function addGas(val) {\n      // Add to our current context, but accounted for in sixtyfloorths\n      if (sixtyFloorths.gtn(0)) {\n        if (val.gte(sixtyFloorths)) {\n          sixtyFloorths = bn();\n        } else {\n          sixtyFloorths.isub(val);\n        }\n      }\n      cost.iadd(val);\n    }\n\n    return {\n      start: () => start,\n      stop: () => stop,\n      setStart: (val) => {\n        start = val;\n        compositeContext = true;\n      },\n      setStop: (val) => {\n        stop = val;\n      },\n      getCost: () => ({ cost, sixtyFloorths }),\n      transfer: (ctx) => {\n        const values = ctx.getCost();\n        addGas(values.cost);\n        sixtyFloorths.iadd(values.sixtyFloorths);\n      },\n      addSixtyFloorth: (sixtyFloorth) => {\n        sixtyFloorths.iadd(sixtyFloorth);\n      },\n      addRange: (fee = bn()) => {\n        // only occurs on stack increasing ops\n        addGas(steps.ops[base || compositeContext ? start : start + 1].gasLeft.sub(steps.ops[stop].gasLeft).add(fee));\n      },\n      finalizeRange: () => {\n        let range;\n        // if we have a composite context and we are NOT at the final terminator\n        if (compositeContext && stop !== steps.ops.length - 1) {\n          range = steps.ops[start].gasLeft.sub(steps.ops[stop - 1].gasLeft);\n          addGas(range);\n          const tail = steps.ops[stop - 1].gasLeft.sub(steps.ops[stop].gasLeft);\n          range = tail.add(intermediateCost);\n        } else {\n          range = steps.ops[start].gasLeft.sub(steps.ops[stop].gasLeft);\n        }\n        range.isub(callingFee);\n        addGas(range);\n        if (isCallOrCallcode(op.opcode.name) && !op.stack[op.stack.length - 3].isZero()) {\n          cost.iadd(sixtyFloorths);\n          const innerCost = next.gasLeft.sub(steps.ops[stop - 1].gasLeft);\n          if (innerCost.gt(STIPEND)) {\n            sixtyFloorths = cost.divn(63);\n          } else if (innerCost.lte(STIPEND)) {\n            sixtyFloorths = STIPEND.sub(innerCost);\n          }\n        } else if (stop !== steps.ops.length - 1) {\n          cost.iadd(sixtyFloorths);\n          sixtyFloorths = cost.divn(63);\n        }\n      }\n    };\n  };\n\n  const getTotal = () => {\n    const sysops = steps.systemOps;\n    const ops = steps.ops;\n    const opIndex = (cursor) => sysops[cursor].index;\n    const stack = [];\n    let cursor = 0;\n    let context = Context(0);\n    while (cursor < sysops.length) {\n      const currentIndex = opIndex(cursor);\n      const current = ops[currentIndex];\n      const name = current.opcode.name;\n      if (isCall(name) || isCreate(name)) {\n        if (steps.isPrecompile(currentIndex)) {\n          context.setStop(currentIndex + 1);\n          context.addRange();\n          context.setStart(currentIndex + 1);\n          context.addSixtyFloorth(STIPEND);\n        } else {\n          context.setStop(currentIndex);\n          context.addRange(bn(current.opcode.fee));\n          stack.push(context);\n          context = Context(currentIndex, bn(current.opcode.fee)); // setup next context\n        }\n      } else if (isTerminator(name)) {\n        // only on the last operation\n        context.setStop(currentIndex + 1 < steps.ops.length ? currentIndex + 1 : currentIndex);\n        context.finalizeRange();\n        const ctx = stack.pop();\n        if (ctx) {\n          ctx.transfer(context);\n          context = ctx;\n          context.setStart(currentIndex + 1);\n        } else {\n          break;\n        }\n      } else {\n        throw new Error(\"INVALID OPCODE\");\n      }\n      cursor++;\n    }\n    const gas = context.getCost();\n    return gas.cost.add(gas.sixtyFloorths);\n  };\n\n  const result = await vm.runTx(runArgs).catch((vmerr) => ({ vmerr }));\n  const vmerr = result.vmerr;\n  if (vmerr) {\n    return callback(vmerr);\n  } else if (result.execResult.exceptionError) {\n    const vmerr = RuntimeError.fromResults([runArgs.tx], { results: [result] });\n    return callback(vmerr, result);\n  } else if (steps.done()) {\n    const estimate = result.gasUsed;\n    result.gasEstimate = estimate;\n  } else {\n    const actualUsed = steps.ops[0].gasLeft.sub(steps.ops[steps.ops.length - 1].gasLeft);\n    const sixtyFloorths = getTotal().sub(actualUsed);\n    result.gasEstimate = result.gasUsed.add(sixtyFloorths);\n  }\n  callback(vmerr, result);\n};\n\nconst stepTracker = () => {\n  const sysOps = [];\n  const allOps = [];\n  const preCompile = new Set();\n  let preCompileCheck = false;\n  let precompileCallDepth = 0;\n  return {\n    collect: (info) => {\n      if (preCompileCheck) {\n        if (info.depth === precompileCallDepth) {\n          // If the current depth is unchanged.\n          // we record its position.\n          preCompile.add(allOps.length - 1);\n        }\n        // Reset the flag immediately here\n        preCompileCheck = false;\n      }\n      if (isCall(info.opcode.name)) {\n        info.stack = info.stack.map((val) => val.clone());\n        preCompileCheck = true;\n        precompileCallDepth = info.depth;\n        sysOps.push({ index: allOps.length, depth: info.depth, name: info.opcode.name });\n      } else if (isCreate(info.opcode.name) || isTerminator(info.opcode.name)) {\n        sysOps.push({ index: allOps.length, depth: info.depth, name: info.opcode.name });\n      }\n      // This goes last so we can use the length for the index ^\n      allOps.push(info);\n    },\n    isPrecompile: (index) => preCompile.has(index),\n    done: () => !allOps.length || sysOps.length < 2 || !isTerminator(allOps[allOps.length - 1].opcode.name),\n    ops: allOps,\n    systemOps: sysOps\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}