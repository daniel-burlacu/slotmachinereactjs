{"ast":null,"code":"import _slicedToArray from\"F:/Games/slotmachinereact/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import Constants from'../Constants';import bonusWin from'../assets/sounds/winningBonus.wav';import Withdrawal from'./Withdrawal';/*\r\nReceiving spinResults={props.resultsArray} \r\n          spinResultsIdx={props.resultsArrayIdx} \r\n          myBet={bet} \r\n          setCallbackScore={callbackScore} \r\n          game={props.game}\r\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var show=0;var CalculateScore=function CalculateScore(props){var _useState=useState(2),_useState2=_slicedToArray(_useState,2),score=_useState2[0],setScore=_useState2[1];/*Controling the calculation working score part !!!*********************/if(show!==props.game){var scoreRef=0;var bet=props.myBet;var finalScore=0;var results=[];var spinResults=props.spinResults;var spinResultsIdx=props.spinResultsIdx;//  let bet = 0;\nvar winningLines=[];var countWin=0;var symbolSellection=[];var randomNr=0;var symbols=Constants.REEL_SYMBOLS;// audioUrlBtn = require(\"../assets/sounds/buttonPress.wav\");\nvar audioBtn=new Audio(\"../assets/sounds/buttonPress.wav\");// audioUrlSpin = require(\"../assets/sounds/spinningSlotMachine.wav\");\nvar audioSpin=new Audio(\"../assets/sounds/spinningSlotMachine.wav\");var audioWinBonus=new Audio(bonusWin);var playWinBonus=function playWinBonus(){audioWinBonus.play();};var handleScore=function handleScore(e){//        setScore(Math.round((score + e) * 100) / 100);\nfinalScore=Math.round((score+e)*100)/100;};var setMyScore=function setMyScore(e){var scr=0;if(bet>0&&e>0){//  scr = e + bet * e;\nif(e<100){scr=bet*e*10;}else if(e>=100){scr=bet*e+e;}//  scr = Math.round(scr * 100) / 100;\n// scr=Math.round(scr);\n}else if(bet>0&&e===0){//  scr = e + bet * e;\nscr=bet*e*10;//  scr = Math.round(scr * 100) / 100;\n// scr=Math.round(scr);\n}else if(bet===0&&e>0){//  scr = Math.round((scr + e) * 100) / 100;\n// scr=Math.round(scr+e);\n}handleScore(scr);};var drawScore=function drawScore(lineNumberType,fool){var newScore=0;if(fool){lineNumberType=18;}switch(lineNumberType){case 0:// top line\nnewScore=0.5;break;case 1:// middle line\n//        audioWin.play();\nnewScore=0.5;break;case 2:// bottom line\n//        audioWin.play();\nnewScore=0.5;break;case 3:// V shape starting bottom left\n//        audioWin.play();\nnewScore=0.2;break;case 4:// V shape starting bottom right\n//        audioWin.play();\nnewScore=0.2;break;case 5:// W shape starting top left\n//        audioWin.play();\nnewScore=0.3;break;case 6:// M shape starting bottom left\n//        audioWin.play();\nnewScore=0.3;break;case 7:// M shape on top half\n//        audioWin.play();\nnewScore=0.3;break;case 8:// W shape on top half\n//        audioWin.play();\nnewScore=0.3;break;case 9://W shape on bottom half\n//        audioWin.play();\nnewScore=0.3;break;case 10:// M shape on bottom half\n//        audioWin.play();\nnewScore=0.3;break;case 11:// U shape on top half\n//        audioWin.play();\nnewScore=0.1;break;case 12:// inverse U shape on top half\n//        audioWin.play();\nnewScore=0.1;break;case 13:// U shape on bottom half\n//        audioWin.play();\nnewScore=0.1;break;case 14:// inverse U shape on bottom half\n//        audioWin.play();\nnewScore=0.1;break;case 15:// inverse U shape on top half\n//        audioWin.play();\nnewScore=0.1;break;case 16:// Z shape from top left\n//        audioWin.play();\nnewScore=0.4;break;case 17:// Z shape from bottom left\n//        audioWin.play();\nnewScore=0.4;break;case 18:// Z shape from bottom left\n//        audioWinBonus.play();\nplayWinBonus();newScore=100;break;default:newScore=0;}setMyScore(newScore);return;};var checkFiveFools=function checkFiveFools(){var fl=false;//this has been changed from Constants.LINES.length;\nfor(var i=0;i<Constants.LINES.length;i++){var fool=0;//this has been changed from Constants.LINES[i].length\nfor(var j=0;j<Constants.LINES[i].length;j++){var indexI=Constants.LINES[i][j][0];var indexJ=Constants.LINES[i][j][1];if(spinResults[indexI][indexJ]===\"D\"){fool++;}}if(fool===5){console.log(\"$$$$ WE HAVE 5 FOOLS !!!$$$$\");fl=true;winningLines.push(i);props.winningLinesCallBack(winningLines,fl);drawScore(i,true);//  highLightWinningLines(0);\nbreak;}}return fl;};var checkFourFools=function checkFourFools(){console.log(\"spinResults.length =\"+spinResults.length);for(var i=0;i<Constants.LINES.length;i++){var fool=0;for(var j=0;j<Constants.LINES[0].length;j++){var indexI=Constants.LINES[i][j][0];var indexJ=Constants.LINES[i][j][1];if(spinResults[indexI][indexJ]===\"D\"){fool++;}}if(fool===4){winningLines.push(i);drawScore(i,false);}}};var checkLinesElements=function checkLinesElements(symbol){countWin++;var symNr=0;var fool=0;for(var i=0;i<Constants.LINES.length;i++){fool=0;symNr=0;for(var j=0;j<Constants.LINES[i].length;j++){var indexI=Constants.LINES[i][j][0];var indexJ=Constants.LINES[i][j][1];if(spinResults[indexI][indexJ]===\"D\"){fool++;}if(symbol===spinResults[indexI][indexJ]){symNr++;}}if(fool+symNr===5&&fool<4){winningLines.push(i);}}winningLines=uniq(winningLines);};var uniq=function uniq(a){return a.sort().filter(function(item,pos,ary){return!pos||item!==ary[pos-1];});};var checkElements=function checkElements(){var fool=0;for(var k=0;k<3;k++){fool=0;for(var i=0;i<spinResults.length;i++){var symb=\"\";for(var j=k;j<spinResults[i].length;j++){if(spinResults[i][j]!==\"D\"){symb=spinResults[i][j];j=spinResults[i].length;}else{fool++;j=spinResults[i].length;}}if(fool<4&&symb!==\"\"){symbolSellection.push(symb);}}}for(var _i=0;_i<symbolSellection.length;_i++){checkLinesElements(symbolSellection[_i]);}};var setBetZero=function setBetZero(){bet=0;};var evaluatespinResults=function evaluatespinResults(){checkFourFools();checkElements();if(winningLines.length>0){props.winningLinesCallBack(winningLines,false);for(var i=0;i<winningLines.length;i++){drawScore(winningLines[i],false);}}else{if(score-bet>=0.2){props.looserCallBack();finalScore=Math.round((score-bet)*100)/100;//            setScore(Math.round((score - bet) * 100) / 100);\nfinalScore=Math.round((score-bet)*100)/100;if(score<bet){setBetZero();}}else if(score-bet===0){finalScore=score-bet;setBetZero();//            setScore(0);\nfinalScore=0;//CREATE A GAME OVER SET FROM HERE    \nprops.looserCallBack();}}};var checkWin=function checkWin(){if(props.game>0){var fool=checkFiveFools();if(!fool){evaluatespinResults();}}};/**Testing part  */setTimeout(function(){//    setScore(scr);\ncheckWin();setScore(finalScore);props.setCallbackScore(finalScore);show=props.game;},7500);/**END of testing part */ /******************************************/}var callbackSetMyScr=function callbackSetMyScr(myScr){if(myScr===0){setScore(myScr);props.setCallbackScore(myScr);//   btnDisable=true;\n}else if(myScr>0){setScore(myScr);props.setCallbackScore(myScr);}//score=myScr;\n};var callBackGetScore=function callBackGetScore(){return score;};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Withdrawal,{blockWithdraw:props.blockWithdrawal,getScoreCallback:callBackGetScore,setScoreCallBack:callbackSetMyScr}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Score:\",/*#__PURE__*/_jsx(\"span\",{id:\"score\",children:score})]})]});};export default CalculateScore;","map":{"version":3,"names":["React","useEffect","useState","Constants","bonusWin","Withdrawal","show","CalculateScore","props","score","setScore","game","scoreRef","bet","myBet","finalScore","results","spinResults","spinResultsIdx","winningLines","countWin","symbolSellection","randomNr","symbols","REEL_SYMBOLS","audioBtn","Audio","audioSpin","audioWinBonus","playWinBonus","play","handleScore","e","Math","round","setMyScore","scr","drawScore","lineNumberType","fool","newScore","checkFiveFools","fl","i","LINES","length","j","indexI","indexJ","console","log","push","winningLinesCallBack","checkFourFools","checkLinesElements","symbol","symNr","uniq","a","sort","filter","item","pos","ary","checkElements","k","symb","setBetZero","evaluatespinResults","looserCallBack","checkWin","setTimeout","setCallbackScore","callbackSetMyScr","myScr","callBackGetScore","blockWithdrawal"],"sources":["F:/Games/slotmachinereact/src/components/CalculateScore.js"],"sourcesContent":["import React,{useEffect, useState} from 'react';\r\nimport Constants from '../Constants';\r\nimport bonusWin from '../assets/sounds/winningBonus.wav'\r\nimport Withdrawal from './Withdrawal'; \r\n\r\n/*\r\nReceiving spinResults={props.resultsArray} \r\n          spinResultsIdx={props.resultsArrayIdx} \r\n          myBet={bet} \r\n          setCallbackScore={callbackScore} \r\n          game={props.game}\r\n*/\r\n\r\nlet show = 0;\r\n\r\nconst CalculateScore = (props) => {\r\n    const [score, setScore] = useState(2);\r\n\r\n /*Controling the calculation working score part !!!*********************/\r\n if(show!==props.game){\r\n\r\n    let scoreRef = 0;\r\n    let bet =props.myBet;\r\n    let finalScore=0;\r\n    \r\n    let results = [];\r\n\r\n    let spinResults = props.spinResults;\r\n    let spinResultsIdx = props.spinResultsIdx;\r\n\r\n  //  let bet = 0;\r\n    let winningLines = [];\r\n    let countWin = 0;\r\n    let symbolSellection = [];\r\n    let randomNr = 0;\r\n    const symbols = Constants.REEL_SYMBOLS;\r\n\r\n\r\n  \r\n   // audioUrlBtn = require(\"../assets/sounds/buttonPress.wav\");\r\n    const audioBtn = new Audio(\"../assets/sounds/buttonPress.wav\");\r\n  \r\n   // audioUrlSpin = require(\"../assets/sounds/spinningSlotMachine.wav\");\r\n    const audioSpin = new Audio(\"../assets/sounds/spinningSlotMachine.wav\");\r\n\r\n    const audioWinBonus = new Audio(bonusWin);\r\n\r\n    const playWinBonus = () =>{\r\n          audioWinBonus.play();\r\n    }\r\n\r\n    const handleScore = (e) => {\r\n//        setScore(Math.round((score + e) * 100) / 100);\r\n        finalScore=(Math.round((score + e) * 100) / 100);\r\n      };\r\n\r\n    const setMyScore = (e) => {\r\n        let scr = 0;\r\n    \r\n        if (bet > 0 && e > 0) {\r\n\r\n        //  scr = e + bet * e;\r\n        if(e<100){\r\n          scr=(bet*e)*10;\r\n        }else if(e>=100){\r\n            scr=(bet*e)+e;\r\n        }\r\n        //  scr = Math.round(scr * 100) / 100;\r\n        // scr=Math.round(scr);\r\n        } else if (bet > 0 && e === 0) {\r\n        //  scr = e + bet * e;\r\n          scr=(bet*e)*10\r\n        //  scr = Math.round(scr * 100) / 100;\r\n        // scr=Math.round(scr);\r\n        } else if (bet === 0 && e > 0) {\r\n        //  scr = Math.round((scr + e) * 100) / 100;\r\n       // scr=Math.round(scr+e);\r\n        }\r\n        handleScore(scr);\r\n      };\r\n\r\n    const drawScore = (lineNumberType, fool) => {\r\n        let newScore = 0;\r\n        if (fool) {\r\n          lineNumberType = 18;\r\n        }\r\n        switch (lineNumberType) {\r\n          case 0: // top line\r\n            newScore = 0.5;\r\n            break;\r\n          case 1: // middle line\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.5;\r\n            break;\r\n          case 2: // bottom line\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.5;\r\n            break;\r\n          case 3: // V shape starting bottom left\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.2;\r\n            break;\r\n          case 4: // V shape starting bottom right\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.2;\r\n            break;\r\n          case 5: // W shape starting top left\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.3;\r\n            break;\r\n          case 6: // M shape starting bottom left\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.3;\r\n            break;\r\n          case 7: // M shape on top half\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.3;\r\n            break;\r\n          case 8: // W shape on top half\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.3;\r\n            break;\r\n          case 9: //W shape on bottom half\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.3;\r\n            break;\r\n          case 10: // M shape on bottom half\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.3;\r\n            break;\r\n          case 11: // U shape on top half\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.1;\r\n            break;\r\n          case 12: // inverse U shape on top half\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.1;\r\n            break;\r\n          case 13: // U shape on bottom half\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.1;\r\n            break;\r\n          case 14: // inverse U shape on bottom half\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.1;\r\n            break;\r\n          case 15: // inverse U shape on top half\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.1;\r\n            break;\r\n          case 16: // Z shape from top left\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.4;\r\n            break;\r\n          case 17: // Z shape from bottom left\r\n            //        audioWin.play();\r\n            \r\n            newScore = 0.4;\r\n            break;\r\n          case 18: // Z shape from bottom left\r\n            //        audioWinBonus.play();\r\n            playWinBonus();\r\n            newScore = 100;\r\n            break;\r\n          default:\r\n            newScore = 0;\r\n        }\r\n    \r\n        setMyScore(newScore);\r\n        \r\n        return;\r\n      };\r\n\r\n      const checkFiveFools = () => {\r\n        let fl = false;\r\n       //this has been changed from Constants.LINES.length;\r\n        for (let i = 0; i < Constants.LINES.length; i++) {\r\n          let fool = 0;\r\n          //this has been changed from Constants.LINES[i].length\r\n          for (let j = 0; j < Constants.LINES[i].length; j++) {\r\n            let indexI = Constants.LINES[i][j][0];\r\n            let indexJ = Constants.LINES[i][j][1];\r\n            if (spinResults[indexI][indexJ] === \"D\") {\r\n              fool++;\r\n            }\r\n          }\r\n     \r\n          if (fool === 5) {\r\n            console.log(\"$$$$ WE HAVE 5 FOOLS !!!$$$$\");\r\n            fl = true;\r\n            winningLines.push(i);\r\n            props.winningLinesCallBack(winningLines, fl);\r\n            drawScore(i, true);\r\n            //  highLightWinningLines(0);\r\n            break;\r\n          }\r\n        }\r\n        return fl;\r\n      }\r\n\r\n      const checkFourFools = () => {\r\n        console.log(\"spinResults.length =\"+spinResults.length);\r\n        for (let i = 0; i < Constants.LINES.length; i++) {\r\n          let fool = 0;\r\n          for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n            let indexI = Constants.LINES[i][j][0];\r\n            let indexJ = Constants.LINES[i][j][1];\r\n       \r\n            if (spinResults[indexI][indexJ] === \"D\") {\r\n              fool++;\r\n            }\r\n          }\r\n       \r\n          if (fool === 4) {\r\n            winningLines.push(i);\r\n            drawScore(i, false);\r\n          }\r\n        }\r\n      };\r\n\r\n      const checkLinesElements = (symbol) => {\r\n        countWin++;\r\n        let symNr = 0;\r\n        let fool = 0;\r\n        for (let i = 0; i < Constants.LINES.length; i++) {\r\n          fool = 0;\r\n          symNr = 0;\r\n          for (let j = 0; j < Constants.LINES[i].length; j++) {\r\n            let indexI = Constants.LINES[i][j][0];\r\n            let indexJ = Constants.LINES[i][j][1];\r\n    \r\n            if (spinResults[indexI][indexJ] === \"D\") {\r\n              fool++;\r\n            }\r\n            if (symbol === spinResults[indexI][indexJ]) {\r\n              symNr++;\r\n            }\r\n          }\r\n          if (fool + symNr === 5 && fool < 4) {\r\n            winningLines.push(i);\r\n          }\r\n        }\r\n        winningLines = uniq(winningLines);\r\n      };\r\n    \r\n      const uniq = (a) => {\r\n        return a.sort().filter(function (item, pos, ary) {\r\n          return !pos || item !== ary[pos - 1];\r\n        });\r\n      };\r\n\r\n      const checkElements = () => {\r\n        let fool = 0;\r\n        for (let k = 0; k < 3; k++) {\r\n          fool = 0;\r\n          for (let i = 0; i < spinResults.length; i++) {\r\n            let symb = \"\";\r\n            for (let j = k; j < spinResults[i].length; j++) {\r\n              if (spinResults[i][j] !== \"D\") {\r\n                symb = spinResults[i][j];\r\n                j = spinResults[i].length;\r\n              } else {\r\n                fool++;\r\n                j = spinResults[i].length;\r\n              }\r\n            }\r\n            if (fool < 4 && symb !== \"\") {\r\n              symbolSellection.push(symb);\r\n            }\r\n          }\r\n        }\r\n        for (let i = 0; i < symbolSellection.length; i++) {\r\n          checkLinesElements(symbolSellection[i]);\r\n        }\r\n      };\r\n    \r\n      const setBetZero = () => {\r\n        bet = 0;\r\n      };\r\n\r\n      const evaluatespinResults = () => {\r\n        checkFourFools();\r\n        checkElements();\r\n        if (winningLines.length > 0) {\r\n         props.winningLinesCallBack(winningLines, false);\r\n          for (let i = 0; i < winningLines.length; i++) {\r\n            drawScore(winningLines[i], false);\r\n          }\r\n        } else {\r\n          if (score - bet >= 0.2) {\r\n          props.looserCallBack();\r\n            finalScore=Math.round((score - bet) * 100) / 100;\r\n//            setScore(Math.round((score - bet) * 100) / 100);\r\n            finalScore=(Math.round((score - bet) * 100) / 100);\r\n            if (score < bet) {\r\n              setBetZero();\r\n            }\r\n          } else if (score - bet === 0) {\r\n            finalScore=score-bet;\r\n            setBetZero();\r\n//            setScore(0);\r\n            finalScore=0;\r\n        //CREATE A GAME OVER SET FROM HERE    \r\n            props.looserCallBack();\r\n          }\r\n        }\r\n      };\r\n\r\n      const checkWin = () => {\r\n        if (props.game > 0) {\r\n          let fool = checkFiveFools();\r\n          if (!fool) {\r\n            evaluatespinResults();\r\n          }\r\n        }\r\n    \r\n      };\r\n\r\n\r\n/**Testing part  */  \r\n  \r\nsetTimeout(()=>{\r\n    //    setScore(scr);\r\n    checkWin();\r\n    setScore(finalScore);\r\n    props.setCallbackScore(finalScore);\r\n    show=props.game;\r\n},7500)\r\n/**END of testing part */  \r\n\r\n/******************************************/  \r\n    }\r\n    const callbackSetMyScr = (myScr) => {\r\n      if(myScr===0){\r\n          setScore(myScr);\r\n\r\n        props.setCallbackScore(myScr);\r\n   //   btnDisable=true;\r\n    }else if(myScr>0){\r\n        setScore(myScr);\r\n        props.setCallbackScore(myScr);\r\n    }\r\n      //score=myScr;\r\n    }\r\n\r\n    const callBackGetScore = () => {\r\n      return score;\r\n    }\r\n \r\n    return (    \r\n      <> \r\n      <Withdrawal blockWithdraw={props.blockWithdrawal} getScoreCallback={callBackGetScore} setScoreCallBack={callbackSetMyScr}/>\r\n      <label>\r\n        Score:<span id=\"score\">{score}</span>\r\n      </label>\r\n    </>  \r\n    )\r\n}\r\n\r\n\r\nexport default CalculateScore;"],"mappings":"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"},"metadata":{},"sourceType":"module"}