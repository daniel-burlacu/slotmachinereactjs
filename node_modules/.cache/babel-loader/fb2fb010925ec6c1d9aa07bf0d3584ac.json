{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst schema_1 = require(\"../schema\");\n\nclass ArraySchema extends schema_1.Schema {\n  constructor(_a) {\n    var {\n      valueSchema,\n      name = valueSchema.name\n    } = _a,\n        handlers = tslib_1.__rest(_a, [\"valueSchema\", \"name\"]);\n\n    super(Object.assign({}, handlers, {\n      name\n    }));\n    this._valueSchema = valueSchema;\n  }\n\n  expected(utils) {\n    return `an array of ${this._valueSchema.expected(utils)}`;\n  }\n\n  validate(value, utils) {\n    if (!Array.isArray(value)) {\n      return false;\n    }\n\n    const invalidValues = [];\n\n    for (const subValue of value) {\n      const subValidateResult = utils.normalizeValidateResult(this._valueSchema.validate(subValue, utils), subValue);\n\n      if (subValidateResult !== true) {\n        invalidValues.push(subValidateResult.value);\n      }\n    }\n\n    return invalidValues.length === 0 ? true : {\n      value: invalidValues\n    };\n  }\n\n  deprecated(value, utils) {\n    const deprecatedResult = [];\n\n    for (const subValue of value) {\n      const subDeprecatedResult = utils.normalizeDeprecatedResult(this._valueSchema.deprecated(subValue, utils), subValue);\n\n      if (subDeprecatedResult !== false) {\n        deprecatedResult.push(...subDeprecatedResult.map(_ref => {\n          let {\n            value: deprecatedValue\n          } = _ref;\n          return {\n            value: [deprecatedValue]\n          };\n        }));\n      }\n    }\n\n    return deprecatedResult;\n  }\n\n  forward(value, utils) {\n    const forwardResult = [];\n\n    for (const subValue of value) {\n      const subForwardResult = utils.normalizeForwardResult(this._valueSchema.forward(subValue, utils), subValue);\n      forwardResult.push(...subForwardResult.map(wrapTransferResult));\n    }\n\n    return forwardResult;\n  }\n\n  redirect(value, utils) {\n    const remain = [];\n    const redirect = [];\n\n    for (const subValue of value) {\n      const subRedirectResult = utils.normalizeRedirectResult(this._valueSchema.redirect(subValue, utils), subValue);\n\n      if ('remain' in subRedirectResult) {\n        remain.push(subRedirectResult.remain);\n      }\n\n      redirect.push(...subRedirectResult.redirect.map(wrapTransferResult));\n    }\n\n    return remain.length === 0 ? {\n      redirect\n    } : {\n      redirect,\n      remain\n    };\n  }\n\n  overlap(currentValue, newValue) {\n    return currentValue.concat(newValue);\n  }\n\n}\n\nexports.ArraySchema = ArraySchema;\n\nfunction wrapTransferResult(_ref2) {\n  let {\n    from,\n    to\n  } = _ref2;\n  return {\n    from: [from],\n    to\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","tslib_1","require","schema_1","ArraySchema","Schema","constructor","_a","valueSchema","name","handlers","__rest","assign","_valueSchema","expected","utils","validate","Array","isArray","invalidValues","subValue","subValidateResult","normalizeValidateResult","push","length","deprecated","deprecatedResult","subDeprecatedResult","normalizeDeprecatedResult","map","deprecatedValue","forward","forwardResult","subForwardResult","normalizeForwardResult","wrapTransferResult","redirect","remain","subRedirectResult","normalizeRedirectResult","overlap","currentValue","newValue","concat","from","to"],"sources":["F:/Games/slotmachinereact/node_modules/vnopts/lib/schemas/array.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst schema_1 = require(\"../schema\");\nclass ArraySchema extends schema_1.Schema {\n    constructor(_a) {\n        var { valueSchema, name = valueSchema.name } = _a, handlers = tslib_1.__rest(_a, [\"valueSchema\", \"name\"]);\n        super(Object.assign({}, handlers, { name }));\n        this._valueSchema = valueSchema;\n    }\n    expected(utils) {\n        return `an array of ${this._valueSchema.expected(utils)}`;\n    }\n    validate(value, utils) {\n        if (!Array.isArray(value)) {\n            return false;\n        }\n        const invalidValues = [];\n        for (const subValue of value) {\n            const subValidateResult = utils.normalizeValidateResult(this._valueSchema.validate(subValue, utils), subValue);\n            if (subValidateResult !== true) {\n                invalidValues.push(subValidateResult.value);\n            }\n        }\n        return invalidValues.length === 0 ? true : { value: invalidValues };\n    }\n    deprecated(value, utils) {\n        const deprecatedResult = [];\n        for (const subValue of value) {\n            const subDeprecatedResult = utils.normalizeDeprecatedResult(this._valueSchema.deprecated(subValue, utils), subValue);\n            if (subDeprecatedResult !== false) {\n                deprecatedResult.push(...subDeprecatedResult.map(({ value: deprecatedValue }) => ({\n                    value: [deprecatedValue],\n                })));\n            }\n        }\n        return deprecatedResult;\n    }\n    forward(value, utils) {\n        const forwardResult = [];\n        for (const subValue of value) {\n            const subForwardResult = utils.normalizeForwardResult(this._valueSchema.forward(subValue, utils), subValue);\n            forwardResult.push(...subForwardResult.map(wrapTransferResult));\n        }\n        return forwardResult;\n    }\n    redirect(value, utils) {\n        const remain = [];\n        const redirect = [];\n        for (const subValue of value) {\n            const subRedirectResult = utils.normalizeRedirectResult(this._valueSchema.redirect(subValue, utils), subValue);\n            if ('remain' in subRedirectResult) {\n                remain.push(subRedirectResult.remain);\n            }\n            redirect.push(...subRedirectResult.redirect.map(wrapTransferResult));\n        }\n        return remain.length === 0 ? { redirect } : { redirect, remain };\n    }\n    overlap(currentValue, newValue) {\n        return currentValue.concat(newValue);\n    }\n}\nexports.ArraySchema = ArraySchema;\nfunction wrapTransferResult({ from, to }) {\n    return { from: [from], to };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}