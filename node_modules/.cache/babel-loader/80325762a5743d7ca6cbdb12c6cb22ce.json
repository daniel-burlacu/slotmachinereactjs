{"ast":null,"code":"var SourceMapConsumer = require('source-map').SourceMapConsumer;\n\nvar path = require('path');\n\nvar fs;\n\ntry {\n  fs = require('fs');\n\n  if (!fs.existsSync || !fs.readFileSync) {\n    // fs doesn't have all methods we need\n    fs = null;\n  }\n} catch (err) {\n  /* nop */\n}\n\nvar bufferFrom = require('buffer-from'); // Only install once if called multiple times\n\n\nvar errorFormatterInstalled = false;\nvar uncaughtShimInstalled = false; // If true, the caches are reset before a stack trace formatting operation\n\nvar emptyCacheBetweenOperations = false; // Supports {browser, node, auto}\n\nvar environment = \"auto\"; // Maps a file path to a string containing the file contents\n\nvar fileContentsCache = {}; // Maps a file path to a source map for that file\n\nvar sourceMapCache = {}; // Regex for detecting source maps\n\nvar reSourceMap = /^data:application\\/json[^,]+base64,/; // Priority list of retrieve handlers\n\nvar retrieveFileHandlers = [];\nvar retrieveMapHandlers = [];\n\nfunction isInBrowser() {\n  if (environment === \"browser\") return true;\n  if (environment === \"node\") return false;\n  return typeof window !== 'undefined' && typeof XMLHttpRequest === 'function' && !(window.require && window.module && window.process && window.process.type === \"renderer\");\n}\n\nfunction hasGlobalProcessEventEmitter() {\n  return typeof process === 'object' && process !== null && typeof process.on === 'function';\n}\n\nfunction handlerExec(list) {\n  return function (arg) {\n    for (var i = 0; i < list.length; i++) {\n      var ret = list[i](arg);\n\n      if (ret) {\n        return ret;\n      }\n    }\n\n    return null;\n  };\n}\n\nvar retrieveFile = handlerExec(retrieveFileHandlers);\nretrieveFileHandlers.push(function (path) {\n  // Trim the path to make sure there is no extra whitespace.\n  path = path.trim();\n\n  if (/^file:/.test(path)) {\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function (protocol, drive) {\n      return drive ? '' : // file:///C:/dir/file -> C:/dir/file\n      '/'; // file:///root-dir/file -> /root-dir/file\n    });\n  }\n\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n\n  var contents = '';\n\n  try {\n    if (!fs) {\n      // Use SJAX if we are in the browser\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path,\n      /** async */\n      false);\n      xhr.send(null);\n\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        contents = xhr.responseText;\n      }\n    } else if (fs.existsSync(path)) {\n      // Otherwise, use the filesystem\n      contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (er) {\n    /* ignore any errors */\n  }\n\n  return fileContentsCache[path] = contents;\n}); // Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\n\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  var startPath = dir.slice(protocol.length);\n\n  if (protocol && /^\\/\\w\\:/.test(startPath)) {\n    // handle file:///C:/ paths\n    protocol += '/';\n    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\\\/g, '/');\n  }\n\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  if (isInBrowser()) {\n    try {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', source, false);\n      xhr.send(null);\n      fileData = xhr.readyState === 4 ? xhr.responseText : null; // Support providing a sourceMappingURL via the SourceMap header\n\n      var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") || xhr.getResponseHeader(\"X-SourceMap\");\n\n      if (sourceMapHeader) {\n        return sourceMapHeader;\n      }\n    } catch (e) {}\n  } // Get the URL of the source map\n\n\n  fileData = retrieveFile(source);\n  var re = /(?:\\/\\/[@#][ \\t]+sourceMappingURL=([^\\s'\"]+?)[ \\t]*$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^\\*]+?)[ \\t]*(?:\\*\\/)[ \\t]*$)/mg; // Keep executing the search to find the *last* sourceMappingURL to avoid\n  // picking up sourceMappingURLs from comments, strings, etc.\n\n  var lastMatch, match;\n\n  while (match = re.exec(fileData)) lastMatch = match;\n\n  if (!lastMatch) return null;\n  return lastMatch[1];\n}\n\n; // Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\n\nvar retrieveSourceMap = handlerExec(retrieveMapHandlers);\nretrieveMapHandlers.push(function (source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null; // Read the contents of the source map\n\n  var sourceMapData;\n\n  if (reSourceMap.test(sourceMappingURL)) {\n    // Support source map URL as a data url\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\n    sourceMapData = bufferFrom(rawData, \"base64\").toString();\n    sourceMappingURL = source;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL);\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n});\n\nfunction mapSourcePosition(position) {\n  var sourceMap = sourceMapCache[position.source];\n\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      }; // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function (source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n    }\n  } // Resolve the source URL relative to the URL of the source map\n\n\n  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {\n    var originalPosition = sourceMap.map.originalPositionFor(position); // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n\n    if (originalPosition.source !== null) {\n      originalPosition.source = supportRelativeURL(sourceMap.url, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n} // Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\n\n\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: +match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' + position.line + ':' + (position.column + 1) + ')';\n  } // Parse nested eval() calls using recursion\n\n\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  } // Make sure we still return useful information if we didn't find anything\n\n\n  return origin;\n} // This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\n// implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\n\n\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \"; // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n\n    var lineNumber = this.getLineNumber();\n\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n\n  var line = \"\";\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n\n  if (isMethodCall) {\n    var typeName = this.getTypeName(); // Fixes shim to be backward compatable with Node v0 to v4\n\n    if (typeName === \"[object Object]\") {\n      typeName = \"null\";\n    }\n\n    var methodName = this.getMethodName();\n\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n\n      line += functionName;\n\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n\n  return line;\n}\n\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function (name) {\n    object[name] = /^(?:is|get)/.test(name) ? function () {\n      return frame[name].call(frame);\n    } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\n\nfunction wrapCallSite(frame) {\n  if (frame.isNative()) {\n    return frame;\n  } // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n\n\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n\n  if (source) {\n    var line = frame.getLineNumber();\n    var column = frame.getColumnNumber() - 1; // Fix position in Node where some (internal) code is prepended.\n    // See https://github.com/evanw/node-source-map-support/issues/36\n\n    var headerLength = 62;\n\n    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {\n      column -= headerLength;\n    }\n\n    var position = mapSourcePosition({\n      source: source,\n      line: line,\n      column: column\n    });\n    frame = cloneCallSite(frame);\n    var originalFunctionName = frame.getFunctionName;\n\n    frame.getFunctionName = function () {\n      return position.name || originalFunctionName();\n    };\n\n    frame.getFileName = function () {\n      return position.source;\n    };\n\n    frame.getLineNumber = function () {\n      return position.line;\n    };\n\n    frame.getColumnNumber = function () {\n      return position.column + 1;\n    };\n\n    frame.getScriptNameOrSourceURL = function () {\n      return position.source;\n    };\n\n    return frame;\n  } // Code called using eval() needs special handling\n\n\n  var origin = frame.isEval() && frame.getEvalOrigin();\n\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n\n    frame.getEvalOrigin = function () {\n      return origin;\n    };\n\n    return frame;\n  } // If we get here then we were unable to change the source position\n\n\n  return frame;\n} // This function is part of the V8 stack trace API, for more info see:\n// https://v8.dev/docs/stack-trace-api\n\n\nfunction prepareStackTrace(error, stack) {\n  if (emptyCacheBetweenOperations) {\n    fileContentsCache = {};\n    sourceMapCache = {};\n  }\n\n  var name = error.name || 'Error';\n  var message = error.message || '';\n  var errorString = name + \": \" + message;\n  return errorString + stack.map(function (frame) {\n    return '\\n    at ' + wrapCallSite(frame);\n  }).join('');\n} // Generate position and snippet of original source with pointer\n\n\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3]; // Support the inline sourceContents inside the source map\n\n    var contents = fileContentsCache[source]; // Support files on disk\n\n    if (!contents && fs && fs.existsSync(source)) {\n      try {\n        contents = fs.readFileSync(source, 'utf8');\n      } catch (er) {\n        contents = '';\n      }\n    } // Format the line from the original source code like node does\n\n\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n\n      if (code) {\n        return source + ':' + line + '\\n' + code + '\\n' + new Array(column).join(' ') + '^';\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction printErrorAndExit(error) {\n  var source = getErrorSource(error); // Ensure error is printed synchronously and not truncated\n\n  if (process.stderr._handle && process.stderr._handle.setBlocking) {\n    process.stderr._handle.setBlocking(true);\n  }\n\n  if (source) {\n    console.error();\n    console.error(source);\n  }\n\n  console.error(error.stack);\n  process.exit(1);\n}\n\nfunction shimEmitUncaughtException() {\n  var origEmit = process.emit;\n\n  process.emit = function (type) {\n    if (type === 'uncaughtException') {\n      var hasStack = arguments[1] && arguments[1].stack;\n      var hasListeners = this.listeners(type).length > 0;\n\n      if (hasStack && !hasListeners) {\n        return printErrorAndExit(arguments[1]);\n      }\n    }\n\n    return origEmit.apply(this, arguments);\n  };\n}\n\nvar originalRetrieveFileHandlers = retrieveFileHandlers.slice(0);\nvar originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\n\nexports.install = function (options) {\n  options = options || {};\n\n  if (options.environment) {\n    environment = options.environment;\n\n    if ([\"node\", \"browser\", \"auto\"].indexOf(environment) === -1) {\n      throw new Error(\"environment \" + environment + \" was unknown. Available options are {auto, browser, node}\");\n    }\n  } // Allow sources to be found by methods other than reading the files\n  // directly from disk.\n\n\n  if (options.retrieveFile) {\n    if (options.overrideRetrieveFile) {\n      retrieveFileHandlers.length = 0;\n    }\n\n    retrieveFileHandlers.unshift(options.retrieveFile);\n  } // Allow source maps to be found by methods other than reading the files\n  // directly from disk.\n\n\n  if (options.retrieveSourceMap) {\n    if (options.overrideRetrieveSourceMap) {\n      retrieveMapHandlers.length = 0;\n    }\n\n    retrieveMapHandlers.unshift(options.retrieveSourceMap);\n  } // Support runtime transpilers that include inline source maps\n\n\n  if (options.hookRequire && !isInBrowser()) {\n    var Module;\n\n    try {\n      Module = require('module');\n    } catch (err) {// NOP: Loading in catch block to convert webpack error to warning.\n    }\n\n    var $compile = Module.prototype._compile;\n\n    if (!$compile.__sourceMapSupport) {\n      Module.prototype._compile = function (content, filename) {\n        fileContentsCache[filename] = content;\n        sourceMapCache[filename] = undefined;\n        return $compile.call(this, content, filename);\n      };\n\n      Module.prototype._compile.__sourceMapSupport = true;\n    }\n  } // Configure options\n\n\n  if (!emptyCacheBetweenOperations) {\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ? options.emptyCacheBetweenOperations : false;\n  } // Install the error reformatter\n\n\n  if (!errorFormatterInstalled) {\n    errorFormatterInstalled = true;\n    Error.prepareStackTrace = prepareStackTrace;\n  }\n\n  if (!uncaughtShimInstalled) {\n    var installHandler = 'handleUncaughtExceptions' in options ? options.handleUncaughtExceptions : true; // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n\n    if (installHandler && hasGlobalProcessEventEmitter()) {\n      uncaughtShimInstalled = true;\n      shimEmitUncaughtException();\n    }\n  }\n};\n\nexports.resetRetrieveHandlers = function () {\n  retrieveFileHandlers.length = 0;\n  retrieveMapHandlers.length = 0;\n  retrieveFileHandlers = originalRetrieveFileHandlers.slice(0);\n  retrieveMapHandlers = originalRetrieveMapHandlers.slice(0);\n  retrieveSourceMap = handlerExec(retrieveMapHandlers);\n  retrieveFile = handlerExec(retrieveFileHandlers);\n};","map":{"version":3,"names":["SourceMapConsumer","require","path","fs","existsSync","readFileSync","err","bufferFrom","errorFormatterInstalled","uncaughtShimInstalled","emptyCacheBetweenOperations","environment","fileContentsCache","sourceMapCache","reSourceMap","retrieveFileHandlers","retrieveMapHandlers","isInBrowser","window","XMLHttpRequest","module","process","type","hasGlobalProcessEventEmitter","on","handlerExec","list","arg","i","length","ret","retrieveFile","push","trim","test","replace","protocol","drive","contents","xhr","open","send","readyState","status","responseText","er","supportRelativeURL","file","url","dir","dirname","match","exec","startPath","slice","resolve","retrieveSourceMapURL","source","fileData","sourceMapHeader","getResponseHeader","e","re","lastMatch","retrieveSourceMap","sourceMappingURL","sourceMapData","rawData","indexOf","toString","map","mapSourcePosition","position","sourceMap","urlAndMap","sourcesContent","sources","forEach","originalPositionFor","originalPosition","mapEvalOrigin","origin","line","column","CallSiteToString","fileName","fileLocation","isNative","getScriptNameOrSourceURL","isEval","getEvalOrigin","lineNumber","getLineNumber","columnNumber","getColumnNumber","functionName","getFunctionName","addSuffix","isConstructor","isMethodCall","isToplevel","typeName","getTypeName","methodName","getMethodName","cloneCallSite","frame","object","Object","getOwnPropertyNames","getPrototypeOf","name","call","wrapCallSite","getFileName","headerLength","originalFunctionName","prepareStackTrace","error","stack","message","errorString","join","getErrorSource","code","split","Array","printErrorAndExit","stderr","_handle","setBlocking","console","exit","shimEmitUncaughtException","origEmit","emit","hasStack","arguments","hasListeners","listeners","apply","originalRetrieveFileHandlers","originalRetrieveMapHandlers","exports","install","options","Error","overrideRetrieveFile","unshift","overrideRetrieveSourceMap","hookRequire","Module","$compile","prototype","_compile","__sourceMapSupport","content","filename","undefined","installHandler","handleUncaughtExceptions","resetRetrieveHandlers"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/node_modules/source-map-support/source-map-support.js"],"sourcesContent":["var SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar path = require('path');\n\nvar fs;\ntry {\n  fs = require('fs');\n  if (!fs.existsSync || !fs.readFileSync) {\n    // fs doesn't have all methods we need\n    fs = null;\n  }\n} catch (err) {\n  /* nop */\n}\n\nvar bufferFrom = require('buffer-from');\n\n// Only install once if called multiple times\nvar errorFormatterInstalled = false;\nvar uncaughtShimInstalled = false;\n\n// If true, the caches are reset before a stack trace formatting operation\nvar emptyCacheBetweenOperations = false;\n\n// Supports {browser, node, auto}\nvar environment = \"auto\";\n\n// Maps a file path to a string containing the file contents\nvar fileContentsCache = {};\n\n// Maps a file path to a source map for that file\nvar sourceMapCache = {};\n\n// Regex for detecting source maps\nvar reSourceMap = /^data:application\\/json[^,]+base64,/;\n\n// Priority list of retrieve handlers\nvar retrieveFileHandlers = [];\nvar retrieveMapHandlers = [];\n\nfunction isInBrowser() {\n  if (environment === \"browser\")\n    return true;\n  if (environment === \"node\")\n    return false;\n  return ((typeof window !== 'undefined') && (typeof XMLHttpRequest === 'function') && !(window.require && window.module && window.process && window.process.type === \"renderer\"));\n}\n\nfunction hasGlobalProcessEventEmitter() {\n  return ((typeof process === 'object') && (process !== null) && (typeof process.on === 'function'));\n}\n\nfunction handlerExec(list) {\n  return function(arg) {\n    for (var i = 0; i < list.length; i++) {\n      var ret = list[i](arg);\n      if (ret) {\n        return ret;\n      }\n    }\n    return null;\n  };\n}\n\nvar retrieveFile = handlerExec(retrieveFileHandlers);\n\nretrieveFileHandlers.push(function(path) {\n  // Trim the path to make sure there is no extra whitespace.\n  path = path.trim();\n  if (/^file:/.test(path)) {\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function(protocol, drive) {\n      return drive ?\n        '' : // file:///C:/dir/file -> C:/dir/file\n        '/'; // file:///root-dir/file -> /root-dir/file\n    });\n  }\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n\n  var contents = '';\n  try {\n    if (!fs) {\n      // Use SJAX if we are in the browser\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, /** async */ false);\n      xhr.send(null);\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        contents = xhr.responseText;\n      }\n    } else if (fs.existsSync(path)) {\n      // Otherwise, use the filesystem\n      contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (er) {\n    /* ignore any errors */\n  }\n\n  return fileContentsCache[path] = contents;\n});\n\n// Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  var startPath = dir.slice(protocol.length);\n  if (protocol && /^\\/\\w\\:/.test(startPath)) {\n    // handle file:///C:/ paths\n    protocol += '/';\n    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\\\/g, '/');\n  }\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  if (isInBrowser()) {\n     try {\n       var xhr = new XMLHttpRequest();\n       xhr.open('GET', source, false);\n       xhr.send(null);\n       fileData = xhr.readyState === 4 ? xhr.responseText : null;\n\n       // Support providing a sourceMappingURL via the SourceMap header\n       var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") ||\n                             xhr.getResponseHeader(\"X-SourceMap\");\n       if (sourceMapHeader) {\n         return sourceMapHeader;\n       }\n     } catch (e) {\n     }\n  }\n\n  // Get the URL of the source map\n  fileData = retrieveFile(source);\n  var re = /(?:\\/\\/[@#][ \\t]+sourceMappingURL=([^\\s'\"]+?)[ \\t]*$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^\\*]+?)[ \\t]*(?:\\*\\/)[ \\t]*$)/mg;\n  // Keep executing the search to find the *last* sourceMappingURL to avoid\n  // picking up sourceMappingURLs from comments, strings, etc.\n  var lastMatch, match;\n  while (match = re.exec(fileData)) lastMatch = match;\n  if (!lastMatch) return null;\n  return lastMatch[1];\n};\n\n// Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\nvar retrieveSourceMap = handlerExec(retrieveMapHandlers);\nretrieveMapHandlers.push(function(source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null;\n\n  // Read the contents of the source map\n  var sourceMapData;\n  if (reSourceMap.test(sourceMappingURL)) {\n    // Support source map URL as a data url\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\n    sourceMapData = bufferFrom(rawData, \"base64\").toString();\n    sourceMappingURL = source;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL);\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n});\n\nfunction mapSourcePosition(position) {\n  var sourceMap = sourceMapCache[position.source];\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      };\n\n      // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function(source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n    }\n  }\n\n  // Resolve the source URL relative to the URL of the source map\n  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {\n    var originalPosition = sourceMap.map.originalPositionFor(position);\n\n    // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n    if (originalPosition.source !== null) {\n      originalPosition.source = supportRelativeURL(\n        sourceMap.url, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n}\n\n// Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: +match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' +\n      position.line + ':' + (position.column + 1) + ')';\n  }\n\n  // Parse nested eval() calls using recursion\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  }\n\n  // Make sure we still return useful information if we didn't find anything\n  return origin;\n}\n\n// This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\n// implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \";  // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n    var lineNumber = this.getLineNumber();\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n\n  var line = \"\";\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n  if (isMethodCall) {\n    var typeName = this.getTypeName();\n    // Fixes shim to be backward compatable with Node v0 to v4\n    if (typeName === \"[object Object]\") {\n      typeName = \"null\";\n    }\n    var methodName = this.getMethodName();\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n      line += functionName;\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n  return line;\n}\n\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {\n    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\n\nfunction wrapCallSite(frame) {\n  if(frame.isNative()) {\n    return frame;\n  }\n\n  // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n  if (source) {\n    var line = frame.getLineNumber();\n    var column = frame.getColumnNumber() - 1;\n\n    // Fix position in Node where some (internal) code is prepended.\n    // See https://github.com/evanw/node-source-map-support/issues/36\n    var headerLength = 62;\n    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {\n      column -= headerLength;\n    }\n\n    var position = mapSourcePosition({\n      source: source,\n      line: line,\n      column: column\n    });\n    frame = cloneCallSite(frame);\n    var originalFunctionName = frame.getFunctionName;\n    frame.getFunctionName = function() { return position.name || originalFunctionName(); };\n    frame.getFileName = function() { return position.source; };\n    frame.getLineNumber = function() { return position.line; };\n    frame.getColumnNumber = function() { return position.column + 1; };\n    frame.getScriptNameOrSourceURL = function() { return position.source; };\n    return frame;\n  }\n\n  // Code called using eval() needs special handling\n  var origin = frame.isEval() && frame.getEvalOrigin();\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n    frame.getEvalOrigin = function() { return origin; };\n    return frame;\n  }\n\n  // If we get here then we were unable to change the source position\n  return frame;\n}\n\n// This function is part of the V8 stack trace API, for more info see:\n// https://v8.dev/docs/stack-trace-api\nfunction prepareStackTrace(error, stack) {\n  if (emptyCacheBetweenOperations) {\n    fileContentsCache = {};\n    sourceMapCache = {};\n  }\n\n  var name = error.name || 'Error';\n  var message = error.message || '';\n  var errorString = name + \": \" + message;\n\n  return errorString + stack.map(function(frame) {\n    return '\\n    at ' + wrapCallSite(frame);\n  }).join('');\n}\n\n// Generate position and snippet of original source with pointer\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3];\n\n    // Support the inline sourceContents inside the source map\n    var contents = fileContentsCache[source];\n\n    // Support files on disk\n    if (!contents && fs && fs.existsSync(source)) {\n      try {\n        contents = fs.readFileSync(source, 'utf8');\n      } catch (er) {\n        contents = '';\n      }\n    }\n\n    // Format the line from the original source code like node does\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n      if (code) {\n        return source + ':' + line + '\\n' + code + '\\n' +\n          new Array(column).join(' ') + '^';\n      }\n    }\n  }\n  return null;\n}\n\nfunction printErrorAndExit (error) {\n  var source = getErrorSource(error);\n\n  // Ensure error is printed synchronously and not truncated\n  if (process.stderr._handle && process.stderr._handle.setBlocking) {\n    process.stderr._handle.setBlocking(true);\n  }\n\n  if (source) {\n    console.error();\n    console.error(source);\n  }\n\n  console.error(error.stack);\n  process.exit(1);\n}\n\nfunction shimEmitUncaughtException () {\n  var origEmit = process.emit;\n\n  process.emit = function (type) {\n    if (type === 'uncaughtException') {\n      var hasStack = (arguments[1] && arguments[1].stack);\n      var hasListeners = (this.listeners(type).length > 0);\n\n      if (hasStack && !hasListeners) {\n        return printErrorAndExit(arguments[1]);\n      }\n    }\n\n    return origEmit.apply(this, arguments);\n  };\n}\n\nvar originalRetrieveFileHandlers = retrieveFileHandlers.slice(0);\nvar originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);\n\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\n\nexports.install = function(options) {\n  options = options || {};\n\n  if (options.environment) {\n    environment = options.environment;\n    if ([\"node\", \"browser\", \"auto\"].indexOf(environment) === -1) {\n      throw new Error(\"environment \" + environment + \" was unknown. Available options are {auto, browser, node}\")\n    }\n  }\n\n  // Allow sources to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveFile) {\n    if (options.overrideRetrieveFile) {\n      retrieveFileHandlers.length = 0;\n    }\n\n    retrieveFileHandlers.unshift(options.retrieveFile);\n  }\n\n  // Allow source maps to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveSourceMap) {\n    if (options.overrideRetrieveSourceMap) {\n      retrieveMapHandlers.length = 0;\n    }\n\n    retrieveMapHandlers.unshift(options.retrieveSourceMap);\n  }\n\n  // Support runtime transpilers that include inline source maps\n  if (options.hookRequire && !isInBrowser()) {\n    var Module;\n    try {\n      Module = require('module');\n    } catch (err) {\n      // NOP: Loading in catch block to convert webpack error to warning.\n    }\n    var $compile = Module.prototype._compile;\n\n    if (!$compile.__sourceMapSupport) {\n      Module.prototype._compile = function(content, filename) {\n        fileContentsCache[filename] = content;\n        sourceMapCache[filename] = undefined;\n        return $compile.call(this, content, filename);\n      };\n\n      Module.prototype._compile.__sourceMapSupport = true;\n    }\n  }\n\n  // Configure options\n  if (!emptyCacheBetweenOperations) {\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ?\n      options.emptyCacheBetweenOperations : false;\n  }\n\n  // Install the error reformatter\n  if (!errorFormatterInstalled) {\n    errorFormatterInstalled = true;\n    Error.prepareStackTrace = prepareStackTrace;\n  }\n\n  if (!uncaughtShimInstalled) {\n    var installHandler = 'handleUncaughtExceptions' in options ?\n      options.handleUncaughtExceptions : true;\n\n    // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n    if (installHandler && hasGlobalProcessEventEmitter()) {\n      uncaughtShimInstalled = true;\n      shimEmitUncaughtException();\n    }\n  }\n};\n\nexports.resetRetrieveHandlers = function() {\n  retrieveFileHandlers.length = 0;\n  retrieveMapHandlers.length = 0;\n\n  retrieveFileHandlers = originalRetrieveFileHandlers.slice(0);\n  retrieveMapHandlers = originalRetrieveMapHandlers.slice(0);\n  \n  retrieveSourceMap = handlerExec(retrieveMapHandlers);\n  retrieveFile = handlerExec(retrieveFileHandlers);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}