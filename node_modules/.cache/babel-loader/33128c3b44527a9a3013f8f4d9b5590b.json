{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport ReelSet from \"./components/ReelSet\";\nimport \"./assets/css/App.css\";\nimport Mint from \"./components/Mint\";\nimport PFPRacerNFT from './artifacts/contracts/PFPRacerNFT.sol/abi.json';\nimport { assert } from \"chai\";\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [spin, setSpin] = useState(0);\n  const [connecting, setConnecting] = useState();\n  const [showList, setShowList] = useState(0);\n  const [welcomeMessage, setWelcomeMessage] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(\"\");\n  const contractAddr = \"0x01e06a0795d91D346B0C441439001A044AdE67c8\";\n\n  const callbackSetSpin = spin => {\n    console.log(\"My App score is: \" + spin);\n    setSpin(spin);\n  };\n\n  const callBackShowWin = () => {\n    setShowList(1);\n  };\n\n  const welcomeWallMessage = () => {\n    if (welcomeMessage === \"\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-connect\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"h2-title\",\n            children: \"Racer NFT Slot Machine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: connect ? \"connect connecting\" : \"connect\",\n            onClick: () => {\n              checkConnection();\n            },\n            children: \"Connect to Metamask Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome\",\n        children: [/*#__PURE__*/_jsxDEV(Mint, {\n          account: account,\n          contract: contract\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"h2-connect\",\n          children: [\"Welcome Player :\", /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"p-welcomeMessage\",\n            children: welcomeMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this);\n    }\n  };\n  /*\n  I need to retrieve withdraw\n  */\n\n\n  const checkConnection = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      if (accounts[0] !== undefined) {\n        setWelcomeMessage(accounts);\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const newSigner = provider.getSigner(); // console.log(\"My chain id is: \"+ newSigner.getChainId().then(val => val)\n        // .catch(err => err.message));\n\n        let chainId = await newSigner.getChainId();\n        console.log(\"My chain id is:\" + chainId);\n\n        if (chainId !== 80001) {\n          alert(\"You are not connected the Correct network please switch to: chainID:80001 RPC URL:https://matic-mumbai.chainstacklabs.com\");\n        } else {\n          setAccount(accounts[0]);\n          setContract(new ethers.Contract(contractAddr, PFPRacerNFT.abi, newSigner));\n        }\n      } else {\n        setWelcomeMessage(account);\n      }\n    } else {\n      alert(\"Metamask not installed !!! Please install metamask in order to place a mint or do a withdrawal !!!\");\n    }\n  };\n\n  const connect = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      if (accounts[0] === undefined) {\n        const provider = await new ethers.providers.Web3Provider(window.ethereum);\n        const newSigner = await provider.getSigner();\n        setAccount(accounts[0]);\n        setContract(new ethers.Contract(contractAddr, PFPRacerNFT.abi, newSigner));\n        setWelcomeMessage(\"Welcome player: \" + account + \" !\");\n      } else {\n        assert(\"You already are connected to \" + account);\n      }\n    } else {\n      alert(\"Metamask not installed !!! Please install metamask in order to place a mint or do a withdrawal !!!\");\n    }\n  };\n\n  useEffect(() => {\n    checkConnection();\n    welcomeWallMessage();\n    console.log(\"My welcome message is \" + welcomeMessage);\n  }, [account]);\n\n  const gameExplained = () => {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"winningPatterns\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"h2-title\",\n        children: \"Racer NFT Slot Machine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: welcomeWallMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReelSet, {\n      runGame: spin,\n      spinCallback: callbackSetSpin,\n      showWinCallback: callBackShowWin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: gameExplained()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"ro/2A6T0kaAuqjBMkPhptjX6aR0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ethers","ReelSet","Mint","PFPRacerNFT","assert","motion","axios","App","spin","setSpin","connecting","setConnecting","showList","setShowList","welcomeMessage","setWelcomeMessage","account","setAccount","contract","setContract","contractAddr","callbackSetSpin","console","log","callBackShowWin","welcomeWallMessage","connect","checkConnection","window","ethereum","accounts","request","method","undefined","provider","providers","Web3Provider","newSigner","getSigner","chainId","getChainId","alert","Contract","abi","gameExplained"],"sources":["F:/Games/slotmachinereact/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {ethers} from \"ethers\";\nimport ReelSet from \"./components/ReelSet\";\nimport \"./assets/css/App.css\";\nimport Mint from \"./components/Mint\";\nimport PFPRacerNFT from './artifacts/contracts/PFPRacerNFT.sol/abi.json'\nimport { assert } from \"chai\";\nimport {motion} from 'framer-motion';\nimport axios from 'axios';\n\nconst App = () => {\n  const [spin, setSpin] = useState(0);\n  const [connecting, setConnecting] = useState();\n  const [showList, setShowList] = useState(0);\n  const [welcomeMessage, setWelcomeMessage] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(\"\");\n  const contractAddr = \"0x01e06a0795d91D346B0C441439001A044AdE67c8\";\n  const callbackSetSpin = (spin) => {\n    console.log(\"My App score is: \" + spin);\n    setSpin(spin);\n  };\n\n  const callBackShowWin = () => {\n    setShowList(1);\n  };\n\n  const welcomeWallMessage = () => {\n    if(welcomeMessage===\"\"){\n      return (\n        <div className=\"welcome\">\n        <div className=\"div-connect\">   \n        <h2 className=\"h2-title\">Racer NFT Slot Machine</h2>\n          <button\n              className={connect ? \"connect connecting\" : \"connect\"}\n              onClick={() => {checkConnection()}}\n          >Connect to Metamask Wallet</button>\n        </div> \n      </div>);\n  }else{\n    return(\n    <div className=\"welcome\">\n      <Mint account={account} contract={contract} /> \n      <h2 id=\"h2-connect\">Welcome Player :\n        <p id=\"p-welcomeMessage\">{welcomeMessage}</p>\n        </h2>\n    </div>\n    );\n  }\n  }\n/*\nI need to retrieve withdraw\n*/\n\n\n  const checkConnection = async() =>{\n    if(typeof window.ethereum !== \"undefined\"){\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n\n        if(accounts[0]!==undefined){\n          setWelcomeMessage(accounts);\n          const provider =  new ethers.providers.Web3Provider(window.ethereum);\n            const newSigner =  provider.getSigner();\n\n            // console.log(\"My chain id is: \"+ newSigner.getChainId().then(val => val)\n            // .catch(err => err.message));\n          let chainId = await newSigner.getChainId();\n          console.log(\"My chain id is:\"+chainId);\n          if(chainId!==80001){\n            alert(\"You are not connected the Correct network please switch to: chainID:80001 RPC URL:https://matic-mumbai.chainstacklabs.com\");\n          }else{\n            setAccount(accounts[0]);\n            setContract(\n              new ethers.Contract(\n                contractAddr,\n                PFPRacerNFT.abi,\n                newSigner\n              )\n            )\n          }\n        }else{\n          setWelcomeMessage(account);\n        }\n  }else{\n    alert(\"Metamask not installed !!! Please install metamask in order to place a mint or do a withdrawal !!!\");\n  }\n}\n\nconst connect = async () => {\n    if(typeof window.ethereum !== \"undefined\"){\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n\n      if(accounts[0]===undefined){\n        const provider = await new ethers.providers.Web3Provider(window.ethereum);\n        const newSigner = await provider.getSigner();\n        setAccount(accounts[0]);\n        setContract(\n          new ethers.Contract(\n            contractAddr,\n            PFPRacerNFT.abi,\n            newSigner\n          )\n        )\n        \n        setWelcomeMessage(\"Welcome player: \"+account+\" !\");\n     }else{\n      assert(\"You already are connected to \"+account);\n     }\n    }else{\n      alert(\"Metamask not installed !!! Please install metamask in order to place a mint or do a withdrawal !!!\");\n    }\n  }\n\n  useEffect(()=>{\n    checkConnection();\n    welcomeWallMessage();\n    console.log(\"My welcome message is \"+welcomeMessage);\n  },[account])\n\n  const gameExplained = () =>{\n    return (\n      <motion.div className=\"winningPatterns\">\n        <h2 className=\"h2-title\">Racer NFT Slot Machine</h2>\n     </motion.div>\n    )\n  }\n\n  return (\n    <>\n      <div>{welcomeWallMessage()}</div>    \n      <ReelSet\n        runGame={spin}\n        spinCallback={callbackSetSpin}\n        showWinCallback={callBackShowWin}\n      />\n      <div>{gameExplained()}</div>\n    </>\n    \n  );\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}