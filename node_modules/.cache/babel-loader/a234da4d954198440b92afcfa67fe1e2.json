{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBalanceChange = exports.supportChangeEtherBalance = void 0;\n\nconst ethers_1 = require(\"ethers\");\n\nconst utils_1 = require(\"./calledOnContract/utils\");\n\nconst account_1 = require(\"./misc/account\");\n\nfunction supportChangeEtherBalance(Assertion) {\n  Assertion.addMethod('changeEtherBalance', function (account, balanceChange, options) {\n    const subject = this._obj;\n    const derivedPromise = Promise.all([getBalanceChange(subject, account, options), account_1.getAddressOf(account)]).then(_ref => {\n      let [actualChange, address] = _ref;\n      this.assert(actualChange.eq(ethers_1.BigNumber.from(balanceChange)), `Expected \"${address}\" to change balance by ${balanceChange} wei, ` + `but it has changed by ${actualChange} wei`, `Expected \"${address}\" to not change balance by ${balanceChange} wei,`, balanceChange, actualChange);\n    });\n    this.then = derivedPromise.then.bind(derivedPromise);\n    this.catch = derivedPromise.catch.bind(derivedPromise);\n    this.promise = derivedPromise;\n    return this;\n  });\n}\n\nexports.supportChangeEtherBalance = supportChangeEtherBalance;\n\nasync function getBalanceChange(transaction, account, options) {\n  var _a;\n\n  utils_1.ensure(account.provider !== undefined, TypeError, 'Provider not found');\n  let txResponse;\n\n  if (typeof transaction === 'function') {\n    txResponse = await transaction();\n  } else {\n    txResponse = transaction;\n  }\n\n  const txReceipt = await txResponse.wait();\n  const txBlockNumber = txReceipt.blockNumber;\n  const balanceAfter = await account.provider.getBalance(account_1.getAddressOf(account), txBlockNumber);\n  const balanceBefore = await account.provider.getBalance(account_1.getAddressOf(account), txBlockNumber - 1);\n\n  if ((options === null || options === void 0 ? void 0 : options.includeFee) !== true && (await account_1.getAddressOf(account)) === txResponse.from) {\n    const gasPrice = (_a = txResponse.gasPrice) !== null && _a !== void 0 ? _a : txReceipt.effectiveGasPrice;\n    const gasUsed = txReceipt.gasUsed;\n    const txFee = gasPrice.mul(gasUsed);\n    return balanceAfter.add(txFee).sub(balanceBefore);\n  } else {\n    return balanceAfter.sub(balanceBefore);\n  }\n}\n\nexports.getBalanceChange = getBalanceChange;","map":{"version":3,"names":["Object","defineProperty","exports","value","getBalanceChange","supportChangeEtherBalance","ethers_1","require","utils_1","account_1","Assertion","addMethod","account","balanceChange","options","subject","_obj","derivedPromise","Promise","all","getAddressOf","then","actualChange","address","assert","eq","BigNumber","from","bind","catch","promise","transaction","_a","ensure","provider","undefined","TypeError","txResponse","txReceipt","wait","txBlockNumber","blockNumber","balanceAfter","getBalance","balanceBefore","includeFee","gasPrice","effectiveGasPrice","gasUsed","txFee","mul","add","sub"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/chai/dist/cjs/matchers/changeEtherBalance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBalanceChange = exports.supportChangeEtherBalance = void 0;\nconst ethers_1 = require(\"ethers\");\nconst utils_1 = require(\"./calledOnContract/utils\");\nconst account_1 = require(\"./misc/account\");\nfunction supportChangeEtherBalance(Assertion) {\n    Assertion.addMethod('changeEtherBalance', function (account, balanceChange, options) {\n        const subject = this._obj;\n        const derivedPromise = Promise.all([\n            getBalanceChange(subject, account, options),\n            account_1.getAddressOf(account)\n        ]).then(([actualChange, address]) => {\n            this.assert(actualChange.eq(ethers_1.BigNumber.from(balanceChange)), `Expected \"${address}\" to change balance by ${balanceChange} wei, ` +\n                `but it has changed by ${actualChange} wei`, `Expected \"${address}\" to not change balance by ${balanceChange} wei,`, balanceChange, actualChange);\n        });\n        this.then = derivedPromise.then.bind(derivedPromise);\n        this.catch = derivedPromise.catch.bind(derivedPromise);\n        this.promise = derivedPromise;\n        return this;\n    });\n}\nexports.supportChangeEtherBalance = supportChangeEtherBalance;\nasync function getBalanceChange(transaction, account, options) {\n    var _a;\n    utils_1.ensure(account.provider !== undefined, TypeError, 'Provider not found');\n    let txResponse;\n    if (typeof transaction === 'function') {\n        txResponse = await transaction();\n    }\n    else {\n        txResponse = transaction;\n    }\n    const txReceipt = await txResponse.wait();\n    const txBlockNumber = txReceipt.blockNumber;\n    const balanceAfter = await account.provider.getBalance(account_1.getAddressOf(account), txBlockNumber);\n    const balanceBefore = await account.provider.getBalance(account_1.getAddressOf(account), txBlockNumber - 1);\n    if ((options === null || options === void 0 ? void 0 : options.includeFee) !== true && await account_1.getAddressOf(account) === txResponse.from) {\n        const gasPrice = (_a = txResponse.gasPrice) !== null && _a !== void 0 ? _a : txReceipt.effectiveGasPrice;\n        const gasUsed = txReceipt.gasUsed;\n        const txFee = gasPrice.mul(gasUsed);\n        return balanceAfter.add(txFee).sub(balanceBefore);\n    }\n    else {\n        return balanceAfter.sub(balanceBefore);\n    }\n}\nexports.getBalanceChange = getBalanceChange;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}