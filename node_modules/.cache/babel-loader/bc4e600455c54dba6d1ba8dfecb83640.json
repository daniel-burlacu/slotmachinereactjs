{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\WelcomeMessage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"../assets/css/App.css\";\nimport Mint from \".//Mint\";\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/abi.json';\nimport { assert } from \"chai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WelcomeMessage = () => {\n  _s();\n\n  const [connecting, setConnecting] = useState();\n  const [showList, setShowList] = useState(0);\n  const [welcomeMessage, setWelcomeMessage] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(\"\");\n  const contractAddr = \"0x26CD56EeeF4999E6E27030158ec038dd19B8b3cA\";\n\n  const welcomeWallMessage = () => {\n    if (welcomeMessage === \"\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-connect\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"h2-title\",\n            children: \"Minting Racer NFT Slot Machine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: connect ? \"connect connecting\" : \"connect\",\n            onClick: () => {\n              checkConnection();\n            },\n            children: \"Connect to Metamask Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome\",\n        children: [/*#__PURE__*/_jsxDEV(Mint, {\n          account: account,\n          contract: contract\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"h2-connect\",\n          children: [\"Welcome Player :\", /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"p-welcomeMessage\",\n            children: welcomeMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const checkConnection = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      if (accounts[0] !== undefined) {\n        setWelcomeMessage(accounts);\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const newSigner = provider.getSigner(); // console.log(\"My chain id is: \"+ newSigner.getChainId().then(val => val)\n        // .catch(err => err.message));\n\n        let chainId = await newSigner.getChainId();\n        console.log(\"My chain id is:\" + chainId);\n\n        if (chainId !== 80001) {\n          alert(\"You are not connected the Correct network please switch to: chainID:137 RPC URL:https://matic-mumbai.chainstacklabs.com\");\n        } else {\n          setAccount(accounts[0]);\n          setContract(new ethers.Contract(contractAddr, PFPRacerNFT.abi, newSigner));\n        }\n      } else {\n        setWelcomeMessage(account);\n      }\n    } else {\n      alert(\"Metamask not installed !!! Please install metamask in order to place a mint or do a withdrawal !!!\");\n    }\n  };\n\n  const connect = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      if (accounts[0] === undefined) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const newSigner = provider.getSigner();\n        setAccount(accounts[0]);\n        setContract(new ethers.Contract(contractAddr, PFPRacerNFT.abi, newSigner));\n        setWelcomeMessage(\"Welcome player: \" + account + \" !\");\n      } else {\n        assert(\"You already are connected to \" + account);\n      }\n    } else {\n      alert(\"Metamask not installed !!! Please install metamask in order to place a mint or do a withdrawal !!!\");\n    }\n  };\n\n  useEffect(() => {\n    checkConnection();\n    welcomeWallMessage();\n    console.log(\"My welcome message is \" + welcomeMessage);\n  }, [account]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: welcomeWallMessage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WelcomeMessage, \"OvsCcNBuQkdHTROnp7KJIHmsLyQ=\");\n\n_c = WelcomeMessage;\nexport default WelcomeMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"WelcomeMessage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","ethers","Mint","PFPRacerNFT","assert","WelcomeMessage","connecting","setConnecting","showList","setShowList","welcomeMessage","setWelcomeMessage","account","setAccount","contract","setContract","contractAddr","welcomeWallMessage","connect","checkConnection","window","ethereum","accounts","request","method","undefined","provider","providers","Web3Provider","newSigner","getSigner","chainId","getChainId","console","log","alert","Contract","abi"],"sources":["F:/Games/slotmachinereact/src/components/WelcomeMessage.js"],"sourcesContent":["import React, { useRef,useEffect, useState } from \"react\";\r\nimport {ethers} from \"ethers\";\r\nimport \"../assets/css/App.css\";\r\nimport Mint from \".//Mint\";\r\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/abi.json'\r\nimport { assert } from \"chai\";\r\n\r\nconst WelcomeMessage = () =>{\r\n    const [connecting, setConnecting] = useState();\r\n    const [showList, setShowList] = useState(0);\r\n    const [welcomeMessage, setWelcomeMessage] = useState(\"\");\r\n    const [account, setAccount] = useState(\"\");\r\n    const [contract, setContract] = useState(\"\");\r\n    const contractAddr = \"0x26CD56EeeF4999E6E27030158ec038dd19B8b3cA\";\r\n\r\n    const welcomeWallMessage = () => {\r\n        if(welcomeMessage===\"\"){\r\n          return (\r\n            <div className=\"welcome\">\r\n            <div className=\"div-connect\">   \r\n            <h2 className=\"h2-title\">Minting Racer NFT Slot Machine</h2>\r\n              <button\r\n                  className={connect ? \"connect connecting\" : \"connect\"}\r\n                  onClick={() => {checkConnection()}}\r\n              >Connect to Metamask Wallet</button>\r\n            </div> \r\n          </div>);\r\n      }else{\r\n    \r\n        return(\r\n        <div className=\"welcome\">\r\n          <Mint account={account} contract={contract} /> \r\n          <h2 id=\"h2-connect\">Welcome Player :\r\n            <p id=\"p-welcomeMessage\">{welcomeMessage}</p>\r\n            </h2>\r\n        </div>\r\n        );\r\n      }\r\n      }\r\n\r\n      const checkConnection = async() =>{\r\n        if(typeof window.ethereum !== \"undefined\"){\r\n            const accounts = await window.ethereum.request({\r\n              method: \"eth_requestAccounts\",\r\n            });\r\n    \r\n            if(accounts[0]!==undefined){\r\n              setWelcomeMessage(accounts);\r\n              const provider =  new ethers.providers.Web3Provider(window.ethereum);\r\n                const newSigner = provider.getSigner();\r\n    \r\n                // console.log(\"My chain id is: \"+ newSigner.getChainId().then(val => val)\r\n                // .catch(err => err.message));\r\n              let chainId = await newSigner.getChainId();\r\n              console.log(\"My chain id is:\"+chainId);\r\n              if(chainId!==80001){\r\n                alert(\"You are not connected the Correct network please switch to: chainID:137 RPC URL:https://matic-mumbai.chainstacklabs.com\");\r\n              }else{\r\n                setAccount(accounts[0]);\r\n                setContract(\r\n                  new ethers.Contract(\r\n                    contractAddr,\r\n                    PFPRacerNFT.abi,\r\n                    newSigner\r\n                  )\r\n                )\r\n              }\r\n            }else{\r\n              setWelcomeMessage(account);\r\n            }\r\n      }else{\r\n        alert(\"Metamask not installed !!! Please install metamask in order to place a mint or do a withdrawal !!!\");\r\n      }\r\n    }\r\n    \r\n    const connect = async () => {\r\n        if(typeof window.ethereum !== \"undefined\"){\r\n          const accounts = await window.ethereum.request({\r\n            method: \"eth_requestAccounts\",\r\n          });\r\n    \r\n          if(accounts[0]===undefined){\r\n            const provider =  new ethers.providers.Web3Provider(window.ethereum);\r\n            const newSigner =  provider.getSigner();\r\n            setAccount(accounts[0]);\r\n            setContract(\r\n              new ethers.Contract(\r\n                contractAddr,\r\n                PFPRacerNFT.abi,\r\n                newSigner\r\n              )\r\n            )\r\n            setWelcomeMessage(\"Welcome player: \"+account+\" !\");\r\n         }else{\r\n          assert(\"You already are connected to \"+account);\r\n         }\r\n        }else{\r\n          alert(\"Metamask not installed !!! Please install metamask in order to place a mint or do a withdrawal !!!\");\r\n        }\r\n      }\r\n\r\n      useEffect(()=>{\r\n       checkConnection();\r\n        welcomeWallMessage();\r\n        console.log(\"My welcome message is \"+welcomeMessage);\r\n      },[account])\r\n\r\n      return(\r\n        <div>{welcomeWallMessage()}</div>  \r\n      )\r\n\r\n}\r\n\r\nexport default WelcomeMessage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}