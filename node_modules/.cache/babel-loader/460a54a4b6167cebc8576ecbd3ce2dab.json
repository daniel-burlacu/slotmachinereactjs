{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportChangeTokenBalance = void 0;\n\nconst ethers_1 = require(\"ethers\");\n\nconst account_1 = require(\"./misc/account\");\n\nfunction supportChangeTokenBalance(Assertion) {\n  Assertion.addMethod('changeTokenBalance', function (token, account, balanceChange) {\n    const subject = this._obj;\n    const derivedPromise = Promise.all([getBalanceChange(subject, token, account), account_1.getAddressOf(account)]).then(_ref => {\n      let [actualChange, address] = _ref;\n      this.assert(actualChange.eq(ethers_1.BigNumber.from(balanceChange)), `Expected \"${address}\" to change balance by ${balanceChange} wei, ` + `but it has changed by ${actualChange} wei`, `Expected \"${address}\" to not change balance by ${balanceChange} wei,`, balanceChange, actualChange);\n    });\n    this.then = derivedPromise.then.bind(derivedPromise);\n    this.catch = derivedPromise.catch.bind(derivedPromise);\n    this.promise = derivedPromise;\n    return this;\n  });\n}\n\nexports.supportChangeTokenBalance = supportChangeTokenBalance;\n\nasync function getBalanceChange(transactionCall, token, account) {\n  const balanceBefore = await token['balanceOf(address)'](await account_1.getAddressOf(account));\n  await transactionCall();\n  const balanceAfter = await token['balanceOf(address)'](await account_1.getAddressOf(account));\n  return balanceAfter.sub(balanceBefore);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","supportChangeTokenBalance","ethers_1","require","account_1","Assertion","addMethod","token","account","balanceChange","subject","_obj","derivedPromise","Promise","all","getBalanceChange","getAddressOf","then","actualChange","address","assert","eq","BigNumber","from","bind","catch","promise","transactionCall","balanceBefore","balanceAfter","sub"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/chai/dist/cjs/matchers/changeTokenBalance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.supportChangeTokenBalance = void 0;\nconst ethers_1 = require(\"ethers\");\nconst account_1 = require(\"./misc/account\");\nfunction supportChangeTokenBalance(Assertion) {\n    Assertion.addMethod('changeTokenBalance', function (token, account, balanceChange) {\n        const subject = this._obj;\n        const derivedPromise = Promise.all([\n            getBalanceChange(subject, token, account),\n            account_1.getAddressOf(account)\n        ]).then(([actualChange, address]) => {\n            this.assert(actualChange.eq(ethers_1.BigNumber.from(balanceChange)), `Expected \"${address}\" to change balance by ${balanceChange} wei, ` +\n                `but it has changed by ${actualChange} wei`, `Expected \"${address}\" to not change balance by ${balanceChange} wei,`, balanceChange, actualChange);\n        });\n        this.then = derivedPromise.then.bind(derivedPromise);\n        this.catch = derivedPromise.catch.bind(derivedPromise);\n        this.promise = derivedPromise;\n        return this;\n    });\n}\nexports.supportChangeTokenBalance = supportChangeTokenBalance;\nasync function getBalanceChange(transactionCall, token, account) {\n    const balanceBefore = await token['balanceOf(address)'](await account_1.getAddressOf(account));\n    await transactionCall();\n    const balanceAfter = await token['balanceOf(address)'](await account_1.getAddressOf(account));\n    return balanceAfter.sub(balanceBefore);\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,yBAAR,GAAoC,KAAK,CAAzC;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;AACA,SAASF,yBAAT,CAAmCI,SAAnC,EAA8C;EAC1CA,SAAS,CAACC,SAAV,CAAoB,oBAApB,EAA0C,UAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,aAA1B,EAAyC;IAC/E,MAAMC,OAAO,GAAG,KAAKC,IAArB;IACA,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAY,CAC/BC,gBAAgB,CAACL,OAAD,EAAUH,KAAV,EAAiBC,OAAjB,CADe,EAE/BJ,SAAS,CAACY,YAAV,CAAuBR,OAAvB,CAF+B,CAAZ,EAGpBS,IAHoB,CAGf,QAA6B;MAAA,IAA5B,CAACC,YAAD,EAAeC,OAAf,CAA4B;MACjC,KAAKC,MAAL,CAAYF,YAAY,CAACG,EAAb,CAAgBnB,QAAQ,CAACoB,SAAT,CAAmBC,IAAnB,CAAwBd,aAAxB,CAAhB,CAAZ,EAAsE,aAAYU,OAAQ,0BAAyBV,aAAc,QAA5D,GAChE,yBAAwBS,YAAa,MAD1C,EACkD,aAAYC,OAAQ,8BAA6BV,aAAc,OADjH,EACyHA,aADzH,EACwIS,YADxI;IAEH,CANsB,CAAvB;IAOA,KAAKD,IAAL,GAAYL,cAAc,CAACK,IAAf,CAAoBO,IAApB,CAAyBZ,cAAzB,CAAZ;IACA,KAAKa,KAAL,GAAab,cAAc,CAACa,KAAf,CAAqBD,IAArB,CAA0BZ,cAA1B,CAAb;IACA,KAAKc,OAAL,GAAed,cAAf;IACA,OAAO,IAAP;EACH,CAbD;AAcH;;AACDb,OAAO,CAACE,yBAAR,GAAoCA,yBAApC;;AACA,eAAec,gBAAf,CAAgCY,eAAhC,EAAiDpB,KAAjD,EAAwDC,OAAxD,EAAiE;EAC7D,MAAMoB,aAAa,GAAG,MAAMrB,KAAK,CAAC,oBAAD,CAAL,CAA4B,MAAMH,SAAS,CAACY,YAAV,CAAuBR,OAAvB,CAAlC,CAA5B;EACA,MAAMmB,eAAe,EAArB;EACA,MAAME,YAAY,GAAG,MAAMtB,KAAK,CAAC,oBAAD,CAAL,CAA4B,MAAMH,SAAS,CAACY,YAAV,CAAuBR,OAAvB,CAAlC,CAA3B;EACA,OAAOqB,YAAY,CAACC,GAAb,CAAiBF,aAAjB,CAAP;AACH"},"metadata":{},"sourceType":"script"}