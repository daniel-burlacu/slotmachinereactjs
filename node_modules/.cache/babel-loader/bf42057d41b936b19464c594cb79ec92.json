{"ast":null,"code":"var inherits = require('inherits');\n\nvar AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN;\n\nvar AbstractIterator = require('abstract-leveldown').AbstractIterator;\n\nvar ltgt = require('ltgt');\n\nvar createRBT = require('functional-red-black-tree');\n\nvar Buffer = require('safe-buffer').Buffer; // In Node, use global.setImmediate. In the browser, use a consistent\n// microtask library to give consistent microtask experience to all browsers\n\n\nvar setImmediate = require('./immediate');\n\nfunction gt(value) {\n  return ltgt.compare(value, this._upperBound) > 0;\n}\n\nfunction gte(value) {\n  return ltgt.compare(value, this._upperBound) >= 0;\n}\n\nfunction lt(value) {\n  return ltgt.compare(value, this._upperBound) < 0;\n}\n\nfunction lte(value) {\n  return ltgt.compare(value, this._upperBound) <= 0;\n}\n\nfunction MemIterator(db, options) {\n  AbstractIterator.call(this, db);\n  this._limit = options.limit;\n  if (this._limit === -1) this._limit = Infinity;\n  var tree = db._store;\n  this.keyAsBuffer = options.keyAsBuffer !== false;\n  this.valueAsBuffer = options.valueAsBuffer !== false;\n  this._reverse = options.reverse;\n  this._options = options;\n  this._done = 0;\n\n  if (!this._reverse) {\n    this._incr = 'next';\n    this._lowerBound = ltgt.lowerBound(options);\n    this._upperBound = ltgt.upperBound(options);\n\n    if (typeof this._lowerBound === 'undefined') {\n      this._tree = tree.begin;\n    } else if (ltgt.lowerBoundInclusive(options)) {\n      this._tree = tree.ge(this._lowerBound);\n    } else {\n      this._tree = tree.gt(this._lowerBound);\n    }\n\n    if (this._upperBound) {\n      if (ltgt.upperBoundInclusive(options)) {\n        this._test = lte;\n      } else {\n        this._test = lt;\n      }\n    }\n  } else {\n    this._incr = 'prev';\n    this._lowerBound = ltgt.upperBound(options);\n    this._upperBound = ltgt.lowerBound(options);\n\n    if (typeof this._lowerBound === 'undefined') {\n      this._tree = tree.end;\n    } else if (ltgt.upperBoundInclusive(options)) {\n      this._tree = tree.le(this._lowerBound);\n    } else {\n      this._tree = tree.lt(this._lowerBound);\n    }\n\n    if (this._upperBound) {\n      if (ltgt.lowerBoundInclusive(options)) {\n        this._test = gte;\n      } else {\n        this._test = gt;\n      }\n    }\n  }\n}\n\ninherits(MemIterator, AbstractIterator);\n\nMemIterator.prototype._next = function (callback) {\n  var key;\n  var value;\n  if (this._done++ >= this._limit) return setImmediate(callback);\n  if (!this._tree.valid) return setImmediate(callback);\n  key = this._tree.key;\n  value = this._tree.value;\n  if (!this._test(key)) return setImmediate(callback);\n\n  if (this.keyAsBuffer && !Buffer.isBuffer(key)) {\n    key = Buffer.from(String(key));\n  }\n\n  if (this.valueAsBuffer && !Buffer.isBuffer(value)) {\n    value = Buffer.from(String(value));\n  }\n\n  this._tree[this._incr]();\n\n  setImmediate(function callNext() {\n    callback(null, key, value);\n  });\n};\n\nMemIterator.prototype._test = function () {\n  return true;\n};\n\nfunction MemDOWN() {\n  if (!(this instanceof MemDOWN)) return new MemDOWN();\n  AbstractLevelDOWN.call(this, '');\n  this._store = createRBT(ltgt.compare);\n}\n\ninherits(MemDOWN, AbstractLevelDOWN);\n\nMemDOWN.prototype._open = function (options, callback) {\n  var self = this;\n  setImmediate(function callNext() {\n    callback(null, self);\n  });\n};\n\nMemDOWN.prototype._serializeKey = function (key) {\n  return key;\n};\n\nMemDOWN.prototype._serializeValue = function (value) {\n  return value == null ? '' : value;\n};\n\nMemDOWN.prototype._put = function (key, value, options, callback) {\n  var iter = this._store.find(key);\n\n  if (iter.valid) {\n    this._store = iter.update(value);\n  } else {\n    this._store = this._store.insert(key, value);\n  }\n\n  setImmediate(callback);\n};\n\nMemDOWN.prototype._get = function (key, options, callback) {\n  var value = this._store.get(key);\n\n  if (typeof value === 'undefined') {\n    // 'NotFound' error, consistent with LevelDOWN API\n    return setImmediate(function callNext() {\n      callback(new Error('NotFound'));\n    });\n  }\n\n  if (options.asBuffer !== false && !Buffer.isBuffer(value)) {\n    value = Buffer.from(String(value));\n  }\n\n  setImmediate(function callNext() {\n    callback(null, value);\n  });\n};\n\nMemDOWN.prototype._del = function (key, options, callback) {\n  this._store = this._store.remove(key);\n  setImmediate(callback);\n};\n\nMemDOWN.prototype._batch = function (array, options, callback) {\n  var i = -1;\n  var key;\n  var value;\n  var iter;\n  var len = array.length;\n  var tree = this._store;\n\n  while (++i < len) {\n    key = array[i].key;\n    iter = tree.find(key);\n\n    if (array[i].type === 'put') {\n      value = array[i].value;\n      tree = iter.valid ? iter.update(value) : tree.insert(key, value);\n    } else {\n      tree = iter.remove();\n    }\n  }\n\n  this._store = tree;\n  setImmediate(callback);\n};\n\nMemDOWN.prototype._iterator = function (options) {\n  return new MemIterator(this, options);\n};\n\nmodule.exports = MemDOWN.default = MemDOWN;","map":{"version":3,"names":["inherits","require","AbstractLevelDOWN","AbstractIterator","ltgt","createRBT","Buffer","setImmediate","gt","value","compare","_upperBound","gte","lt","lte","MemIterator","db","options","call","_limit","limit","Infinity","tree","_store","keyAsBuffer","valueAsBuffer","_reverse","reverse","_options","_done","_incr","_lowerBound","lowerBound","upperBound","_tree","begin","lowerBoundInclusive","ge","upperBoundInclusive","_test","end","le","prototype","_next","callback","key","valid","isBuffer","from","String","callNext","MemDOWN","_open","self","_serializeKey","_serializeValue","_put","iter","find","update","insert","_get","get","Error","asBuffer","_del","remove","_batch","array","i","len","length","type","_iterator","module","exports","default"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/node_modules/level-mem/node_modules/memdown/memdown.js"],"sourcesContent":["var inherits = require('inherits')\nvar AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN\nvar AbstractIterator = require('abstract-leveldown').AbstractIterator\nvar ltgt = require('ltgt')\nvar createRBT = require('functional-red-black-tree')\nvar Buffer = require('safe-buffer').Buffer\n\n// In Node, use global.setImmediate. In the browser, use a consistent\n// microtask library to give consistent microtask experience to all browsers\nvar setImmediate = require('./immediate')\n\nfunction gt (value) {\n  return ltgt.compare(value, this._upperBound) > 0\n}\n\nfunction gte (value) {\n  return ltgt.compare(value, this._upperBound) >= 0\n}\n\nfunction lt (value) {\n  return ltgt.compare(value, this._upperBound) < 0\n}\n\nfunction lte (value) {\n  return ltgt.compare(value, this._upperBound) <= 0\n}\n\nfunction MemIterator (db, options) {\n  AbstractIterator.call(this, db)\n  this._limit = options.limit\n\n  if (this._limit === -1) this._limit = Infinity\n\n  var tree = db._store\n\n  this.keyAsBuffer = options.keyAsBuffer !== false\n  this.valueAsBuffer = options.valueAsBuffer !== false\n  this._reverse = options.reverse\n  this._options = options\n  this._done = 0\n\n  if (!this._reverse) {\n    this._incr = 'next'\n    this._lowerBound = ltgt.lowerBound(options)\n    this._upperBound = ltgt.upperBound(options)\n\n    if (typeof this._lowerBound === 'undefined') {\n      this._tree = tree.begin\n    } else if (ltgt.lowerBoundInclusive(options)) {\n      this._tree = tree.ge(this._lowerBound)\n    } else {\n      this._tree = tree.gt(this._lowerBound)\n    }\n\n    if (this._upperBound) {\n      if (ltgt.upperBoundInclusive(options)) {\n        this._test = lte\n      } else {\n        this._test = lt\n      }\n    }\n  } else {\n    this._incr = 'prev'\n    this._lowerBound = ltgt.upperBound(options)\n    this._upperBound = ltgt.lowerBound(options)\n\n    if (typeof this._lowerBound === 'undefined') {\n      this._tree = tree.end\n    } else if (ltgt.upperBoundInclusive(options)) {\n      this._tree = tree.le(this._lowerBound)\n    } else {\n      this._tree = tree.lt(this._lowerBound)\n    }\n\n    if (this._upperBound) {\n      if (ltgt.lowerBoundInclusive(options)) {\n        this._test = gte\n      } else {\n        this._test = gt\n      }\n    }\n  }\n}\n\ninherits(MemIterator, AbstractIterator)\n\nMemIterator.prototype._next = function (callback) {\n  var key\n  var value\n\n  if (this._done++ >= this._limit) return setImmediate(callback)\n  if (!this._tree.valid) return setImmediate(callback)\n\n  key = this._tree.key\n  value = this._tree.value\n\n  if (!this._test(key)) return setImmediate(callback)\n\n  if (this.keyAsBuffer && !Buffer.isBuffer(key)) {\n    key = Buffer.from(String(key))\n  }\n\n  if (this.valueAsBuffer && !Buffer.isBuffer(value)) {\n    value = Buffer.from(String(value))\n  }\n\n  this._tree[this._incr]()\n\n  setImmediate(function callNext () {\n    callback(null, key, value)\n  })\n}\n\nMemIterator.prototype._test = function () {\n  return true\n}\n\nfunction MemDOWN () {\n  if (!(this instanceof MemDOWN)) return new MemDOWN()\n\n  AbstractLevelDOWN.call(this, '')\n\n  this._store = createRBT(ltgt.compare)\n}\n\ninherits(MemDOWN, AbstractLevelDOWN)\n\nMemDOWN.prototype._open = function (options, callback) {\n  var self = this\n  setImmediate(function callNext () {\n    callback(null, self)\n  })\n}\n\nMemDOWN.prototype._serializeKey = function (key) {\n  return key\n}\n\nMemDOWN.prototype._serializeValue = function (value) {\n  return value == null ? '' : value\n}\n\nMemDOWN.prototype._put = function (key, value, options, callback) {\n  var iter = this._store.find(key)\n\n  if (iter.valid) {\n    this._store = iter.update(value)\n  } else {\n    this._store = this._store.insert(key, value)\n  }\n\n  setImmediate(callback)\n}\n\nMemDOWN.prototype._get = function (key, options, callback) {\n  var value = this._store.get(key)\n\n  if (typeof value === 'undefined') {\n    // 'NotFound' error, consistent with LevelDOWN API\n    return setImmediate(function callNext () {\n      callback(new Error('NotFound'))\n    })\n  }\n\n  if (options.asBuffer !== false && !Buffer.isBuffer(value)) {\n    value = Buffer.from(String(value))\n  }\n\n  setImmediate(function callNext () {\n    callback(null, value)\n  })\n}\n\nMemDOWN.prototype._del = function (key, options, callback) {\n  this._store = this._store.remove(key)\n  setImmediate(callback)\n}\n\nMemDOWN.prototype._batch = function (array, options, callback) {\n  var i = -1\n  var key\n  var value\n  var iter\n  var len = array.length\n  var tree = this._store\n\n  while (++i < len) {\n    key = array[i].key\n    iter = tree.find(key)\n\n    if (array[i].type === 'put') {\n      value = array[i].value\n      tree = iter.valid ? iter.update(value) : tree.insert(key, value)\n    } else {\n      tree = iter.remove()\n    }\n  }\n\n  this._store = tree\n\n  setImmediate(callback)\n}\n\nMemDOWN.prototype._iterator = function (options) {\n  return new MemIterator(this, options)\n}\n\nmodule.exports = MemDOWN.default = MemDOWN\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}