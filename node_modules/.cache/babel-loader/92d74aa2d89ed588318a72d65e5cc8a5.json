{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // 1. (hash)\n\nconst SWARM_URI = /^bzz-raw:\\/\\/(\\w+)/;\nconst SWARM_GATEWAY = \"https://swarm-gateways.net/bzz-raw:/\";\n\nfunction SwarmResolver() {\n  return function swarm(uri, ctx) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const swarmMatch = uri.match(SWARM_URI);\n\n      if (swarmMatch) {\n        const [, hash] = swarmMatch;\n        return SWARM_GATEWAY + hash;\n      }\n\n      return null;\n    });\n  };\n}\n\nexports.SwarmResolver = SwarmResolver;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEA;;AACA,MAAMA,SAAS,GAAG,oBAAlB;AACA,MAAMC,aAAa,GAAG,sCAAtB;;AAEA,SAAgBC,aAAhB,GAA6B;EAC3B,OAAO,SAAeC,KAAf,CAAqBC,GAArB,EAAkCC,GAAlC,EAA8C;;MACnD,MAAMC,UAAU,GAAGF,GAAG,CAACG,KAAJ,CAAUP,SAAV,CAAnB;;MACA,IAAIM,UAAJ,EAAgB;QACd,MAAM,GAAGE,IAAH,IAAWF,UAAjB;QACA,OAAOL,aAAa,GAAGO,IAAvB;MACD;;MAED,OAAO,IAAP;IACD;EAAA,CARD;AASD;;AAVDC","names":["SWARM_URI","SWARM_GATEWAY","SwarmResolver","swarm","uri","ctx","swarmMatch","match","hash","exports"],"sources":["F:\\Games\\slotmachinereact\\node_modules\\@resolver-engine\\imports\\src\\resolvers\\swarmresolver.ts"],"sourcesContent":["import { Context, SubResolver } from \"@resolver-engine/core\";\n\n// 1. (hash)\nconst SWARM_URI = /^bzz-raw:\\/\\/(\\w+)/;\nconst SWARM_GATEWAY = \"https://swarm-gateways.net/bzz-raw:/\";\n\nexport function SwarmResolver(): SubResolver {\n  return async function swarm(uri: string, ctx: Context): Promise<string | null> {\n    const swarmMatch = uri.match(SWARM_URI);\n    if (swarmMatch) {\n      const [, hash] = swarmMatch;\n      return SWARM_GATEWAY + hash;\n    }\n\n    return null;\n  };\n}\n"]},"metadata":{},"sourceType":"script"}