{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BN = require(\"bn.js\");\n\nvar exceptions_1 = require(\"../exceptions\");\n\nvar memory_1 = require(\"./memory\");\n\nvar stack_1 = require(\"./stack\");\n\nvar opFns_1 = require(\"./opFns\");\n/**\n * Parses and executes EVM bytecode.\n */\n\n\nvar Interpreter =\n/** @class */\nfunction () {\n  function Interpreter(vm, eei) {\n    this._vm = vm; // TODO: remove when not needed\n\n    this._state = vm.pStateManager;\n    this._eei = eei;\n    this._runState = {\n      programCounter: 0,\n      opCode: 0xfe,\n      memory: new memory_1.default(),\n      memoryWordCount: new BN(0),\n      highestMemCost: new BN(0),\n      stack: new stack_1.default(),\n      code: Buffer.alloc(0),\n      validJumps: [],\n      // TODO: Replace with EEI methods\n      _common: this._vm._common,\n      stateManager: this._state._wrapped,\n      eei: this._eei\n    };\n  }\n\n  Interpreter.prototype.run = function (code, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var pc, err, opCode, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this._runState.code = code;\n            this._runState.programCounter = opts.pc || this._runState.programCounter;\n            this._runState.validJumps = this._getValidJumpDests(code);\n            pc = this._runState.programCounter;\n\n            if (pc !== 0 && (pc < 0 || pc >= this._runState.code.length)) {\n              throw new Error('Internal error: program counter not in range');\n            }\n\n            _a.label = 1;\n\n          case 1:\n            if (!(this._runState.programCounter < this._runState.code.length)) return [3\n            /*break*/\n            , 7];\n            opCode = this._runState.code[this._runState.programCounter];\n            this._runState.opCode = opCode;\n            return [4\n            /*yield*/\n            , this._runStepHook()];\n\n          case 2:\n            _a.sent();\n\n            _a.label = 3;\n\n          case 3:\n            _a.trys.push([3, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , this.runStep()];\n\n          case 4:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            e_1 = _a.sent(); // STOP is not an exception\n\n            if (e_1.error !== exceptions_1.ERROR.STOP) {\n              err = e_1;\n            } // TODO: Throw on non-VmError exceptions\n\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            return [3\n            /*break*/\n            , 1];\n\n          case 7:\n            return [2\n            /*return*/\n            , {\n              runState: this._runState,\n              exceptionError: err\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Executes the opcode to which the program counter is pointing,\n   * reducing it's base gas cost, and increments the program counter.\n   */\n\n\n  Interpreter.prototype.runStep = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var opInfo, opFn;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            opInfo = this.lookupOpInfo(this._runState.opCode); // Check for invalid opcode\n\n            if (opInfo.name === 'INVALID') {\n              throw new exceptions_1.VmError(exceptions_1.ERROR.INVALID_OPCODE);\n            } // Reduce opcode's base fee\n\n\n            this._eei.useGas(new BN(opInfo.fee)); // Advance program counter\n\n\n            this._runState.programCounter++;\n            opFn = this.getOpHandler(opInfo);\n            if (!opInfo.isAsync) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , opFn.apply(null, [this._runState])];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            opFn.apply(null, [this._runState]);\n            _a.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Get the handler function for an opcode.\n   */\n\n\n  Interpreter.prototype.getOpHandler = function (opInfo) {\n    return opFns_1.handlers[opInfo.name];\n  };\n  /**\n   * Get info for an opcode from VM's list of opcodes.\n   */\n\n\n  Interpreter.prototype.lookupOpInfo = function (op, full) {\n    if (full === void 0) {\n      full = false;\n    }\n\n    var opcode = this._vm._opcodes[op] ? this._vm._opcodes[op] : {\n      name: 'INVALID',\n      fee: 0,\n      isAsync: false\n    };\n\n    if (full) {\n      var name = opcode.name;\n\n      if (name === 'LOG') {\n        name += op - 0xa0;\n      }\n\n      if (name === 'PUSH') {\n        name += op - 0x5f;\n      }\n\n      if (name === 'DUP') {\n        name += op - 0x7f;\n      }\n\n      if (name === 'SWAP') {\n        name += op - 0x8f;\n      }\n\n      return __assign(__assign({}, opcode), {\n        name: name\n      });\n    }\n\n    return opcode;\n  };\n\n  Interpreter.prototype._runStepHook = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var eventObj;\n      return __generator(this, function (_a) {\n        eventObj = {\n          pc: this._runState.programCounter,\n          gasLeft: this._eei.getGasLeft(),\n          opcode: this.lookupOpInfo(this._runState.opCode, true),\n          stack: this._runState.stack._store,\n          depth: this._eei._env.depth,\n          address: this._eei._env.address,\n          account: this._eei._env.contract,\n          stateManager: this._runState.stateManager,\n          memory: this._runState.memory._store,\n          memoryWordCount: this._runState.memoryWordCount,\n          codeAddress: this._eei._env.codeAddress\n        };\n        /**\n         * The `step` event for trace output\n         *\n         * @event Event: step\n         * @type {Object}\n         * @property {Number} pc representing the program counter\n         * @property {String} opcode the next opcode to be ran\n         * @property {BN} gasLeft amount of gasLeft\n         * @property {Array} stack an `Array` of `Buffers` containing the stack\n         * @property {Account} account the [`Account`](https://github.com/ethereum/ethereumjs-account) which owns the code running\n         * @property {Buffer} address the address of the `account`\n         * @property {Number} depth the current number of calls deep the contract is\n         * @property {Buffer} memory the memory of the VM as a `buffer`\n         * @property {BN} memoryWordCount current size of memory in words\n         * @property {StateManager} stateManager a [`StateManager`](stateManager.md) instance (Beta API)\n         */\n\n        return [2\n        /*return*/\n        , this._vm._emit('step', eventObj)];\n      });\n    });\n  }; // Returns all valid jump destinations.\n\n\n  Interpreter.prototype._getValidJumpDests = function (code) {\n    var jumps = [];\n\n    for (var i = 0; i < code.length; i++) {\n      var curOpCode = this.lookupOpInfo(code[i]).name; // no destinations into the middle of PUSH\n\n      if (curOpCode === 'PUSH') {\n        i += code[i] - 0x5f;\n      }\n\n      if (curOpCode === 'JUMPDEST') {\n        jumps.push(i);\n      }\n    }\n\n    return jumps;\n  };\n\n  return Interpreter;\n}();\n\nexports.default = Interpreter;","map":{"version":3,"mappings":"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","names":["vm","eei","_vm","_state","pStateManager","_eei","_runState","programCounter","opCode","memory","memory_1","memoryWordCount","BN","highestMemCost","stack","stack_1","code","Buffer","alloc","validJumps","_common","stateManager","_wrapped","Interpreter","opts","pc","_getValidJumpDests","length","Error","_runStepHook","_a","runStep","e_1","error","exceptions_1","STOP","err","runState","exceptionError","opInfo","lookupOpInfo","name","INVALID_OPCODE","useGas","fee","opFn","getOpHandler","isAsync","apply","opFns_1","op","full","opcode","_opcodes","eventObj","gasLeft","getGasLeft","_store","depth","_env","address","account","contract","codeAddress","_emit","jumps","i","curOpCode","push"],"sources":["../../lib/evm/interpreter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}