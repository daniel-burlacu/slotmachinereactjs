{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport ReelSet from \"./components/ReelSet\";\nimport './assets/css/App.css';\nimport './assets/css/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [score, setScore] = useState();\n\n  const getScore = score => {\n    console.log(\"My App score is: \" + score);\n    setScore(score);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReelSet, {\n      scoreCallback: getScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"score\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"4Bwr3FXm904yN6Lvx5p81oZPNng=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","ReelSet","App","props","score","setScore","getScore","console","log"],"sources":["F:/Games/slotmachinereact/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport ReelSet from \"./components/ReelSet\"\nimport './assets/css/App.css'\n\nimport './assets/css/App.css';\n\nconst  App=(props)=> {\n\nconst [score, setScore] = useState();\n\nconst getScore = (score)=>{\n  console.log(\"My App score is: \"+score);\n  setScore(score);\n}\n\n  return (\n    <>\n      <ReelSet scoreCallback={getScore}/>\n      <div id=\"controls\">\n      <label>\n           Score:<span id=\"score\">{score}</span>\n      </label>\n      </div>\n    </>\n  );\n}\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,sBAAP;AAEA,OAAO,sBAAP;;;;AAEA,MAAOC,GAAG,GAAEC,KAAD,IAAU;EAAA;;EAErB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;;EAEA,MAAMS,QAAQ,GAAIF,KAAD,IAAS;IACxBG,OAAO,CAACC,GAAR,CAAY,sBAAoBJ,KAAhC;IACAC,QAAQ,CAACD,KAAD,CAAR;EACD,CAHD;;EAKE,oBACE;IAAA,wBACE,QAAC,OAAD;MAAS,aAAa,EAAEE;IAAxB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,EAAE,EAAC,UAAR;MAAA,uBACA;QAAA,kCACW;UAAM,EAAE,EAAC,OAAT;UAAA,UAAkBF;QAAlB;UAAA;UAAA;UAAA;QAAA,QADX;MAAA;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAUD,CAnBD;;GAAOF,G;;KAAAA,G;AAoBP,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}