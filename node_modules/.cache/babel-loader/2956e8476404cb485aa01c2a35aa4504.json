{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\ReelSet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Constants from \"../Constants\";\nimport Bet from \"./Bet\";\nimport Withdrawal from \"./Withdrawal\";\nimport \"../assets/css/App.css\";\nimport Reel from \"./Reel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet score = 2; //let bet=0;\n\nconst ReelSet = props => {\n  _s();\n\n  //  const [spinReel, setSpinReel] = useState(false)\n  const [gameOn, setGameOn] = useState(0);\n  let [bet, setBet] = useState(0); //  const [startGame, setStartGa] = useState(2);\n  //let gameOn=0;\n\n  const [rolling, setRolling] = useState(false);\n  let scoreRef = 0; //let score = 2;\n\n  useEffect(() => {}, [bet]);\n  let spinResults = [];\n  let results = [];\n  let winningLines = [];\n  let countWin = 0;\n  let symbolSellection = [];\n  let randomNr = 0; //  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPBBQQAAG\";\n\n  const symbols = \"DDDGNNSS\";\n\n  const handleScore = e => {\n    // /  const [gameScore, setGameScore] = useState({score:0, bet:0})\n    score = Math.round((score + e) * 100) / 100; //  console.log(\"mySetGameScore = \"+gameScore.score);\n\n    console.log(\"My scoreRef.current=\" + scoreRef); //setGameScore(score);\n    // props.dadCallback(score)\n  };\n\n  const createArray = randomNr => {\n    console.log(\"My random nr is\" + -(randomNr / 242));\n\n    for (let i = 0; i < 3; i++) {\n      console.log(\"My sign is on position: \" + (-(randomNr / 242) + i));\n      results.push(symbols[-(randomNr / 242) + i]);\n    }\n\n    console.log(\"Results array has been created\" + results);\n  };\n\n  const getRandomNr = () => {\n    if (gameOn > 0) {\n      randomNr = -(Math.floor(Math.random() * (symbols.length - 3)) * 242);\n      createArray(randomNr);\n    }\n\n    console.log(\"randomNr = \" + randomNr);\n    return randomNr;\n  };\n\n  useEffect(() => ({}));\n\n  const renderReels = () => {\n    let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(Reel, {\n        reel: el,\n        index: idx,\n        gameOn: getRandomNr()\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }, this);\n    });\n    console.log(\"Render Reels have finish Running: \" + results);\n    createResults();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: reelList\n    }, void 0, false);\n  };\n\n  const drawScore = (lineNumberType, fool) => {\n    let newScore = 0;\n\n    if (fool) {\n      lineNumberType = 18;\n    }\n\n    switch (lineNumberType) {\n      case 0:\n        // top line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 1:\n        // middle line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 2:\n        // bottom line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 3:\n        // V shape starting bottom left\n        //        audioWin.play();\n        newScore = 0.2;\n        break;\n\n      case 4:\n        // V shape starting bottom right\n        //        audioWin.play();\n        newScore = 0.2;\n        break;\n\n      case 5:\n        // W shape starting top left\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 6:\n        // M shape starting bottom left\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 7:\n        // M shape on top half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 8:\n        // W shape on top half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 9:\n        //W shape on bottom half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 10:\n        // M shape on bottom half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 11:\n        // U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 12:\n        // inverse U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 13:\n        // U shape on bottom half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 14:\n        // inverse U shape on bottom half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 15:\n        // inverse U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 16:\n        // Z shape from top left\n        //        audioWin.play();\n        newScore = 0.4;\n        break;\n\n      case 17:\n        // Z shape from bottom left\n        //        audioWin.play();\n        newScore = 0.4;\n        break;\n\n      case 18:\n        // Z shape from bottom left\n        //        audioWinBonus.play();\n        newScore = 100;\n        break;\n\n      default:\n        newScore = 0;\n    }\n\n    console.log(\"My Adding to score:\" + score + \" + \" + newScore);\n\n    if (gameOn > 0) {\n      setMyScore(newScore);\n    }\n\n    return;\n  };\n\n  const createResults = () => {\n    console.log(\"Calling createResults\");\n    let myResults = [];\n    let j = 0;\n\n    for (let i = 0; i <= results.length; i++) {\n      myResults[j] = results[i];\n      j++;\n\n      if (j === 3) {\n        spinResults.push(myResults);\n        myResults = [];\n        j = 0;\n      }\n    }\n\n    console.log(\"spinResults =  \" + spinResults);\n    checkWin(); // score=score+scr;\n    // handleScore();\n    // setScore(scr);\n  };\n\n  const spinReel = () => {\n    setGameOn(() => {\n      setGameOn(gameOn + 1);\n    });\n    console.log(\"GameOn is\" + gameOn); //  checkWin();\n    //  game=1+gameOn;\n    // /  console.log(\"My spinReel game=\"+game);\n    // props.parrentCallBack(score);\n  };\n\n  const checkLinesElements = symbol => {\n    countWin++;\n    let symNr = 0;\n    let fool = 0;\n\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      fool = 0;\n      symNr = 0;\n\n      for (let j = 0; j < Constants.LINES[i].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n\n        if (symbol === spinResults[indexI][indexJ]) {\n          symNr++;\n        }\n      }\n\n      if (fool + symNr === 5 && fool < 4) {\n        winningLines.push(i);\n      }\n    }\n\n    winningLines = uniq(winningLines);\n  };\n\n  const uniq = a => {\n    return a.sort().filter(function (item, pos, ary) {\n      return !pos || item !== ary[pos - 1];\n    });\n  };\n\n  const checkElements = () => {\n    let fool = 0;\n\n    for (let k = 0; k < 3; k++) {\n      fool = 0;\n\n      for (let i = 0; i < spinResults.length; i++) {\n        let symb = \"\";\n\n        for (let j = k; j < spinResults[i].length; j++) {\n          if (spinResults[i][j] !== \"D\") {\n            symb = spinResults[i][j];\n            j = spinResults[i].length;\n          } else {\n            fool++;\n            j = spinResults[i].length;\n          }\n        }\n\n        if (fool < 4 && symb !== \"\") {\n          symbolSellection.push(symb);\n        }\n      }\n    }\n\n    for (let i = 0; i < symbolSellection.length; i++) {\n      checkLinesElements(symbolSellection[i]);\n    }\n  };\n\n  const setBetZero = () => {\n    bet = 0;\n  };\n\n  const setMyScore = e => {\n    let scr = 0;\n\n    if (bet > 0 && e > 0) {\n      console.log(\"Calculating 1: gameOn =\" + gameOn + \" | \" + scr + \"+(\" + bet + \"*\" + e + \")\");\n      scr = scr + (e + bet * e);\n      scr = Math.round(scr * 100) / 100;\n    } else if (bet > 0 && e === 0) {\n      scr = scr - (e + bet * e);\n      console.log(\"Calculating 2: gameOn =\" + gameOn + \" | \" + scr + \"-(\" + bet + \"*\" + e + \")\");\n      scr = Math.round(scr * 100) / 100;\n    } else if (bet === 0 && e > 0) {\n      console.log(\"Calculating 3: gameOn =\" + gameOn + \" | \" + scr + \" + \" + e);\n      scr = Math.round((scr + e) * 100) / 100;\n    }\n\n    console.log(\"your setMyScore scr=\" + scr); // score= Math.round((score+scr) * 100) / 100;\n\n    console.log(\"We are in setScore: \" + e + \" ,gameOn=\" + gameOn + \" ,score=\" + score);\n    handleScore(scr); //  setScore(scr);\n  };\n\n  const checkFourFools = () => {\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      let fool = 0;\n\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n      }\n\n      if (fool === 4) {\n        winningLines.push(i);\n        drawScore(i, false);\n      }\n    }\n  };\n\n  const evaluateResults = () => {\n    checkFourFools();\n    checkElements(); //highLightWinningLines(0);\n\n    if (winningLines.length > 0) {\n      console.log(\"We have winning line !!!\");\n\n      for (let i = 0; i < winningLines.length; i++) {\n        drawScore(winningLines[i], false);\n      }\n    } else {\n      console.log(\"We have no winning lines !!!\");\n\n      if (score - bet >= 0.2) {\n        score = Math.round((score - bet) * 100) / 100; //  setScore(scr);\n        //handleScore(scr);\n\n        console.log(\"your evaluateResults score - bet >= 0.2 => scr=\" + score);\n\n        if (score < bet) {\n          setBetZero();\n        }\n      } else if (score - bet === 0) {\n        setBetZero(); //  scr = 0;\n\n        console.log(\"your evaluateResults scr=bet === 0 = > scr=\" + score); //  setScore(scr);\n        //handleScore(scr);\n      }\n    } //winningLines=[];\n\n  };\n\n  const checkFiveFools = () => {\n    let fl = false;\n    console.log(\"My spinResults are: \" + spinResults);\n\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      let fool = 0;\n\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n      }\n\n      console.log();\n\n      if (fool === 5) {\n        fl = true;\n        winningLines.push(i);\n        drawScore(i, true); //  highLightWinningLines(0);\n\n        break;\n      }\n    }\n\n    console.log(\"We have checked 5 fools, and returning: \" + fl);\n    return fl;\n  };\n\n  const checkWin = () => {\n    console.log(\"My checkWin is: \" + gameOn + \"My reels is:\" + gameOn);\n\n    if (gameOn > 0) {\n      let fool = checkFiveFools();\n\n      if (!fool) {\n        evaluateResults();\n      }\n    }\n  };\n\n  const increaseBet = () => {\n    if (bet < score - 0.2 && score !== 0) {\n      console.log(\"increaseing set !\");\n      setBet(Math.round((bet + 0.2) * 100) / 100);\n    } else {\n      setBet(score);\n    }\n  };\n\n  const decreaseBet = () => {\n    console.log(\"decreasing Bet !!!\");\n\n    if (bet >= 0.2 && props.score !== 0) {\n      setBet(Math.round((bet - 0.2) * 100) / 100);\n    } else if (bet === props.score && props.score !== 0) {\n      setBet(Math.round((props.score - 0.2) * 100) / 100);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"jackpot\",\n      children: [\"Jackpot: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reelSet\",\n          children: renderReels()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !rolling ? \"roll rolling\" : \"roll\",\n        onClick: () => {\n          spinReel();\n        },\n        disabled: rolling,\n        children: rolling ? \"Rolling...\" : \"ROLL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Withdrawal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"setBet\",\n        onClick: () => {\n          increaseBet();\n        } //  disabled={state.disabled}\n        ,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: !bet ? \"bet rolling\" : \"bet\",\n        children: [\"Bet:\", bet]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"setBet\",\n        onClick: () => {\n          decreaseBet();\n        } //  disabled={this.state.disabled}\n        ,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"score\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ReelSet, \"siBP52O1XTPYvKmgxPdwLtka6Tc=\");\n\n_c = ReelSet;\nexport default ReelSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReelSet\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Constants","Bet","Withdrawal","Reel","score","ReelSet","props","gameOn","setGameOn","bet","setBet","rolling","setRolling","scoreRef","spinResults","results","winningLines","countWin","symbolSellection","randomNr","symbols","handleScore","e","Math","round","console","log","createArray","i","push","getRandomNr","floor","random","length","renderReels","reelList","Array","apply","REELS","map","el","idx","createResults","drawScore","lineNumberType","fool","newScore","setMyScore","myResults","j","checkWin","spinReel","checkLinesElements","symbol","symNr","LINES","indexI","indexJ","uniq","a","sort","filter","item","pos","ary","checkElements","k","symb","setBetZero","scr","checkFourFools","evaluateResults","checkFiveFools","fl","increaseBet","decreaseBet"],"sources":["F:/Games/slotmachinereact/src/components/ReelSet.js"],"sourcesContent":["import React, { useEffect, useRef, useState} from \"react\";\r\nimport Constants from \"../Constants\";\r\nimport Bet from \"./Bet\";\r\nimport Withdrawal from \"./Withdrawal\";\r\nimport \"../assets/css/App.css\";\r\nimport Reel from \"./Reel\";\r\n\r\nlet score=2;\r\n//let bet=0;\r\n\r\nconst ReelSet = (props) => {\r\n  //  const [spinReel, setSpinReel] = useState(false)\r\n  const [gameOn, setGameOn] = useState(0);\r\n\r\n  let [bet, setBet] = useState(0)\r\n//  const [startGame, setStartGa] = useState(2);\r\n //let gameOn=0;\r\n  const [rolling, setRolling] = useState(false);\r\n\r\n  let scoreRef = 0;\r\n  //let score = 2;\r\n\r\n  useEffect(()=>{\r\n\r\n  },[bet])\r\n\r\n  let spinResults = [];\r\n  let results = [];\r\n\r\n  let winningLines = [];\r\n  let countWin = 0;\r\n  let symbolSellection = [];\r\n  let randomNr = 0;\r\n//  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPBBQQAAG\";\r\nconst symbols = \"DDDGNNSS\";\r\n\r\n\r\n\r\nconst handleScore =(e)=>{\r\n// /  const [gameScore, setGameScore] = useState({score:0, bet:0})\r\n score=Math.round((score+e) * 100) / 100;\r\n\r\n//  console.log(\"mySetGameScore = \"+gameScore.score);\r\n console.log(\"My scoreRef.current=\"+scoreRef);\r\n//setGameScore(score);\r\n// props.dadCallback(score)\r\n\r\n}\r\n\r\n  const createArray = (randomNr) => {\r\n    console.log(\"My random nr is\" + -(randomNr / 242));\r\n    for (let i = 0; i < 3; i++) {\r\n      console.log(\"My sign is on position: \"+(-(randomNr / 242) + i))\r\n      results.push(symbols[-(randomNr / 242) + i]);\r\n    }\r\n    console.log(\"Results array has been created\" + results)\r\n  };\r\n\r\n  const getRandomNr = () => {\r\n    if (gameOn > 0) {\r\n      randomNr = -(Math.floor(Math.random() * (symbols.length-3)) * 242);\r\n      createArray(randomNr);\r\n    }\r\n    console.log(\"randomNr = \"+randomNr);\r\n    return randomNr;\r\n  };\r\nuseEffect(()=>({\r\n  \r\n}))\r\n  const renderReels = () => {\r\n    let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\r\n      return <Reel reel={el} key={idx} index={idx} gameOn={getRandomNr()}/>;\r\n    });\r\n\r\n  console.log(\"Render Reels have finish Running: \" + results);\r\n  createResults();\r\n    return <>{reelList}</>;\r\n  };\r\n\r\n  const drawScore = (lineNumberType, fool) => {\r\n    let newScore = 0;\r\n    if (fool) {\r\n      lineNumberType = 18;\r\n    }\r\n    switch (lineNumberType) {\r\n      case 0: // top line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 1: // middle line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 2: // bottom line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 3: // V shape starting bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 4: // V shape starting bottom right\r\n        //        audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 5: // W shape starting top left\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 6: // M shape starting bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 7: // M shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 8: // W shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 9: //W shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 10: // M shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 11: // U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 12: // inverse U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 13: // U shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 14: // inverse U shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 15: // inverse U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 16: // Z shape from top left\r\n        //        audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 17: // Z shape from bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 18: // Z shape from bottom left\r\n        //        audioWinBonus.play();\r\n        newScore = 100;\r\n        break;\r\n      default:\r\n        newScore = 0;\r\n    }\r\n\r\n    console.log(\"My Adding to score:\"+score+\" + \" + newScore);\r\n    if(gameOn>0){\r\n      setMyScore(newScore);\r\n   }\r\n    return;\r\n  };\r\n\r\n  const createResults = () => {\r\n\r\n    console.log(\"Calling createResults\");\r\n    let myResults = [];\r\n    let j=0;\r\n\r\n    for(let i=0; i<=results.length;i++){\r\n      \r\n      myResults[j]=(results[i]);\r\n      j++;\r\n\r\n      if(j===3){\r\n        spinResults.push(myResults);\r\n        myResults=[];\r\n        j=0;\r\n      } \r\n    }\r\n\r\n   console.log(\"spinResults =  \"+spinResults);\r\n   checkWin();\r\n  // score=score+scr;\r\n  // handleScore();\r\n  // setScore(scr);\r\n  \r\n  };\r\n\r\n  const spinReel = () => {\r\n    setGameOn(()=>{setGameOn(gameOn+1)});\r\n    console.log(\"GameOn is\"+gameOn);\r\n  //  checkWin();\r\n  //  game=1+gameOn;\r\n  // /  console.log(\"My spinReel game=\"+game);\r\n   \r\n  // props.parrentCallBack(score);\r\n  };\r\n\r\n  const checkLinesElements = (symbol) => {\r\n    countWin++;\r\n    let symNr = 0;\r\n    let fool = 0;\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      fool = 0;\r\n      symNr = 0;\r\n      for (let j = 0; j < Constants.LINES[i].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n        if (symbol === spinResults[indexI][indexJ]) {\r\n          symNr++;\r\n        }\r\n      }\r\n      if (fool + symNr === 5 && fool < 4) {\r\n        winningLines.push(i);\r\n      }\r\n    }\r\n    winningLines = uniq(winningLines);\r\n  };\r\n\r\n  const uniq = (a) => {\r\n    return a.sort().filter(function (item, pos, ary) {\r\n      return !pos || item !== ary[pos - 1];\r\n    });\r\n  };\r\n\r\n  const checkElements = () => {\r\n    let fool = 0;\r\n    for (let k = 0; k < 3; k++) {\r\n      fool = 0;\r\n      for (let i = 0; i < spinResults.length; i++) {\r\n        let symb = \"\";\r\n        for (let j = k; j < spinResults[i].length; j++) {\r\n          if (spinResults[i][j] !== \"D\") {\r\n            symb = spinResults[i][j];\r\n            j = spinResults[i].length;\r\n          } else {\r\n            fool++;\r\n            j = spinResults[i].length;\r\n          }\r\n        }\r\n        if (fool < 4 && symb !== \"\") {\r\n          symbolSellection.push(symb);\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < symbolSellection.length; i++) {\r\n      checkLinesElements(symbolSellection[i]);\r\n    }\r\n  };\r\n\r\n  const setBetZero = () => {\r\n    bet = 0;\r\n  };\r\n\r\n  const setMyScore = (e) => {\r\n    let scr = 0;\r\n    \r\n    if (bet > 0 && e > 0) {\r\n      console.log(\"Calculating 1: gameOn =\"+gameOn+\" | \" + scr + \"+(\" + bet + \"*\" + e + \")\");\r\n      scr = scr + (e + bet * e);\r\n      scr = Math.round(scr * 100) / 100;\r\n    } else if (bet > 0 && e === 0) {\r\n      scr = scr - (e + bet * e);\r\n      console.log(\"Calculating 2: gameOn =\"+gameOn+\" | \" + scr + \"-(\" + bet + \"*\" + e + \")\");\r\n      scr = Math.round(scr * 100) / 100;\r\n    } else if (bet === 0 && e > 0) {\r\n      console.log(\"Calculating 3: gameOn =\"+gameOn+\" | \" + scr + \" + \" + e);\r\n      scr = Math.round((scr + e) * 100) / 100;\r\n    }\r\n    console.log(\"your setMyScore scr=\"+scr);\r\n   // score= Math.round((score+scr) * 100) / 100;\r\n\r\n    console.log(\"We are in setScore: \" + e +\" ,gameOn=\"+gameOn +\" ,score=\"+score);\r\n    handleScore(scr);\r\n  //  setScore(scr);\r\n    \r\n  };\r\n\r\n  const checkFourFools = () => {\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n      }\r\n      if (fool === 4) {\r\n        winningLines.push(i);\r\n        drawScore(i, false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const evaluateResults = () => {\r\n    checkFourFools();\r\n    checkElements();\r\n    //highLightWinningLines(0);\r\n    if (winningLines.length > 0) {\r\n      console.log(\"We have winning line !!!\");\r\n      for (let i = 0; i < winningLines.length; i++) {\r\n        drawScore(winningLines[i], false);\r\n      }\r\n    } else {\r\n      console.log(\"We have no winning lines !!!\");\r\n      if (score - bet >= 0.2) {\r\n        score = Math.round((score- bet) * 100) / 100;\r\n      //  setScore(scr);\r\n      //handleScore(scr);\r\n      console.log(\"your evaluateResults score - bet >= 0.2 => scr=\"+score)\r\n        if (score < bet) {\r\n          setBetZero();\r\n        }\r\n      } else if (score - bet === 0) {\r\n        setBetZero();\r\n      //  scr = 0;\r\n        console.log(\"your evaluateResults scr=bet === 0 = > scr=\"+score)\r\n      //  setScore(scr);\r\n      //handleScore(scr);\r\n      }\r\n    }\r\n    //winningLines=[];\r\n  };\r\n  const checkFiveFools = () => {\r\n    let fl = false;\r\n    console.log(\"My spinResults are: \"+spinResults);\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n      }\r\n      console.log()\r\n      if (fool === 5) {\r\n        fl = true;\r\n        winningLines.push(i);\r\n          drawScore(i,true);\r\n        //  highLightWinningLines(0);\r\n        break;\r\n      }\r\n    }\r\n    console.log(\"We have checked 5 fools, and returning: \"+fl);\r\n    return fl;\r\n  };\r\n\r\n  const checkWin = () => {\r\n\r\n    console.log(\"My checkWin is: \"+gameOn + \"My reels is:\" + gameOn);\r\n    if(gameOn>0){\r\n    \r\n    let fool = checkFiveFools();\r\n    if (!fool) {\r\n      evaluateResults();\r\n    }\r\n  }\r\n  };\r\n\r\n const increaseBet = () => {\r\n    if (bet < score - 0.2 && score !== 0) {\r\n      console.log(\"increaseing set !\");\r\n      setBet(Math.round((bet + 0.2) * 100) / 100);\r\n    } else {\r\n        setBet(score);\r\n    }\r\n  };\r\n\r\n  const decreaseBet = () => {\r\n    console.log(\"decreasing Bet !!!\");\r\n    if (bet >= 0.2 && props.score !== 0) {\r\n        setBet(Math.round((bet - 0.2) * 100) / 100);\r\n    } else if (bet === props.score && props.score !== 0) {\r\n        setBet( Math.round((props.score - 0.2) * 100) / 100);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div id=\"jackpot\" >\r\n    Jackpot: <span>100</span>\r\n  </div>\r\n      <div className=\"container\" >\r\n        <div className=\"playContainer\">\r\n          <div className=\"reelSet\" >\r\n            {renderReels()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n            <div id=\"controls\">\r\n            <div\r\n              className={!rolling ? \"roll rolling\" : \"roll\"}\r\n              onClick={() => {\r\n                spinReel();\r\n              }}\r\n              disabled={rolling} >\r\n              {rolling ? \"Rolling...\" : \"ROLL\"}\r\n            </div>\r\n            <Withdrawal/>\r\n            <button\r\n        id=\"setBet\"\r\n        onClick={()=>{increaseBet()}}\r\n        //  disabled={state.disabled}\r\n      >\r\n        +\r\n      </button>\r\n      <div className={!bet ? \"bet rolling\" : \"bet\"}>Bet:{bet}</div>\r\n      <button\r\n        id=\"setBet\"\r\n        onClick={() => {decreaseBet()}}\r\n        //  disabled={this.state.disabled}\r\n      >\r\n        -\r\n      </button>\r\n            <label>\r\n              Score:<span id=\"score\">{score}</span>\r\n            </label>\r\n\r\n          </div>\r\n\r\n          </>\r\n  );\r\n};\r\n\r\nexport default ReelSet;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}