{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport ReelSet from \"./components/ReelSet\";\nimport \"./assets/css/App.css\";\nimport Mint from \"./components/Mint\";\nimport PFPRacerNFT from './artifacts/contracts/PFPRacerNFT.sol/abi.json';\nimport { assert } from \"chai\";\nimport GameScoreCarousels from './components/GameScoreCarousel';\nimport WelcomeMessage from './components/WelcomeMessage';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [spin, setSpin] = useState(0);\n  const [showList, setShowList] = useState(0); // const [connecting, setConnecting] = useState();\n  // const [welcomeMessage, setWelcomeMessage] = useState(\"\");\n  // const [account, setAccount] = useState(\"\");\n  // const [contract, setContract] = useState(\"\");\n  // const contractAddr = \"0x26CD56EeeF4999E6E27030158ec038dd19B8b3cA\";\n\n  const [widthCarousel, setWidthCarousel] = useState(0);\n  const carousel = useRef();\n\n  const callbackSetSpin = spin => {\n    console.log(\"My App score is: \" + spin);\n    setSpin(spin);\n  };\n\n  const callBackShowWin = () => {\n    setShowList(1);\n  }; // const welcomeWallMessage = () => {\n  //   if(welcomeMessage===\"\"){\n  //     return (\n  //       <div className=\"welcome\">\n  //       <div className=\"div-connect\">   \n  //       <h2 className=\"h2-title\">Minting Racer NFT Slot Machine</h2>\n  //         <button\n  //             className={connect ? \"connect connecting\" : \"connect\"}\n  //             onClick={() => {checkConnection()}}\n  //         >Connect to Metamask Wallet</button>\n  //       </div> \n  //     </div>);\n  // }else{\n  //   return(\n  //   <div className=\"welcome\">\n  //     <Mint account={account} contract={contract} /> \n  //     <h2 id=\"h2-connect\">Welcome Player :\n  //       <p id=\"p-welcomeMessage\">{welcomeMessage}</p>\n  //       </h2>\n  //   </div>\n  //   );\n  // }\n  // }\n\n  /*\n  I need to retrieve withdraw\n  */\n  //   const checkConnection = async() =>{\n  //     if(typeof window.ethereum !== \"undefined\"){\n  //         const accounts = await window.ethereum.request({\n  //           method: \"eth_requestAccounts\",\n  //         });\n  //         if(accounts[0]!==undefined){\n  //           setWelcomeMessage(accounts);\n  //           const provider =  new ethers.providers.Web3Provider(window.ethereum);\n  //             const newSigner = provider.getSigner();\n  //             // console.log(\"My chain id is: \"+ newSigner.getChainId().then(val => val)\n  //             // .catch(err => err.message));\n  //           let chainId = await newSigner.getChainId();\n  //           console.log(\"My chain id is:\"+chainId);\n  //           if(chainId!==80001){\n  //             alert(\"You are not connected the Correct network please switch to: chainID:137 RPC URL:https://matic-mumbai.chainstacklabs.com\");\n  //           }else{\n  //             setAccount(accounts[0]);\n  //             setContract(\n  //               new ethers.Contract(\n  //                 contractAddr,\n  //                 PFPRacerNFT.abi,\n  //                 newSigner\n  //               )\n  //             )\n  //           }\n  //         }else{\n  //           setWelcomeMessage(account);\n  //         }\n  //   }else{\n  //     alert(\"Metamask not installed !!! Please install metamask in order to place a mint or do a withdrawal !!!\");\n  //   }\n  // }\n  // const connect = async () => {\n  //     if(typeof window.ethereum !== \"undefined\"){\n  //       const accounts = await window.ethereum.request({\n  //         method: \"eth_requestAccounts\",\n  //       });\n  //       if(accounts[0]===undefined){\n  //         const provider =  new ethers.providers.Web3Provider(window.ethereum);\n  //         const newSigner =  provider.getSigner();\n  //         setAccount(accounts[0]);\n  //         setContract(\n  //           new ethers.Contract(\n  //             contractAddr,\n  //             PFPRacerNFT.abi,\n  //             newSigner\n  //           )\n  //         )\n  //         setWelcomeMessage(\"Welcome player: \"+account+\" !\");\n  //      }else{\n  //       assert(\"You already are connected to \"+account);\n  //      }\n  //     }else{\n  //       alert(\"Metamask not installed !!! Please install metamask in order to place a mint or do a withdrawal !!!\");\n  //     }\n  //   }\n  //   useEffect(()=>{\n  //     checkConnection();\n  //     welcomeWallMessage();\n  //     console.log(\"My welcome message is \"+welcomeMessage);\n  //   },[account])\n  //\n  //<div>{welcomeWallMessage()}</div>    \n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReelSet, {\n      runGame: spin,\n      spinCallback: callbackSetSpin,\n      showWinCallback: callBackShowWin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameScoreCarousels, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"hmvwo8p/DFfnziUyUMXFIT+eyBg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","ethers","ReelSet","Mint","PFPRacerNFT","assert","GameScoreCarousels","WelcomeMessage","axios","App","spin","setSpin","showList","setShowList","widthCarousel","setWidthCarousel","carousel","callbackSetSpin","console","log","callBackShowWin"],"sources":["F:/Games/slotmachinereact/src/App.js"],"sourcesContent":["import React, { useRef,useEffect, useState } from \"react\";\nimport {ethers} from \"ethers\";\nimport ReelSet from \"./components/ReelSet\";\nimport \"./assets/css/App.css\";\nimport Mint from \"./components/Mint\";\nimport PFPRacerNFT from './artifacts/contracts/PFPRacerNFT.sol/abi.json'\nimport { assert } from \"chai\";\nimport GameScoreCarousels from './components/GameScoreCarousel';\nimport WelcomeMessage from './components/WelcomeMessage';\nimport axios from 'axios';\n\nconst App = () => {\n  const [spin, setSpin] = useState(0);\n  const [showList, setShowList] = useState(0);\n  // const [connecting, setConnecting] = useState();\n  // const [welcomeMessage, setWelcomeMessage] = useState(\"\");\n  // const [account, setAccount] = useState(\"\");\n  // const [contract, setContract] = useState(\"\");\n  // const contractAddr = \"0x26CD56EeeF4999E6E27030158ec038dd19B8b3cA\";\n  const [widthCarousel, setWidthCarousel] = useState(0);\n  const carousel = useRef();\n\n  const callbackSetSpin = (spin) => {\n    console.log(\"My App score is: \" + spin);\n    setSpin(spin);\n  };\n\n  const callBackShowWin = () => {\n    setShowList(1);\n  };\n\n  // const welcomeWallMessage = () => {\n  //   if(welcomeMessage===\"\"){\n  //     return (\n  //       <div className=\"welcome\">\n  //       <div className=\"div-connect\">   \n  //       <h2 className=\"h2-title\">Minting Racer NFT Slot Machine</h2>\n  //         <button\n  //             className={connect ? \"connect connecting\" : \"connect\"}\n  //             onClick={() => {checkConnection()}}\n  //         >Connect to Metamask Wallet</button>\n  //       </div> \n  //     </div>);\n  // }else{\n\n  //   return(\n  //   <div className=\"welcome\">\n  //     <Mint account={account} contract={contract} /> \n  //     <h2 id=\"h2-connect\">Welcome Player :\n  //       <p id=\"p-welcomeMessage\">{welcomeMessage}</p>\n  //       </h2>\n  //   </div>\n  //   );\n  // }\n  // }\n/*\nI need to retrieve withdraw\n*/\n\n\n//   const checkConnection = async() =>{\n//     if(typeof window.ethereum !== \"undefined\"){\n//         const accounts = await window.ethereum.request({\n//           method: \"eth_requestAccounts\",\n//         });\n\n//         if(accounts[0]!==undefined){\n//           setWelcomeMessage(accounts);\n//           const provider =  new ethers.providers.Web3Provider(window.ethereum);\n//             const newSigner = provider.getSigner();\n\n//             // console.log(\"My chain id is: \"+ newSigner.getChainId().then(val => val)\n//             // .catch(err => err.message));\n//           let chainId = await newSigner.getChainId();\n//           console.log(\"My chain id is:\"+chainId);\n//           if(chainId!==80001){\n//             alert(\"You are not connected the Correct network please switch to: chainID:137 RPC URL:https://matic-mumbai.chainstacklabs.com\");\n//           }else{\n//             setAccount(accounts[0]);\n//             setContract(\n//               new ethers.Contract(\n//                 contractAddr,\n//                 PFPRacerNFT.abi,\n//                 newSigner\n//               )\n//             )\n//           }\n//         }else{\n//           setWelcomeMessage(account);\n//         }\n//   }else{\n//     alert(\"Metamask not installed !!! Please install metamask in order to place a mint or do a withdrawal !!!\");\n//   }\n// }\n\n// const connect = async () => {\n//     if(typeof window.ethereum !== \"undefined\"){\n//       const accounts = await window.ethereum.request({\n//         method: \"eth_requestAccounts\",\n//       });\n\n//       if(accounts[0]===undefined){\n//         const provider =  new ethers.providers.Web3Provider(window.ethereum);\n//         const newSigner =  provider.getSigner();\n//         setAccount(accounts[0]);\n//         setContract(\n//           new ethers.Contract(\n//             contractAddr,\n//             PFPRacerNFT.abi,\n//             newSigner\n//           )\n//         )\n//         setWelcomeMessage(\"Welcome player: \"+account+\" !\");\n//      }else{\n//       assert(\"You already are connected to \"+account);\n//      }\n//     }else{\n//       alert(\"Metamask not installed !!! Please install metamask in order to place a mint or do a withdrawal !!!\");\n//     }\n//   }\n\n//   useEffect(()=>{\n//     checkConnection();\n//     welcomeWallMessage();\n//     console.log(\"My welcome message is \"+welcomeMessage);\n//   },[account])\n//\n//<div>{welcomeWallMessage()}</div>    \n\n  return (\n    <>\n      \n      <ReelSet\n        runGame={spin}\n        spinCallback={callbackSetSpin}\n        showWinCallback={callBackShowWin}\n      />\n      <GameScoreCarousels/>\n    </>\n    \n  );\n};\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAkD,OAAlD;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,sBAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,gDAAxB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,CAAD,CAAxC,CAFgB,CAGhB;EACA;EACA;EACA;EACA;;EACA,MAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,CAAD,CAAlD;EACA,MAAMgB,QAAQ,GAAGlB,MAAM,EAAvB;;EAEA,MAAMmB,eAAe,GAAIP,IAAD,IAAU;IAChCQ,OAAO,CAACC,GAAR,CAAY,sBAAsBT,IAAlC;IACAC,OAAO,CAACD,IAAD,CAAP;EACD,CAHD;;EAKA,MAAMU,eAAe,GAAG,MAAM;IAC5BP,WAAW,CAAC,CAAD,CAAX;EACD,CAFD,CAhBgB,CAoBhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACF;AACA;AACA;EAGA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEE,oBACE;IAAA,wBAEE,QAAC,OAAD;MACE,OAAO,EAAEH,IADX;MAEE,YAAY,EAAEO,eAFhB;MAGE,eAAe,EAAEG;IAHnB;MAAA;MAAA;MAAA;IAAA,QAFF,eAOE,QAAC,kBAAD;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA,gBADF;AAYD,CAlID;;GAAMX,G;;KAAAA,G;AAmIN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}