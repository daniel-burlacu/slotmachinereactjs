{"ast":null,"code":"var to = require(\"./to\");\n\nfunction Receipt(tx, block, logs, gasUsed, cumulativeGasUsed, contractAddress, status, logsBloom) {\n  this.tx = tx;\n  this.block = block;\n  this.logs = logs;\n  this.gasUsed = gasUsed;\n  this.cumulativeGasUsed = cumulativeGasUsed;\n  this.contractAddress = contractAddress;\n  this.status = status;\n  this.logsBloom = logsBloom;\n  this.transactionIndex = 0;\n  this.txHash = tx.hash();\n\n  for (var i = 0; i < block.transactions.length; i++) {\n    var current = block.transactions[i];\n\n    if (current.hash().equals(this.txHash)) {\n      this.transactionIndex = i;\n      break;\n    }\n  }\n}\n\nReceipt.prototype.toJSON = function () {\n  // Enforce Hex formatting as defined in the RPC spec.\n  return {\n    transactionHash: to.rpcDataHexString(this.txHash),\n    transactionIndex: to.rpcQuantityHexString(this.transactionIndex),\n    blockHash: to.rpcDataHexString(this.block.hash()),\n    blockNumber: to.rpcQuantityHexString(this.block.header.number),\n    from: to.rpcDataHexString(this.tx.from),\n    to: to.nullableRpcDataHexString(this.tx.to),\n    gasUsed: to.rpcQuantityHexString(this.gasUsed),\n    cumulativeGasUsed: to.rpcQuantityHexString(this.cumulativeGasUsed),\n    contractAddress: this.contractAddress != null ? to.rpcDataHexString(this.contractAddress) : null,\n    logs: this.logs.map(function (log) {\n      return log.toJSON();\n    }),\n    status: to.rpcQuantityHexString(this.status),\n    logsBloom: to.rpcDataHexString(this.logsBloom),\n    v: to.rpcQuantityHexString(this.tx.v),\n    r: to.rpcQuantityHexString(this.tx.r),\n    s: to.rpcQuantityHexString(this.tx.s)\n  };\n};\n\nmodule.exports = Receipt;","map":{"version":3,"names":["to","require","Receipt","tx","block","logs","gasUsed","cumulativeGasUsed","contractAddress","status","logsBloom","transactionIndex","txHash","hash","i","transactions","length","current","equals","prototype","toJSON","transactionHash","rpcDataHexString","rpcQuantityHexString","blockHash","blockNumber","header","number","from","nullableRpcDataHexString","map","log","v","r","s","module","exports"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/lib/utils/receipt.js"],"sourcesContent":["var to = require(\"./to\");\n\nfunction Receipt(tx, block, logs, gasUsed, cumulativeGasUsed, contractAddress, status, logsBloom) {\n  this.tx = tx;\n  this.block = block;\n  this.logs = logs;\n  this.gasUsed = gasUsed;\n  this.cumulativeGasUsed = cumulativeGasUsed;\n  this.contractAddress = contractAddress;\n  this.status = status;\n  this.logsBloom = logsBloom;\n\n  this.transactionIndex = 0;\n\n  this.txHash = tx.hash();\n\n  for (var i = 0; i < block.transactions.length; i++) {\n    var current = block.transactions[i];\n    if (current.hash().equals(this.txHash)) {\n      this.transactionIndex = i;\n      break;\n    }\n  }\n}\n\nReceipt.prototype.toJSON = function() {\n  // Enforce Hex formatting as defined in the RPC spec.\n  return {\n    transactionHash: to.rpcDataHexString(this.txHash),\n    transactionIndex: to.rpcQuantityHexString(this.transactionIndex),\n    blockHash: to.rpcDataHexString(this.block.hash()),\n    blockNumber: to.rpcQuantityHexString(this.block.header.number),\n    from: to.rpcDataHexString(this.tx.from),\n    to: to.nullableRpcDataHexString(this.tx.to),\n    gasUsed: to.rpcQuantityHexString(this.gasUsed),\n    cumulativeGasUsed: to.rpcQuantityHexString(this.cumulativeGasUsed),\n    contractAddress: this.contractAddress != null ? to.rpcDataHexString(this.contractAddress) : null,\n    logs: this.logs.map(function(log) {\n      return log.toJSON();\n    }),\n    status: to.rpcQuantityHexString(this.status),\n    logsBloom: to.rpcDataHexString(this.logsBloom),\n    v: to.rpcQuantityHexString(this.tx.v),\n    r: to.rpcQuantityHexString(this.tx.r),\n    s: to.rpcQuantityHexString(this.tx.s)\n  };\n};\n\nmodule.exports = Receipt;\n"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,MAAD,CAAhB;;AAEA,SAASC,OAAT,CAAiBC,EAAjB,EAAqBC,KAArB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2CC,iBAA3C,EAA8DC,eAA9D,EAA+EC,MAA/E,EAAuFC,SAAvF,EAAkG;EAChG,KAAKP,EAAL,GAAUA,EAAV;EACA,KAAKC,KAAL,GAAaA,KAAb;EACA,KAAKC,IAAL,GAAYA,IAAZ;EACA,KAAKC,OAAL,GAAeA,OAAf;EACA,KAAKC,iBAAL,GAAyBA,iBAAzB;EACA,KAAKC,eAAL,GAAuBA,eAAvB;EACA,KAAKC,MAAL,GAAcA,MAAd;EACA,KAAKC,SAAL,GAAiBA,SAAjB;EAEA,KAAKC,gBAAL,GAAwB,CAAxB;EAEA,KAAKC,MAAL,GAAcT,EAAE,CAACU,IAAH,EAAd;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACW,YAAN,CAAmBC,MAAvC,EAA+CF,CAAC,EAAhD,EAAoD;IAClD,IAAIG,OAAO,GAAGb,KAAK,CAACW,YAAN,CAAmBD,CAAnB,CAAd;;IACA,IAAIG,OAAO,CAACJ,IAAR,GAAeK,MAAf,CAAsB,KAAKN,MAA3B,CAAJ,EAAwC;MACtC,KAAKD,gBAAL,GAAwBG,CAAxB;MACA;IACD;EACF;AACF;;AAEDZ,OAAO,CAACiB,SAAR,CAAkBC,MAAlB,GAA2B,YAAW;EACpC;EACA,OAAO;IACLC,eAAe,EAAErB,EAAE,CAACsB,gBAAH,CAAoB,KAAKV,MAAzB,CADZ;IAELD,gBAAgB,EAAEX,EAAE,CAACuB,oBAAH,CAAwB,KAAKZ,gBAA7B,CAFb;IAGLa,SAAS,EAAExB,EAAE,CAACsB,gBAAH,CAAoB,KAAKlB,KAAL,CAAWS,IAAX,EAApB,CAHN;IAILY,WAAW,EAAEzB,EAAE,CAACuB,oBAAH,CAAwB,KAAKnB,KAAL,CAAWsB,MAAX,CAAkBC,MAA1C,CAJR;IAKLC,IAAI,EAAE5B,EAAE,CAACsB,gBAAH,CAAoB,KAAKnB,EAAL,CAAQyB,IAA5B,CALD;IAML5B,EAAE,EAAEA,EAAE,CAAC6B,wBAAH,CAA4B,KAAK1B,EAAL,CAAQH,EAApC,CANC;IAOLM,OAAO,EAAEN,EAAE,CAACuB,oBAAH,CAAwB,KAAKjB,OAA7B,CAPJ;IAQLC,iBAAiB,EAAEP,EAAE,CAACuB,oBAAH,CAAwB,KAAKhB,iBAA7B,CARd;IASLC,eAAe,EAAE,KAAKA,eAAL,IAAwB,IAAxB,GAA+BR,EAAE,CAACsB,gBAAH,CAAoB,KAAKd,eAAzB,CAA/B,GAA2E,IATvF;IAULH,IAAI,EAAE,KAAKA,IAAL,CAAUyB,GAAV,CAAc,UAASC,GAAT,EAAc;MAChC,OAAOA,GAAG,CAACX,MAAJ,EAAP;IACD,CAFK,CAVD;IAaLX,MAAM,EAAET,EAAE,CAACuB,oBAAH,CAAwB,KAAKd,MAA7B,CAbH;IAcLC,SAAS,EAAEV,EAAE,CAACsB,gBAAH,CAAoB,KAAKZ,SAAzB,CAdN;IAeLsB,CAAC,EAAEhC,EAAE,CAACuB,oBAAH,CAAwB,KAAKpB,EAAL,CAAQ6B,CAAhC,CAfE;IAgBLC,CAAC,EAAEjC,EAAE,CAACuB,oBAAH,CAAwB,KAAKpB,EAAL,CAAQ8B,CAAhC,CAhBE;IAiBLC,CAAC,EAAElC,EAAE,CAACuB,oBAAH,CAAwB,KAAKpB,EAAL,CAAQ+B,CAAhC;EAjBE,CAAP;AAmBD,CArBD;;AAuBAC,MAAM,CAACC,OAAP,GAAiBlC,OAAjB"},"metadata":{},"sourceType":"script"}