{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BN = require(\"bn.js\");\n\nvar evm_1 = require(\"../evm\");\n\nvar exceptions_1 = require(\"../../exceptions\");\n\nvar assert = require('assert'); // The following blake2 code has been taken from (license: Creative Commons CC0):\n// https://github.com/dcposch/blakejs/blob/410c640d0f08d3b26904c6d1ab3d81df3619d282/blake2s.js\n// The modifications include:\n//  - Avoiding the use of context in F\n//  - F accepts number of rounds as parameter\n//  - Expect 2 64-byte t values, xor them both\n//  - Take modulo 10 for indices of SIGMA\n//  - Added type annotations\n//  - Moved previously global `v` and `m` variables inside the F function\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\n\n\nfunction ADD64AA(v, a, b) {\n  var o0 = v[a] + v[b];\n  var o1 = v[a + 1] + v[b + 1];\n\n  if (o0 >= 0x100000000) {\n    o1++;\n  }\n\n  v[a] = o0;\n  v[a + 1] = o1;\n} // 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\n\n\nfunction ADD64AC(v, a, b0, b1) {\n  var o0 = v[a] + b0;\n\n  if (b0 < 0) {\n    o0 += 0x100000000;\n  }\n\n  var o1 = v[a + 1] + b1;\n\n  if (o0 >= 0x100000000) {\n    o1++;\n  }\n\n  v[a] = o0;\n  v[a + 1] = o1;\n} // Little-endian byte access\n\n\nfunction B2B_GET32(arr, i) {\n  return arr[i] ^ arr[i + 1] << 8 ^ arr[i + 2] << 16 ^ arr[i + 3] << 24;\n} // G Mixing function\n// The ROTRs are inlined for speed\n\n\nfunction B2B_G(v, mw, a, b, c, d, ix, iy) {\n  var x0 = mw[ix];\n  var x1 = mw[ix + 1];\n  var y0 = mw[iy];\n  var y1 = mw[iy + 1];\n  ADD64AA(v, a, b); // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n\n  ADD64AC(v, a, x0, x1); // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n\n  var xor0 = v[d] ^ v[a];\n  var xor1 = v[d + 1] ^ v[a + 1];\n  v[d] = xor1;\n  v[d + 1] = xor0;\n  ADD64AA(v, c, d); // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n\n  xor0 = v[b] ^ v[c];\n  xor1 = v[b + 1] ^ v[c + 1];\n  v[b] = xor0 >>> 24 ^ xor1 << 8;\n  v[b + 1] = xor1 >>> 24 ^ xor0 << 8;\n  ADD64AA(v, a, b);\n  ADD64AC(v, a, y0, y1); // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n\n  xor0 = v[d] ^ v[a];\n  xor1 = v[d + 1] ^ v[a + 1];\n  v[d] = xor0 >>> 16 ^ xor1 << 16;\n  v[d + 1] = xor1 >>> 16 ^ xor0 << 16;\n  ADD64AA(v, c, d); // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n\n  xor0 = v[b] ^ v[c];\n  xor1 = v[b + 1] ^ v[c + 1];\n  v[b] = xor1 >>> 31 ^ xor0 << 1;\n  v[b + 1] = xor0 >>> 31 ^ xor1 << 1;\n} // Initialization Vector\n\n\nvar BLAKE2B_IV32 = new Uint32Array([0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19]);\nvar SIGMA8 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]; // These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\n\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) {\n  return x * 2;\n}));\n\nfunction F(h, m, t, f, rounds) {\n  var v = new Uint32Array(32);\n  var i = 0; // init work variables\n\n  for (i = 0; i < 16; i++) {\n    v[i] = h[i];\n    v[i + 16] = BLAKE2B_IV32[i];\n  } // 128 bits of offset\n\n\n  v[24] = v[24] ^ t[0];\n  v[25] = v[25] ^ t[1];\n  v[26] = v[26] ^ t[2];\n  v[27] = v[27] ^ t[3]; // last block flag set ?\n\n  if (f) {\n    v[28] = ~v[28];\n    v[29] = ~v[29];\n  } // message words\n\n\n  var mw = new Uint32Array(32); // get little-endian words\n\n  for (i = 0; i < 32; i++) {\n    mw[i] = B2B_GET32(m, 4 * i);\n  } // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n\n\n  for (i = 0; i < rounds; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    var ri = i % 10 * 16;\n    B2B_G(v, mw, 0, 8, 16, 24, SIGMA82[ri + 0], SIGMA82[ri + 1]);\n    B2B_G(v, mw, 2, 10, 18, 26, SIGMA82[ri + 2], SIGMA82[ri + 3]);\n    B2B_G(v, mw, 4, 12, 20, 28, SIGMA82[ri + 4], SIGMA82[ri + 5]);\n    B2B_G(v, mw, 6, 14, 22, 30, SIGMA82[ri + 6], SIGMA82[ri + 7]);\n    B2B_G(v, mw, 0, 10, 20, 30, SIGMA82[ri + 8], SIGMA82[ri + 9]);\n    B2B_G(v, mw, 2, 12, 22, 24, SIGMA82[ri + 10], SIGMA82[ri + 11]);\n    B2B_G(v, mw, 4, 14, 16, 26, SIGMA82[ri + 12], SIGMA82[ri + 13]);\n    B2B_G(v, mw, 6, 8, 18, 28, SIGMA82[ri + 14], SIGMA82[ri + 15]);\n  }\n\n  for (i = 0; i < 16; i++) {\n    h[i] = h[i] ^ v[i] ^ v[i + 16];\n  }\n}\n\nexports.F = F;\n\nfunction default_1(opts) {\n  assert(opts.data);\n  var data = opts.data;\n\n  if (data.length !== 213) {\n    return {\n      returnValue: Buffer.alloc(0),\n      gasUsed: opts.gasLimit,\n      exceptionError: new exceptions_1.VmError(exceptions_1.ERROR.OUT_OF_RANGE)\n    };\n  }\n\n  var lastByte = data.slice(212, 213)[0];\n\n  if (lastByte !== 1 && lastByte !== 0) {\n    return {\n      returnValue: Buffer.alloc(0),\n      gasUsed: opts.gasLimit,\n      exceptionError: new exceptions_1.VmError(exceptions_1.ERROR.OUT_OF_RANGE)\n    };\n  }\n\n  var rounds = data.slice(0, 4).readUInt32BE(0);\n  var hRaw = data.slice(4, 68);\n  var mRaw = data.slice(68, 196);\n  var tRaw = data.slice(196, 212); // final\n\n  var f = lastByte === 1;\n  var gasUsed = new BN(opts._common.param('gasPrices', 'blake2Round'));\n  gasUsed.imul(new BN(rounds));\n\n  if (opts.gasLimit.lt(gasUsed)) {\n    return evm_1.OOGResult(opts.gasLimit);\n  }\n\n  var h = new Uint32Array(16);\n\n  for (var i = 0; i < 16; i++) {\n    h[i] = hRaw.readUInt32LE(i * 4);\n  }\n\n  var m = new Uint32Array(32);\n\n  for (var i = 0; i < 32; i++) {\n    m[i] = mRaw.readUInt32LE(i * 4);\n  }\n\n  var t = new Uint32Array(4);\n\n  for (var i = 0; i < 4; i++) {\n    t[i] = tRaw.readUInt32LE(i * 4);\n  }\n\n  F(h, m, t, f, rounds);\n  var output = Buffer.alloc(64);\n\n  for (var i = 0; i < 16; i++) {\n    output.writeUInt32LE(h[i], i * 4);\n  }\n\n  return {\n    gasUsed: gasUsed,\n    returnValue: output\n  };\n}\n\nexports.default = default_1;","map":{"version":3,"mappings":"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","names":["assert","require","ADD64AA","v","a","b","o0","o1","ADD64AC","b0","b1","B2B_GET32","arr","i","B2B_G","mw","c","d","ix","iy","x0","x1","y0","y1","xor0","xor1","BLAKE2B_IV32","Uint32Array","SIGMA8","SIGMA82","Uint8Array","map","x","F","h","m","t","f","rounds","ri","exports","opts","data","length","returnValue","Buffer","alloc","gasUsed","gasLimit","exceptionError","exceptions_1","OUT_OF_RANGE","lastByte","slice","readUInt32BE","hRaw","mRaw","tRaw","BN","_common","param","imul","lt","evm_1","readUInt32LE","output","writeUInt32LE"],"sources":["../../../lib/evm/precompiles/09-blake2f.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}