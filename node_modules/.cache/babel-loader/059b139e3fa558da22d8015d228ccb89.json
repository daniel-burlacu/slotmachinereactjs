{"ast":null,"code":"module.exports = LRUCache; // This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\n\nvar Map = require('pseudomap');\n\nfunction naiveLength() {\n  return 1;\n}\n\nfunction LRUCache(options) {\n  if (!(this instanceof LRUCache)) return new LRUCache(options);\n  if (typeof options === 'number') options = {\n    max: options\n  };\n  if (!options) options = {};\n  this._max = options.max; // Kind of weird to have a default max of Infinity, but oh well.\n\n  if (!this._max || !(typeof this._max === \"number\") || this._max <= 0) this._max = Infinity;\n  this._lengthCalculator = options.length || naiveLength;\n  if (typeof this._lengthCalculator !== \"function\") this._lengthCalculator = naiveLength;\n  this._allowStale = options.stale || false;\n  this._maxAge = options.maxAge || null;\n  this._dispose = options.dispose;\n  this.reset();\n} // resize the cache when the max changes.\n\n\nObject.defineProperty(LRUCache.prototype, \"max\", {\n  set: function (mL) {\n    if (!mL || !(typeof mL === \"number\") || mL <= 0) mL = Infinity;\n    this._max = mL;\n    if (this._length > this._max) trim(this);\n  },\n  get: function () {\n    return this._max;\n  },\n  enumerable: true\n}); // resize the cache when the lengthCalculator changes.\n\nObject.defineProperty(LRUCache.prototype, \"lengthCalculator\", {\n  set: function (lC) {\n    if (typeof lC !== \"function\") {\n      this._lengthCalculator = naiveLength;\n      this._length = this._lruList.size;\n\n      this._cache.forEach(function (value, key) {\n        value.length = 1;\n      });\n    } else {\n      this._lengthCalculator = lC;\n      this._length = 0;\n\n      this._cache.forEach(function (value, key) {\n        value.length = this._lengthCalculator(value.value, key);\n        this._length += value.length;\n      }, this);\n    }\n\n    if (this._length > this._max) trim(this);\n  },\n  get: function () {\n    return this._lengthCalculator;\n  },\n  enumerable: true\n});\nObject.defineProperty(LRUCache.prototype, \"length\", {\n  get: function () {\n    return this._length;\n  },\n  enumerable: true\n});\nObject.defineProperty(LRUCache.prototype, \"itemCount\", {\n  get: function () {\n    return this._lruList.size;\n  },\n  enumerable: true\n});\n\nfunction reverseKeys(map) {\n  // keys live in lruList map in insertion order.\n  // we want them in reverse insertion order.\n  // flip the list of keys.\n  var itemCount = map.size;\n  var keys = new Array(itemCount);\n  var i = itemCount;\n  map.forEach(function (value, key) {\n    keys[--i] = key;\n  });\n  return keys;\n}\n\nLRUCache.prototype.rforEach = function (fn, thisp) {\n  thisp = thisp || this;\n\n  this._lruList.forEach(function (hit) {\n    forEachStep(this, fn, hit, thisp);\n  }, this);\n};\n\nfunction forEachStep(self, fn, hit, thisp) {\n  if (isStale(self, hit)) {\n    del(self, hit);\n\n    if (!self._allowStale) {\n      hit = undefined;\n    }\n  }\n\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self);\n  }\n}\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this;\n  var keys = reverseKeys(this._lruList);\n\n  for (var k = 0; k < keys.length; k++) {\n    var hit = this._lruList.get(keys[k]);\n\n    forEachStep(this, fn, hit, thisp);\n  }\n};\n\nLRUCache.prototype.keys = function () {\n  return reverseKeys(this._lruList).map(function (k) {\n    return this._lruList.get(k).key;\n  }, this);\n};\n\nLRUCache.prototype.values = function () {\n  return reverseKeys(this._lruList).map(function (k) {\n    return this._lruList.get(k).value;\n  }, this);\n};\n\nLRUCache.prototype.reset = function () {\n  if (this._dispose && this._cache) {\n    this._cache.forEach(function (entry, key) {\n      this._dispose(key, entry.value);\n    }, this);\n  }\n\n  this._cache = new Map(); // hash of items by key\n\n  this._lruList = new Map(); // list of items in order of use recency\n\n  this._mru = 0; // most recently used\n\n  this._lru = 0; // least recently used\n\n  this._length = 0; // number of items in the list\n};\n\nLRUCache.prototype.dump = function () {\n  var arr = [];\n  var i = 0;\n  var size = this._lruList.size;\n  return reverseKeys(this._lruList).map(function (k) {\n    var hit = this._lruList.get(k);\n\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      };\n    }\n  }, this).filter(function (h) {\n    return h;\n  });\n};\n\nLRUCache.prototype.dumpLru = function () {\n  return this._lruList;\n};\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || this._maxAge;\n  var now = maxAge ? Date.now() : 0;\n\n  var len = this._lengthCalculator(value, key);\n\n  if (this._cache.has(key)) {\n    if (len > this._max) {\n      del(this, this._cache.get(key));\n      return false;\n    }\n\n    var item = this._cache.get(key); // dispose of the old one before overwriting\n\n\n    if (this._dispose) this._dispose(key, item.value);\n    item.now = now;\n    item.maxAge = maxAge;\n    item.value = value;\n    this._length += len - item.length;\n    item.length = len;\n    this.get(key);\n    if (this._length > this._max) trim(this);\n    return true;\n  }\n\n  var hit = new Entry(key, value, this._mru, len, now, maxAge);\n  incMru(this); // oversized objects fall out of cache automatically.\n\n  if (hit.length > this._max) {\n    if (this._dispose) this._dispose(key, value);\n    return false;\n  }\n\n  this._length += hit.length;\n\n  this._cache.set(key, hit);\n\n  this._lruList.set(hit.lu, hit);\n\n  if (this._length > this._max) trim(this);\n  return true;\n};\n\nLRUCache.prototype.has = function (key) {\n  if (!this._cache.has(key)) return false;\n\n  var hit = this._cache.get(key);\n\n  if (isStale(this, hit)) {\n    return false;\n  }\n\n  return true;\n};\n\nLRUCache.prototype.get = function (key) {\n  return get(this, key, true);\n};\n\nLRUCache.prototype.peek = function (key) {\n  return get(this, key, false);\n};\n\nLRUCache.prototype.pop = function () {\n  var hit = this._lruList.get(this._lru);\n\n  del(this, hit);\n  return hit || null;\n};\n\nLRUCache.prototype.del = function (key) {\n  del(this, this._cache.get(key));\n};\n\nLRUCache.prototype.load = function (arr) {\n  //reset the cache\n  this.reset();\n  var now = Date.now(); // A previous serialized cache has the most recent items first\n\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l];\n    var expiresAt = hit.e || 0;\n\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v);\n    } else {\n      var maxAge = expiresAt - now; // dont add already expired items\n\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge);\n      }\n    }\n  }\n};\n\nfunction get(self, key, doUse) {\n  var hit = self._cache.get(key);\n\n  if (hit) {\n    if (isStale(self, hit)) {\n      del(self, hit);\n      if (!self._allowStale) hit = undefined;\n    } else {\n      if (doUse) use(self, hit);\n    }\n\n    if (hit) hit = hit.value;\n  }\n\n  return hit;\n}\n\nfunction isStale(self, hit) {\n  if (!hit || !hit.maxAge && !self._maxAge) return false;\n  var stale = false;\n  var diff = Date.now() - hit.now;\n\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge;\n  } else {\n    stale = self._maxAge && diff > self._maxAge;\n  }\n\n  return stale;\n}\n\nfunction use(self, hit) {\n  shiftLU(self, hit);\n  hit.lu = self._mru;\n  incMru(self);\n\n  self._lruList.set(hit.lu, hit);\n}\n\nfunction trim(self) {\n  if (self._length > self._max) {\n    var keys = reverseKeys(self._lruList);\n\n    for (var k = keys.length - 1; self._length > self._max; k--) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      self._lru = keys[k - 1];\n      del(self, self._lruList.get(keys[k]));\n    }\n  }\n}\n\nfunction shiftLU(self, hit) {\n  self._lruList.delete(hit.lu);\n\n  if (hit.lu === self._lru) self._lru = reverseKeys(self._lruList).pop();\n}\n\nfunction del(self, hit) {\n  if (hit) {\n    if (self._dispose) self._dispose(hit.key, hit.value);\n    self._length -= hit.length;\n\n    self._cache.delete(hit.key);\n\n    shiftLU(self, hit);\n  }\n} // classy, since V8 prefers predictable objects.\n\n\nfunction Entry(key, value, lu, length, now, maxAge) {\n  this.key = key;\n  this.value = value;\n  this.lu = lu;\n  this.length = length;\n  this.now = now;\n  if (maxAge) this.maxAge = maxAge;\n} // Incrementers and decrementers that loop at MAX_SAFE_INTEGER\n// only relevant for the lu, lru, and mru counters, since they\n// get touched a lot and can get very large. Also, since they\n// only go upwards, and the sets will tend to be much smaller than\n// the max, we can very well assume that a very small number comes\n// after a very large number, rather than before it.\n\n\nvar maxSafeInt = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nfunction intInc(number) {\n  return number === maxSafeInt ? 0 : number + 1;\n}\n\nfunction incMru(self) {\n  do {\n    self._mru = intInc(self._mru);\n  } while (self._lruList.has(self._mru));\n}","map":{"version":3,"names":["module","exports","LRUCache","Map","require","naiveLength","options","max","_max","Infinity","_lengthCalculator","length","_allowStale","stale","_maxAge","maxAge","_dispose","dispose","reset","Object","defineProperty","prototype","set","mL","_length","trim","get","enumerable","lC","_lruList","size","_cache","forEach","value","key","reverseKeys","map","itemCount","keys","Array","i","rforEach","fn","thisp","hit","forEachStep","self","isStale","del","undefined","call","k","values","entry","_mru","_lru","dump","arr","v","e","now","filter","h","dumpLru","Date","len","has","item","Entry","incMru","lu","peek","pop","load","l","expiresAt","doUse","use","diff","shiftLU","delete","maxSafeInt","Number","MAX_SAFE_INTEGER","intInc","number"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/node_modules/cachedown/node_modules/lru-cache/lib/lru-cache.js"],"sourcesContent":["module.exports = LRUCache\n\n// This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\nvar Map = require('pseudomap')\n\nfunction naiveLength () { return 1 }\n\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache))\n    return new LRUCache(options)\n\n  if (typeof options === 'number')\n    options = { max: options }\n\n  if (!options)\n    options = {}\n\n  this._max = options.max\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!this._max || !(typeof this._max === \"number\") || this._max <= 0 )\n    this._max = Infinity\n\n  this._lengthCalculator = options.length || naiveLength\n  if (typeof this._lengthCalculator !== \"function\")\n    this._lengthCalculator = naiveLength\n\n  this._allowStale = options.stale || false\n  this._maxAge = options.maxAge || null\n  this._dispose = options.dispose\n  this.reset()\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, \"max\",\n  { set : function (mL) {\n      if (!mL || !(typeof mL === \"number\") || mL <= 0 ) mL = Infinity\n      this._max = mL\n      if (this._length > this._max) trim(this)\n    }\n  , get : function () { return this._max }\n  , enumerable : true\n  })\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, \"lengthCalculator\",\n  { set : function (lC) {\n      if (typeof lC !== \"function\") {\n        this._lengthCalculator = naiveLength\n        this._length = this._lruList.size\n        this._cache.forEach(function (value, key) {\n          value.length = 1\n        })\n      } else {\n        this._lengthCalculator = lC\n        this._length = 0\n        this._cache.forEach(function (value, key) {\n          value.length = this._lengthCalculator(value.value, key)\n          this._length += value.length\n        }, this)\n      }\n\n      if (this._length > this._max) trim(this)\n    }\n  , get : function () { return this._lengthCalculator }\n  , enumerable : true\n  })\n\nObject.defineProperty(LRUCache.prototype, \"length\",\n  { get : function () { return this._length }\n  , enumerable : true\n  })\n\nObject.defineProperty(LRUCache.prototype, \"itemCount\",\n  { get : function () { return this._lruList.size }\n  , enumerable : true\n  })\n\nfunction reverseKeys (map) {\n  // keys live in lruList map in insertion order.\n  // we want them in reverse insertion order.\n  // flip the list of keys.\n  var itemCount = map.size\n  var keys = new Array(itemCount)\n  var i = itemCount\n  map.forEach(function (value, key) {\n    keys[--i] = key\n  })\n\n  return keys\n}\n\nLRUCache.prototype.rforEach = function (fn, thisp) {\n  thisp = thisp || this\n  this._lruList.forEach(function (hit) {\n    forEachStep(this, fn, hit, thisp)\n  }, this)\n}\n\nfunction forEachStep (self, fn, hit, thisp) {\n  if (isStale(self, hit)) {\n    del(self, hit)\n    if (!self._allowStale) {\n      hit = undefined\n    }\n  }\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self)\n  }\n}\n\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n\n  var keys = reverseKeys(this._lruList)\n  for (var k = 0; k < keys.length; k++) {\n    var hit = this._lruList.get(keys[k])\n    forEachStep(this, fn, hit, thisp)\n  }\n}\n\nLRUCache.prototype.keys = function () {\n  return reverseKeys(this._lruList).map(function (k) {\n    return this._lruList.get(k).key\n  }, this)\n}\n\nLRUCache.prototype.values = function () {\n  return reverseKeys(this._lruList).map(function (k) {\n    return this._lruList.get(k).value\n  }, this)\n}\n\nLRUCache.prototype.reset = function () {\n  if (this._dispose && this._cache) {\n    this._cache.forEach(function (entry, key) {\n      this._dispose(key, entry.value)\n    }, this)\n  }\n\n  this._cache = new Map() // hash of items by key\n  this._lruList = new Map() // list of items in order of use recency\n  this._mru = 0 // most recently used\n  this._lru = 0 // least recently used\n  this._length = 0 // number of items in the list\n}\n\nLRUCache.prototype.dump = function () {\n  var arr = []\n  var i = 0\n  var size = this._lruList.size\n  return reverseKeys(this._lruList).map(function (k) {\n    var hit = this._lruList.get(k)\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }\n    }\n  }, this).filter(function (h) {\n    return h\n  })\n}\n\nLRUCache.prototype.dumpLru = function () {\n  return this._lruList\n}\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || this._maxAge\n\n  var now = maxAge ? Date.now() : 0\n  var len = this._lengthCalculator(value, key)\n\n  if (this._cache.has(key)) {\n    if (len > this._max) {\n      del(this, this._cache.get(key))\n      return false\n    }\n\n    var item = this._cache.get(key)\n\n    // dispose of the old one before overwriting\n    if (this._dispose)\n      this._dispose(key, item.value)\n\n    item.now = now\n    item.maxAge = maxAge\n    item.value = value\n    this._length += (len - item.length)\n    item.length = len\n    this.get(key)\n\n    if (this._length > this._max)\n      trim(this)\n\n    return true\n  }\n\n  var hit = new Entry(key, value, this._mru, len, now, maxAge)\n  incMru(this)\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > this._max) {\n    if (this._dispose) this._dispose(key, value)\n    return false\n  }\n\n  this._length += hit.length\n  this._cache.set(key, hit)\n  this._lruList.set(hit.lu, hit)\n\n  if (this._length > this._max)\n    trim(this)\n\n  return true\n}\n\nLRUCache.prototype.has = function (key) {\n  if (!this._cache.has(key)) return false\n  var hit = this._cache.get(key)\n  if (isStale(this, hit)) {\n    return false\n  }\n  return true\n}\n\nLRUCache.prototype.get = function (key) {\n  return get(this, key, true)\n}\n\nLRUCache.prototype.peek = function (key) {\n  return get(this, key, false)\n}\n\nLRUCache.prototype.pop = function () {\n  var hit = this._lruList.get(this._lru)\n  del(this, hit)\n  return hit || null\n}\n\nLRUCache.prototype.del = function (key) {\n  del(this, this._cache.get(key))\n}\n\nLRUCache.prototype.load = function (arr) {\n  //reset the cache\n  this.reset();\n\n  var now = Date.now()\n  // A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l]\n    var expiresAt = hit.e || 0\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v)\n    } else {\n      var maxAge = expiresAt - now\n      // dont add already expired items\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge)\n      }\n    }\n  }\n}\n\nfunction get (self, key, doUse) {\n  var hit = self._cache.get(key)\n  if (hit) {\n    if (isStale(self, hit)) {\n      del(self, hit)\n      if (!self._allowStale) hit = undefined\n    } else {\n      if (doUse) use(self, hit)\n    }\n    if (hit) hit = hit.value\n  }\n  return hit\n}\n\nfunction isStale(self, hit) {\n  if (!hit || (!hit.maxAge && !self._maxAge)) return false\n  var stale = false;\n  var diff = Date.now() - hit.now\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge\n  } else {\n    stale = self._maxAge && (diff > self._maxAge)\n  }\n  return stale;\n}\n\nfunction use (self, hit) {\n  shiftLU(self, hit)\n  hit.lu = self._mru\n  incMru(self)\n  self._lruList.set(hit.lu, hit)\n}\n\nfunction trim (self) {\n  if (self._length > self._max) {\n    var keys = reverseKeys(self._lruList)\n    for (var k = keys.length - 1; self._length > self._max; k--) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      self._lru = keys[k - 1]\n      del(self, self._lruList.get(keys[k]))\n    }\n  }\n}\n\nfunction shiftLU (self, hit) {\n  self._lruList.delete(hit.lu)\n  if (hit.lu === self._lru)\n    self._lru = reverseKeys(self._lruList).pop()\n}\n\nfunction del (self, hit) {\n  if (hit) {\n    if (self._dispose) self._dispose(hit.key, hit.value)\n    self._length -= hit.length\n    self._cache.delete(hit.key)\n    shiftLU(self, hit)\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, lu, length, now, maxAge) {\n  this.key = key\n  this.value = value\n  this.lu = lu\n  this.length = length\n  this.now = now\n  if (maxAge) this.maxAge = maxAge\n}\n\n\n// Incrementers and decrementers that loop at MAX_SAFE_INTEGER\n// only relevant for the lu, lru, and mru counters, since they\n// get touched a lot and can get very large. Also, since they\n// only go upwards, and the sets will tend to be much smaller than\n// the max, we can very well assume that a very small number comes\n// after a very large number, rather than before it.\nvar maxSafeInt = Number.MAX_SAFE_INTEGER || 9007199254740991\nfunction intInc (number) {\n  return (number === maxSafeInt) ? 0 : number + 1\n}\nfunction incMru (self) {\n  do {\n    self._mru = intInc(self._mru)\n  } while (self._lruList.has(self._mru))\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,QAAjB,C,CAEA;AACA;;AACA,IAAIC,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AAEA,SAASC,WAAT,GAAwB;EAAE,OAAO,CAAP;AAAU;;AAEpC,SAASH,QAAT,CAAmBI,OAAnB,EAA4B;EAC1B,IAAI,EAAE,gBAAgBJ,QAAlB,CAAJ,EACE,OAAO,IAAIA,QAAJ,CAAaI,OAAb,CAAP;EAEF,IAAI,OAAOA,OAAP,KAAmB,QAAvB,EACEA,OAAO,GAAG;IAAEC,GAAG,EAAED;EAAP,CAAV;EAEF,IAAI,CAACA,OAAL,EACEA,OAAO,GAAG,EAAV;EAEF,KAAKE,IAAL,GAAYF,OAAO,CAACC,GAApB,CAV0B,CAW1B;;EACA,IAAI,CAAC,KAAKC,IAAN,IAAc,EAAE,OAAO,KAAKA,IAAZ,KAAqB,QAAvB,CAAd,IAAkD,KAAKA,IAAL,IAAa,CAAnE,EACE,KAAKA,IAAL,GAAYC,QAAZ;EAEF,KAAKC,iBAAL,GAAyBJ,OAAO,CAACK,MAAR,IAAkBN,WAA3C;EACA,IAAI,OAAO,KAAKK,iBAAZ,KAAkC,UAAtC,EACE,KAAKA,iBAAL,GAAyBL,WAAzB;EAEF,KAAKO,WAAL,GAAmBN,OAAO,CAACO,KAAR,IAAiB,KAApC;EACA,KAAKC,OAAL,GAAeR,OAAO,CAACS,MAAR,IAAkB,IAAjC;EACA,KAAKC,QAAL,GAAgBV,OAAO,CAACW,OAAxB;EACA,KAAKC,KAAL;AACD,C,CAED;;;AACAC,MAAM,CAACC,cAAP,CAAsBlB,QAAQ,CAACmB,SAA/B,EAA0C,KAA1C,EACE;EAAEC,GAAG,EAAG,UAAUC,EAAV,EAAc;IAClB,IAAI,CAACA,EAAD,IAAO,EAAE,OAAOA,EAAP,KAAc,QAAhB,CAAP,IAAoCA,EAAE,IAAI,CAA9C,EAAkDA,EAAE,GAAGd,QAAL;IAClD,KAAKD,IAAL,GAAYe,EAAZ;IACA,IAAI,KAAKC,OAAL,GAAe,KAAKhB,IAAxB,EAA8BiB,IAAI,CAAC,IAAD,CAAJ;EAC/B,CAJH;EAKEC,GAAG,EAAG,YAAY;IAAE,OAAO,KAAKlB,IAAZ;EAAkB,CALxC;EAMEmB,UAAU,EAAG;AANf,CADF,E,CAUA;;AACAR,MAAM,CAACC,cAAP,CAAsBlB,QAAQ,CAACmB,SAA/B,EAA0C,kBAA1C,EACE;EAAEC,GAAG,EAAG,UAAUM,EAAV,EAAc;IAClB,IAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;MAC5B,KAAKlB,iBAAL,GAAyBL,WAAzB;MACA,KAAKmB,OAAL,GAAe,KAAKK,QAAL,CAAcC,IAA7B;;MACA,KAAKC,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;QACxCD,KAAK,CAACtB,MAAN,GAAe,CAAf;MACD,CAFD;IAGD,CAND,MAMO;MACL,KAAKD,iBAAL,GAAyBkB,EAAzB;MACA,KAAKJ,OAAL,GAAe,CAAf;;MACA,KAAKO,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;QACxCD,KAAK,CAACtB,MAAN,GAAe,KAAKD,iBAAL,CAAuBuB,KAAK,CAACA,KAA7B,EAAoCC,GAApC,CAAf;QACA,KAAKV,OAAL,IAAgBS,KAAK,CAACtB,MAAtB;MACD,CAHD,EAGG,IAHH;IAID;;IAED,IAAI,KAAKa,OAAL,GAAe,KAAKhB,IAAxB,EAA8BiB,IAAI,CAAC,IAAD,CAAJ;EAC/B,CAjBH;EAkBEC,GAAG,EAAG,YAAY;IAAE,OAAO,KAAKhB,iBAAZ;EAA+B,CAlBrD;EAmBEiB,UAAU,EAAG;AAnBf,CADF;AAuBAR,MAAM,CAACC,cAAP,CAAsBlB,QAAQ,CAACmB,SAA/B,EAA0C,QAA1C,EACE;EAAEK,GAAG,EAAG,YAAY;IAAE,OAAO,KAAKF,OAAZ;EAAqB,CAA3C;EACEG,UAAU,EAAG;AADf,CADF;AAKAR,MAAM,CAACC,cAAP,CAAsBlB,QAAQ,CAACmB,SAA/B,EAA0C,WAA1C,EACE;EAAEK,GAAG,EAAG,YAAY;IAAE,OAAO,KAAKG,QAAL,CAAcC,IAArB;EAA2B,CAAjD;EACEH,UAAU,EAAG;AADf,CADF;;AAKA,SAASQ,WAAT,CAAsBC,GAAtB,EAA2B;EACzB;EACA;EACA;EACA,IAAIC,SAAS,GAAGD,GAAG,CAACN,IAApB;EACA,IAAIQ,IAAI,GAAG,IAAIC,KAAJ,CAAUF,SAAV,CAAX;EACA,IAAIG,CAAC,GAAGH,SAAR;EACAD,GAAG,CAACJ,OAAJ,CAAY,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;IAChCI,IAAI,CAAC,EAAEE,CAAH,CAAJ,GAAYN,GAAZ;EACD,CAFD;EAIA,OAAOI,IAAP;AACD;;AAEDpC,QAAQ,CAACmB,SAAT,CAAmBoB,QAAnB,GAA8B,UAAUC,EAAV,EAAcC,KAAd,EAAqB;EACjDA,KAAK,GAAGA,KAAK,IAAI,IAAjB;;EACA,KAAKd,QAAL,CAAcG,OAAd,CAAsB,UAAUY,GAAV,EAAe;IACnCC,WAAW,CAAC,IAAD,EAAOH,EAAP,EAAWE,GAAX,EAAgBD,KAAhB,CAAX;EACD,CAFD,EAEG,IAFH;AAGD,CALD;;AAOA,SAASE,WAAT,CAAsBC,IAAtB,EAA4BJ,EAA5B,EAAgCE,GAAhC,EAAqCD,KAArC,EAA4C;EAC1C,IAAII,OAAO,CAACD,IAAD,EAAOF,GAAP,CAAX,EAAwB;IACtBI,GAAG,CAACF,IAAD,EAAOF,GAAP,CAAH;;IACA,IAAI,CAACE,IAAI,CAAClC,WAAV,EAAuB;MACrBgC,GAAG,GAAGK,SAAN;IACD;EACF;;EACD,IAAIL,GAAJ,EAAS;IACPF,EAAE,CAACQ,IAAH,CAAQP,KAAR,EAAeC,GAAG,CAACX,KAAnB,EAA0BW,GAAG,CAACV,GAA9B,EAAmCY,IAAnC;EACD;AACF;;AAGD5C,QAAQ,CAACmB,SAAT,CAAmBW,OAAnB,GAA6B,UAAUU,EAAV,EAAcC,KAAd,EAAqB;EAChDA,KAAK,GAAGA,KAAK,IAAI,IAAjB;EAEA,IAAIL,IAAI,GAAGH,WAAW,CAAC,KAAKN,QAAN,CAAtB;;EACA,KAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,IAAI,CAAC3B,MAAzB,EAAiCwC,CAAC,EAAlC,EAAsC;IACpC,IAAIP,GAAG,GAAG,KAAKf,QAAL,CAAcH,GAAd,CAAkBY,IAAI,CAACa,CAAD,CAAtB,CAAV;;IACAN,WAAW,CAAC,IAAD,EAAOH,EAAP,EAAWE,GAAX,EAAgBD,KAAhB,CAAX;EACD;AACF,CARD;;AAUAzC,QAAQ,CAACmB,SAAT,CAAmBiB,IAAnB,GAA0B,YAAY;EACpC,OAAOH,WAAW,CAAC,KAAKN,QAAN,CAAX,CAA2BO,GAA3B,CAA+B,UAAUe,CAAV,EAAa;IACjD,OAAO,KAAKtB,QAAL,CAAcH,GAAd,CAAkByB,CAAlB,EAAqBjB,GAA5B;EACD,CAFM,EAEJ,IAFI,CAAP;AAGD,CAJD;;AAMAhC,QAAQ,CAACmB,SAAT,CAAmB+B,MAAnB,GAA4B,YAAY;EACtC,OAAOjB,WAAW,CAAC,KAAKN,QAAN,CAAX,CAA2BO,GAA3B,CAA+B,UAAUe,CAAV,EAAa;IACjD,OAAO,KAAKtB,QAAL,CAAcH,GAAd,CAAkByB,CAAlB,EAAqBlB,KAA5B;EACD,CAFM,EAEJ,IAFI,CAAP;AAGD,CAJD;;AAMA/B,QAAQ,CAACmB,SAAT,CAAmBH,KAAnB,GAA2B,YAAY;EACrC,IAAI,KAAKF,QAAL,IAAiB,KAAKe,MAA1B,EAAkC;IAChC,KAAKA,MAAL,CAAYC,OAAZ,CAAoB,UAAUqB,KAAV,EAAiBnB,GAAjB,EAAsB;MACxC,KAAKlB,QAAL,CAAckB,GAAd,EAAmBmB,KAAK,CAACpB,KAAzB;IACD,CAFD,EAEG,IAFH;EAGD;;EAED,KAAKF,MAAL,GAAc,IAAI5B,GAAJ,EAAd,CAPqC,CAOb;;EACxB,KAAK0B,QAAL,GAAgB,IAAI1B,GAAJ,EAAhB,CARqC,CAQX;;EAC1B,KAAKmD,IAAL,GAAY,CAAZ,CATqC,CASvB;;EACd,KAAKC,IAAL,GAAY,CAAZ,CAVqC,CAUvB;;EACd,KAAK/B,OAAL,GAAe,CAAf,CAXqC,CAWpB;AAClB,CAZD;;AAcAtB,QAAQ,CAACmB,SAAT,CAAmBmC,IAAnB,GAA0B,YAAY;EACpC,IAAIC,GAAG,GAAG,EAAV;EACA,IAAIjB,CAAC,GAAG,CAAR;EACA,IAAIV,IAAI,GAAG,KAAKD,QAAL,CAAcC,IAAzB;EACA,OAAOK,WAAW,CAAC,KAAKN,QAAN,CAAX,CAA2BO,GAA3B,CAA+B,UAAUe,CAAV,EAAa;IACjD,IAAIP,GAAG,GAAG,KAAKf,QAAL,CAAcH,GAAd,CAAkByB,CAAlB,CAAV;;IACA,IAAI,CAACJ,OAAO,CAAC,IAAD,EAAOH,GAAP,CAAZ,EAAyB;MACvB,OAAO;QACLO,CAAC,EAAEP,GAAG,CAACV,GADF;QAELwB,CAAC,EAAEd,GAAG,CAACX,KAFF;QAGL0B,CAAC,EAAEf,GAAG,CAACgB,GAAJ,IAAWhB,GAAG,CAAC7B,MAAJ,IAAc,CAAzB;MAHE,CAAP;IAKD;EACF,CATM,EASJ,IATI,EASE8C,MATF,CASS,UAAUC,CAAV,EAAa;IAC3B,OAAOA,CAAP;EACD,CAXM,CAAP;AAYD,CAhBD;;AAkBA5D,QAAQ,CAACmB,SAAT,CAAmB0C,OAAnB,GAA6B,YAAY;EACvC,OAAO,KAAKlC,QAAZ;AACD,CAFD;;AAIA3B,QAAQ,CAACmB,SAAT,CAAmBC,GAAnB,GAAyB,UAAUY,GAAV,EAAeD,KAAf,EAAsBlB,MAAtB,EAA8B;EACrDA,MAAM,GAAGA,MAAM,IAAI,KAAKD,OAAxB;EAEA,IAAI8C,GAAG,GAAG7C,MAAM,GAAGiD,IAAI,CAACJ,GAAL,EAAH,GAAgB,CAAhC;;EACA,IAAIK,GAAG,GAAG,KAAKvD,iBAAL,CAAuBuB,KAAvB,EAA8BC,GAA9B,CAAV;;EAEA,IAAI,KAAKH,MAAL,CAAYmC,GAAZ,CAAgBhC,GAAhB,CAAJ,EAA0B;IACxB,IAAI+B,GAAG,GAAG,KAAKzD,IAAf,EAAqB;MACnBwC,GAAG,CAAC,IAAD,EAAO,KAAKjB,MAAL,CAAYL,GAAZ,CAAgBQ,GAAhB,CAAP,CAAH;MACA,OAAO,KAAP;IACD;;IAED,IAAIiC,IAAI,GAAG,KAAKpC,MAAL,CAAYL,GAAZ,CAAgBQ,GAAhB,CAAX,CANwB,CAQxB;;;IACA,IAAI,KAAKlB,QAAT,EACE,KAAKA,QAAL,CAAckB,GAAd,EAAmBiC,IAAI,CAAClC,KAAxB;IAEFkC,IAAI,CAACP,GAAL,GAAWA,GAAX;IACAO,IAAI,CAACpD,MAAL,GAAcA,MAAd;IACAoD,IAAI,CAAClC,KAAL,GAAaA,KAAb;IACA,KAAKT,OAAL,IAAiByC,GAAG,GAAGE,IAAI,CAACxD,MAA5B;IACAwD,IAAI,CAACxD,MAAL,GAAcsD,GAAd;IACA,KAAKvC,GAAL,CAASQ,GAAT;IAEA,IAAI,KAAKV,OAAL,GAAe,KAAKhB,IAAxB,EACEiB,IAAI,CAAC,IAAD,CAAJ;IAEF,OAAO,IAAP;EACD;;EAED,IAAImB,GAAG,GAAG,IAAIwB,KAAJ,CAAUlC,GAAV,EAAeD,KAAf,EAAsB,KAAKqB,IAA3B,EAAiCW,GAAjC,EAAsCL,GAAtC,EAA2C7C,MAA3C,CAAV;EACAsD,MAAM,CAAC,IAAD,CAAN,CAhCqD,CAkCrD;;EACA,IAAIzB,GAAG,CAACjC,MAAJ,GAAa,KAAKH,IAAtB,EAA4B;IAC1B,IAAI,KAAKQ,QAAT,EAAmB,KAAKA,QAAL,CAAckB,GAAd,EAAmBD,KAAnB;IACnB,OAAO,KAAP;EACD;;EAED,KAAKT,OAAL,IAAgBoB,GAAG,CAACjC,MAApB;;EACA,KAAKoB,MAAL,CAAYT,GAAZ,CAAgBY,GAAhB,EAAqBU,GAArB;;EACA,KAAKf,QAAL,CAAcP,GAAd,CAAkBsB,GAAG,CAAC0B,EAAtB,EAA0B1B,GAA1B;;EAEA,IAAI,KAAKpB,OAAL,GAAe,KAAKhB,IAAxB,EACEiB,IAAI,CAAC,IAAD,CAAJ;EAEF,OAAO,IAAP;AACD,CAhDD;;AAkDAvB,QAAQ,CAACmB,SAAT,CAAmB6C,GAAnB,GAAyB,UAAUhC,GAAV,EAAe;EACtC,IAAI,CAAC,KAAKH,MAAL,CAAYmC,GAAZ,CAAgBhC,GAAhB,CAAL,EAA2B,OAAO,KAAP;;EAC3B,IAAIU,GAAG,GAAG,KAAKb,MAAL,CAAYL,GAAZ,CAAgBQ,GAAhB,CAAV;;EACA,IAAIa,OAAO,CAAC,IAAD,EAAOH,GAAP,CAAX,EAAwB;IACtB,OAAO,KAAP;EACD;;EACD,OAAO,IAAP;AACD,CAPD;;AASA1C,QAAQ,CAACmB,SAAT,CAAmBK,GAAnB,GAAyB,UAAUQ,GAAV,EAAe;EACtC,OAAOR,GAAG,CAAC,IAAD,EAAOQ,GAAP,EAAY,IAAZ,CAAV;AACD,CAFD;;AAIAhC,QAAQ,CAACmB,SAAT,CAAmBkD,IAAnB,GAA0B,UAAUrC,GAAV,EAAe;EACvC,OAAOR,GAAG,CAAC,IAAD,EAAOQ,GAAP,EAAY,KAAZ,CAAV;AACD,CAFD;;AAIAhC,QAAQ,CAACmB,SAAT,CAAmBmD,GAAnB,GAAyB,YAAY;EACnC,IAAI5B,GAAG,GAAG,KAAKf,QAAL,CAAcH,GAAd,CAAkB,KAAK6B,IAAvB,CAAV;;EACAP,GAAG,CAAC,IAAD,EAAOJ,GAAP,CAAH;EACA,OAAOA,GAAG,IAAI,IAAd;AACD,CAJD;;AAMA1C,QAAQ,CAACmB,SAAT,CAAmB2B,GAAnB,GAAyB,UAAUd,GAAV,EAAe;EACtCc,GAAG,CAAC,IAAD,EAAO,KAAKjB,MAAL,CAAYL,GAAZ,CAAgBQ,GAAhB,CAAP,CAAH;AACD,CAFD;;AAIAhC,QAAQ,CAACmB,SAAT,CAAmBoD,IAAnB,GAA0B,UAAUhB,GAAV,EAAe;EACvC;EACA,KAAKvC,KAAL;EAEA,IAAI0C,GAAG,GAAGI,IAAI,CAACJ,GAAL,EAAV,CAJuC,CAKvC;;EACA,KAAK,IAAIc,CAAC,GAAGjB,GAAG,CAAC9C,MAAJ,GAAa,CAA1B,EAA6B+D,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;IACxC,IAAI9B,GAAG,GAAGa,GAAG,CAACiB,CAAD,CAAb;IACA,IAAIC,SAAS,GAAG/B,GAAG,CAACe,CAAJ,IAAS,CAAzB;;IACA,IAAIgB,SAAS,KAAK,CAAlB,EAAqB;MACnB;MACA,KAAKrD,GAAL,CAASsB,GAAG,CAACO,CAAb,EAAgBP,GAAG,CAACc,CAApB;IACD,CAHD,MAGO;MACL,IAAI3C,MAAM,GAAG4D,SAAS,GAAGf,GAAzB,CADK,CAEL;;MACA,IAAI7C,MAAM,GAAG,CAAb,EAAgB;QACd,KAAKO,GAAL,CAASsB,GAAG,CAACO,CAAb,EAAgBP,GAAG,CAACc,CAApB,EAAuB3C,MAAvB;MACD;IACF;EACF;AACF,CApBD;;AAsBA,SAASW,GAAT,CAAcoB,IAAd,EAAoBZ,GAApB,EAAyB0C,KAAzB,EAAgC;EAC9B,IAAIhC,GAAG,GAAGE,IAAI,CAACf,MAAL,CAAYL,GAAZ,CAAgBQ,GAAhB,CAAV;;EACA,IAAIU,GAAJ,EAAS;IACP,IAAIG,OAAO,CAACD,IAAD,EAAOF,GAAP,CAAX,EAAwB;MACtBI,GAAG,CAACF,IAAD,EAAOF,GAAP,CAAH;MACA,IAAI,CAACE,IAAI,CAAClC,WAAV,EAAuBgC,GAAG,GAAGK,SAAN;IACxB,CAHD,MAGO;MACL,IAAI2B,KAAJ,EAAWC,GAAG,CAAC/B,IAAD,EAAOF,GAAP,CAAH;IACZ;;IACD,IAAIA,GAAJ,EAASA,GAAG,GAAGA,GAAG,CAACX,KAAV;EACV;;EACD,OAAOW,GAAP;AACD;;AAED,SAASG,OAAT,CAAiBD,IAAjB,EAAuBF,GAAvB,EAA4B;EAC1B,IAAI,CAACA,GAAD,IAAS,CAACA,GAAG,CAAC7B,MAAL,IAAe,CAAC+B,IAAI,CAAChC,OAAlC,EAA4C,OAAO,KAAP;EAC5C,IAAID,KAAK,GAAG,KAAZ;EACA,IAAIiE,IAAI,GAAGd,IAAI,CAACJ,GAAL,KAAahB,GAAG,CAACgB,GAA5B;;EACA,IAAIhB,GAAG,CAAC7B,MAAR,EAAgB;IACdF,KAAK,GAAGiE,IAAI,GAAGlC,GAAG,CAAC7B,MAAnB;EACD,CAFD,MAEO;IACLF,KAAK,GAAGiC,IAAI,CAAChC,OAAL,IAAiBgE,IAAI,GAAGhC,IAAI,CAAChC,OAArC;EACD;;EACD,OAAOD,KAAP;AACD;;AAED,SAASgE,GAAT,CAAc/B,IAAd,EAAoBF,GAApB,EAAyB;EACvBmC,OAAO,CAACjC,IAAD,EAAOF,GAAP,CAAP;EACAA,GAAG,CAAC0B,EAAJ,GAASxB,IAAI,CAACQ,IAAd;EACAe,MAAM,CAACvB,IAAD,CAAN;;EACAA,IAAI,CAACjB,QAAL,CAAcP,GAAd,CAAkBsB,GAAG,CAAC0B,EAAtB,EAA0B1B,GAA1B;AACD;;AAED,SAASnB,IAAT,CAAeqB,IAAf,EAAqB;EACnB,IAAIA,IAAI,CAACtB,OAAL,GAAesB,IAAI,CAACtC,IAAxB,EAA8B;IAC5B,IAAI8B,IAAI,GAAGH,WAAW,CAACW,IAAI,CAACjB,QAAN,CAAtB;;IACA,KAAK,IAAIsB,CAAC,GAAGb,IAAI,CAAC3B,MAAL,GAAc,CAA3B,EAA8BmC,IAAI,CAACtB,OAAL,GAAesB,IAAI,CAACtC,IAAlD,EAAwD2C,CAAC,EAAzD,EAA6D;MAC3D;MACA;MACA;MACAL,IAAI,CAACS,IAAL,GAAYjB,IAAI,CAACa,CAAC,GAAG,CAAL,CAAhB;MACAH,GAAG,CAACF,IAAD,EAAOA,IAAI,CAACjB,QAAL,CAAcH,GAAd,CAAkBY,IAAI,CAACa,CAAD,CAAtB,CAAP,CAAH;IACD;EACF;AACF;;AAED,SAAS4B,OAAT,CAAkBjC,IAAlB,EAAwBF,GAAxB,EAA6B;EAC3BE,IAAI,CAACjB,QAAL,CAAcmD,MAAd,CAAqBpC,GAAG,CAAC0B,EAAzB;;EACA,IAAI1B,GAAG,CAAC0B,EAAJ,KAAWxB,IAAI,CAACS,IAApB,EACET,IAAI,CAACS,IAAL,GAAYpB,WAAW,CAACW,IAAI,CAACjB,QAAN,CAAX,CAA2B2C,GAA3B,EAAZ;AACH;;AAED,SAASxB,GAAT,CAAcF,IAAd,EAAoBF,GAApB,EAAyB;EACvB,IAAIA,GAAJ,EAAS;IACP,IAAIE,IAAI,CAAC9B,QAAT,EAAmB8B,IAAI,CAAC9B,QAAL,CAAc4B,GAAG,CAACV,GAAlB,EAAuBU,GAAG,CAACX,KAA3B;IACnBa,IAAI,CAACtB,OAAL,IAAgBoB,GAAG,CAACjC,MAApB;;IACAmC,IAAI,CAACf,MAAL,CAAYiD,MAAZ,CAAmBpC,GAAG,CAACV,GAAvB;;IACA6C,OAAO,CAACjC,IAAD,EAAOF,GAAP,CAAP;EACD;AACF,C,CAED;;;AACA,SAASwB,KAAT,CAAgBlC,GAAhB,EAAqBD,KAArB,EAA4BqC,EAA5B,EAAgC3D,MAAhC,EAAwCiD,GAAxC,EAA6C7C,MAA7C,EAAqD;EACnD,KAAKmB,GAAL,GAAWA,GAAX;EACA,KAAKD,KAAL,GAAaA,KAAb;EACA,KAAKqC,EAAL,GAAUA,EAAV;EACA,KAAK3D,MAAL,GAAcA,MAAd;EACA,KAAKiD,GAAL,GAAWA,GAAX;EACA,IAAI7C,MAAJ,EAAY,KAAKA,MAAL,GAAcA,MAAd;AACb,C,CAGD;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIkE,UAAU,GAAGC,MAAM,CAACC,gBAAP,IAA2B,gBAA5C;;AACA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;EACvB,OAAQA,MAAM,KAAKJ,UAAZ,GAA0B,CAA1B,GAA8BI,MAAM,GAAG,CAA9C;AACD;;AACD,SAAShB,MAAT,CAAiBvB,IAAjB,EAAuB;EACrB,GAAG;IACDA,IAAI,CAACQ,IAAL,GAAY8B,MAAM,CAACtC,IAAI,CAACQ,IAAN,CAAlB;EACD,CAFD,QAESR,IAAI,CAACjB,QAAL,CAAcqC,GAAd,CAAkBpB,IAAI,CAACQ,IAAvB,CAFT;AAGD"},"metadata":{},"sourceType":"script"}