{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\Reel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, forwardRef } from \"react\";\nimport Constants from \"../Constants\";\nimport { motion } from 'framer-motion';\nimport Symbol from \"./Symbol\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet offset = 0;\n\nconst Reel = props => {\n  _s();\n\n  //42 symbols\n  //  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPKKQQAAG\";\n  //const symbols = \"DDDGNNSS\";\n  let reels = [];\n  const symbols = Constants.REEL_SYMBOLS;\n  let reelSymbols = [];\n  let symbolRef = useRef();\n  let randomNr = 3;\n  let reelIdx = [];\n  let reelImg = [];\n\n  const randomBetween = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const generatedSymbols = randomNr => {\n    //   for(let i=0; i<3;i++){\n    //       element=(symbols[props.index])[(randomNr/246)+i];\n    //       reelIdx.push(element);\n    //   }\n    let elementPos = -(randomNr / 246);\n\n    for (let i = 0; i < 3; i++) {\n      reelIdx.push(elementPos + i);\n      reelImg.push(reelSymbols[elementPos + i]);\n    }\n  };\n\n  const getRandomNr = () => {\n    if (props.game > 0) {\n      randomNr = -(randomBetween((Constants.REELS_REPEAT - 2) * symbols[props.index].length, (Constants.REELS_REPEAT - 8) * symbols[props.index].length) * 246);\n    }\n\n    if (offset === randomNr) {\n      console.log(\"myOffset is:\" + offset + \" ,my randomNr is:\" + randomNr); //  getRandomNr();\n    } else {\n      console.log(\"Offset===random===\" + offset);\n      offset = randomNr;\n    }\n\n    console.log(\"randomNr = \" + randomNr);\n    generatedSymbols(randomNr);\n  };\n\n  if (props.gameOn === 0) {\n    reelSymbols = symbols[props.index].split(\"\");\n  } else if (props.gameOn > 0) {\n    reelSymbols = symbols[props.index].repeat(Constants.REELS_REPEAT).split(\"\");\n    getRandomNr();\n  } // console.log(\"My number is: \"+(-(props.gameOn/242)));\n  // console.log(\"Returning selected Symbol:\"+reelSymbols[(-(props.gameOn/242))]);\n  // console.log(\"Returning selected Symbol:\"+reelSymbols[(-(props.gameOn/242))+1]);\n  // console.log(\"Returning selected Symbol:\"+reelSymbols[(-(props.gameOn/242))+2]);\n  // let getReels=\"\";\n\n\n  const createReels = () => {\n    reels = reelSymbols.map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(Symbol, {\n        symbol: el,\n        index: idx,\n        spin: props.game\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: reels\n    }, void 0, false);\n  };\n\n  const variants = {\n    opacity: {\n      opacity: 1\n    },\n    spin: {\n      y: offset,\n      opacity: 1,\n      transition: {\n        duration: 3,\n        delay: props.index * 0.8\n      }\n    },\n    exit: {\n      opacity: 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"reel\",\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      variants: variants,\n      opacity: \"initial\",\n      animate: \"spin\",\n      className: \"icons\",\n      ref: symbolRef,\n      children: createReels()\n    }, props.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Reel, \"SVG1Qsv9Em9ohUZXB9wFtTybL7Y=\");\n\n_c = Reel;\nexport default Reel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reel\");","map":{"version":3,"names":["React","useState","useRef","useEffect","forwardRef","Constants","motion","Symbol","offset","Reel","props","reels","symbols","REEL_SYMBOLS","reelSymbols","symbolRef","randomNr","reelIdx","reelImg","randomBetween","min","max","Math","floor","random","generatedSymbols","elementPos","i","push","getRandomNr","game","REELS_REPEAT","index","length","console","log","gameOn","split","repeat","createReels","map","el","idx","variants","opacity","spin","y","transition","duration","delay","exit"],"sources":["F:/Games/slotmachinereact/src/components/Reel.js"],"sourcesContent":["import React, { useState, useRef, useEffect, forwardRef } from \"react\";\r\nimport Constants from \"../Constants\";\r\nimport {motion} from 'framer-motion';\r\nimport Symbol from \"./Symbol\";\r\n\r\nlet offset=0;\r\n\r\nconst Reel = (props) => {\r\n  //42 symbols\r\n//  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPKKQQAAG\";\r\n//const symbols = \"DDDGNNSS\";\r\n let reels = [];\r\n  const symbols = Constants.REEL_SYMBOLS;\r\n  let reelSymbols = [];\r\n  let symbolRef = useRef();\r\n  let randomNr= 3;\r\n  let reelIdx=[];\r\n  let reelImg= [];\r\n\r\n  const randomBetween = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  const generatedSymbols =(randomNr)=>{\r\n    //   for(let i=0; i<3;i++){\r\n    //       element=(symbols[props.index])[(randomNr/246)+i];\r\n    //       reelIdx.push(element);\r\n    //   }\r\n       let elementPos=-(randomNr/246);\r\n\r\n       for(let i=0; i<3;i++){\r\n        reelIdx.push(elementPos+i);\r\n        reelImg.push(reelSymbols[elementPos+i]);\r\n       }\r\n     }\r\n\r\n  const getRandomNr = () => {\r\n    if (props.game > 0) {\r\n    randomNr = -(randomBetween(\r\n        (Constants.REELS_REPEAT - 2) * symbols[props.index].length,\r\n        (Constants.REELS_REPEAT - 8) * symbols[props.index].length\r\n      ) * 246);\r\n     \r\n    }\r\n\r\n    if(offset===randomNr){\r\n      console.log(\"myOffset is:\"+offset+\" ,my randomNr is:\"+randomNr);\r\n      //  getRandomNr();\r\n    }\r\n   else{\r\n        console.log(\"Offset===random===\"+offset);\r\n        offset=randomNr;\r\n    }\r\n    console.log(\"randomNr = \"+randomNr);\r\n    generatedSymbols(randomNr);\r\n  };\r\n\r\n  if(props.gameOn===0){\r\n      reelSymbols=symbols[props.index].split(\"\");\r\n  }else if(props.gameOn>0){\r\n    reelSymbols= symbols[props.index].repeat(Constants.REELS_REPEAT).split(\"\");\r\n    getRandomNr();\r\n  }  \r\n  \r\n// console.log(\"My number is: \"+(-(props.gameOn/242)));\r\n// console.log(\"Returning selected Symbol:\"+reelSymbols[(-(props.gameOn/242))]);\r\n// console.log(\"Returning selected Symbol:\"+reelSymbols[(-(props.gameOn/242))+1]);\r\n// console.log(\"Returning selected Symbol:\"+reelSymbols[(-(props.gameOn/242))+2]);\r\n\r\n// let getReels=\"\";\r\nconst createReels = () =>{\r\n  reels=reelSymbols.map((el, idx) => {\r\n      return (\r\n        <Symbol symbol={el} key={idx} index={idx} spin={props.game} />\r\n      );\r\n    })\r\n    return <>{reels}</>\r\n}\r\n\r\nconst variants = {\r\n  opacity:{\r\n      opacity: 1 \r\n  },\r\n  spin: {\r\n     y:offset,\r\n     opacity:1, \r\n     transition:{ \r\n          duration:3, \r\n          delay:props.index * 0.8 \r\n      },\r\n  },\r\n  exit : { opacity: 1 }\r\n};\r\n\r\nreturn (\r\n  <motion.div className=\"reel\" >\r\n    <motion.div key={props.index} variants={variants}  opacity=\"initial\"  animate=\"spin\" className=\"icons\" ref={symbolRef}>\r\n      {createReels()}\r\n    </motion.div>\r\n  </motion.div>\r\n);\r\n};\r\nexport default Reel;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}