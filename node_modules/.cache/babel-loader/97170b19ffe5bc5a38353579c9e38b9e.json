{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deployContract = void 0;\n\nconst ethers_1 = require(\"ethers\");\n\nconst ContractJSON_1 = require(\"./ContractJSON\");\n\nasync function deployContract(wallet, factoryOrContractJson) {\n  let args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let overrideOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if ('abi' in factoryOrContractJson) {\n    return deployFromJson(wallet, factoryOrContractJson, args, overrideOptions);\n  } else {\n    const Factory = factoryOrContractJson;\n    const contractFactory = new Factory(wallet);\n    const contract = await contractFactory.deploy(...args, overrideOptions);\n    await contract.deployed();\n    return contract;\n  }\n}\n\nexports.deployContract = deployContract;\n\nasync function deployFromJson(wallet, contractJson, args, overrideOptions) {\n  const bytecode = ContractJSON_1.isStandard(contractJson) ? contractJson.evm.bytecode : contractJson.bytecode;\n\n  if (!ContractJSON_1.hasByteCode(bytecode)) {\n    throw new Error('Cannot deploy contract with empty bytecode');\n  }\n\n  const factory = new ethers_1.ContractFactory(contractJson.abi, bytecode, wallet);\n  const contract = await factory.deploy(...args, { ...overrideOptions\n  });\n  await contract.deployed();\n  return contract;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","deployContract","ethers_1","require","ContractJSON_1","wallet","factoryOrContractJson","args","overrideOptions","deployFromJson","Factory","contractFactory","contract","deploy","deployed","contractJson","bytecode","isStandard","evm","hasByteCode","Error","factory","ContractFactory","abi"],"sources":["F:/Games/slotmachinereact/node_modules/ethereum-waffle/dist/cjs/deployContract.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deployContract = void 0;\nconst ethers_1 = require(\"ethers\");\nconst ContractJSON_1 = require(\"./ContractJSON\");\nasync function deployContract(wallet, factoryOrContractJson, args = [], overrideOptions = {}) {\n    if ('abi' in factoryOrContractJson) {\n        return deployFromJson(wallet, factoryOrContractJson, args, overrideOptions);\n    }\n    else {\n        const Factory = factoryOrContractJson;\n        const contractFactory = new Factory(wallet);\n        const contract = await contractFactory.deploy(...args, overrideOptions);\n        await contract.deployed();\n        return contract;\n    }\n}\nexports.deployContract = deployContract;\nasync function deployFromJson(wallet, contractJson, args, overrideOptions) {\n    const bytecode = ContractJSON_1.isStandard(contractJson) ? contractJson.evm.bytecode : contractJson.bytecode;\n    if (!ContractJSON_1.hasByteCode(bytecode)) {\n        throw new Error('Cannot deploy contract with empty bytecode');\n    }\n    const factory = new ethers_1.ContractFactory(contractJson.abi, bytecode, wallet);\n    const contract = await factory.deploy(...args, {\n        ...overrideOptions\n    });\n    await contract.deployed();\n    return contract;\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,gBAAD,CAA9B;;AACA,eAAeF,cAAf,CAA8BI,MAA9B,EAAsCC,qBAAtC,EAA8F;EAAA,IAAjCC,IAAiC,uEAA1B,EAA0B;EAAA,IAAtBC,eAAsB,uEAAJ,EAAI;;EAC1F,IAAI,SAASF,qBAAb,EAAoC;IAChC,OAAOG,cAAc,CAACJ,MAAD,EAASC,qBAAT,EAAgCC,IAAhC,EAAsCC,eAAtC,CAArB;EACH,CAFD,MAGK;IACD,MAAME,OAAO,GAAGJ,qBAAhB;IACA,MAAMK,eAAe,GAAG,IAAID,OAAJ,CAAYL,MAAZ,CAAxB;IACA,MAAMO,QAAQ,GAAG,MAAMD,eAAe,CAACE,MAAhB,CAAuB,GAAGN,IAA1B,EAAgCC,eAAhC,CAAvB;IACA,MAAMI,QAAQ,CAACE,QAAT,EAAN;IACA,OAAOF,QAAP;EACH;AACJ;;AACDb,OAAO,CAACE,cAAR,GAAyBA,cAAzB;;AACA,eAAeQ,cAAf,CAA8BJ,MAA9B,EAAsCU,YAAtC,EAAoDR,IAApD,EAA0DC,eAA1D,EAA2E;EACvE,MAAMQ,QAAQ,GAAGZ,cAAc,CAACa,UAAf,CAA0BF,YAA1B,IAA0CA,YAAY,CAACG,GAAb,CAAiBF,QAA3D,GAAsED,YAAY,CAACC,QAApG;;EACA,IAAI,CAACZ,cAAc,CAACe,WAAf,CAA2BH,QAA3B,CAAL,EAA2C;IACvC,MAAM,IAAII,KAAJ,CAAU,4CAAV,CAAN;EACH;;EACD,MAAMC,OAAO,GAAG,IAAInB,QAAQ,CAACoB,eAAb,CAA6BP,YAAY,CAACQ,GAA1C,EAA+CP,QAA/C,EAAyDX,MAAzD,CAAhB;EACA,MAAMO,QAAQ,GAAG,MAAMS,OAAO,CAACR,MAAR,CAAe,GAAGN,IAAlB,EAAwB,EAC3C,GAAGC;EADwC,CAAxB,CAAvB;EAGA,MAAMI,QAAQ,CAACE,QAAT,EAAN;EACA,OAAOF,QAAP;AACH"},"metadata":{},"sourceType":"script"}