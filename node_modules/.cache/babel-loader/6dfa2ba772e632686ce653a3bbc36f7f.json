{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportCalledOnContract = void 0;\n\nconst calledOnContractValidators_1 = require(\"./calledOnContractValidators\");\n\nfunction supportCalledOnContract(Assertion) {\n  Assertion.addMethod('calledOnContract', function (contract) {\n    const fnName = this._obj;\n    calledOnContractValidators_1.validateContract(contract);\n    calledOnContractValidators_1.validateMockProvider(contract.provider);\n\n    if (fnName !== undefined) {\n      calledOnContractValidators_1.validateFnName(fnName, contract);\n    }\n\n    const fnSighash = contract.interface.getSighash(fnName);\n    this.assert(contract.provider.callHistory.some(call => call.address === contract.address && call.data.startsWith(fnSighash)), 'Expected contract function to be called', 'Expected contract function NOT to be called', undefined);\n  });\n}\n\nexports.supportCalledOnContract = supportCalledOnContract;","map":{"version":3,"names":["Object","defineProperty","exports","value","supportCalledOnContract","calledOnContractValidators_1","require","Assertion","addMethod","contract","fnName","_obj","validateContract","validateMockProvider","provider","undefined","validateFnName","fnSighash","interface","getSighash","assert","callHistory","some","call","address","data","startsWith"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/chai/dist/cjs/matchers/calledOnContract/calledOnContract.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.supportCalledOnContract = void 0;\nconst calledOnContractValidators_1 = require(\"./calledOnContractValidators\");\nfunction supportCalledOnContract(Assertion) {\n    Assertion.addMethod('calledOnContract', function (contract) {\n        const fnName = this._obj;\n        calledOnContractValidators_1.validateContract(contract);\n        calledOnContractValidators_1.validateMockProvider(contract.provider);\n        if (fnName !== undefined) {\n            calledOnContractValidators_1.validateFnName(fnName, contract);\n        }\n        const fnSighash = contract.interface.getSighash(fnName);\n        this.assert(contract.provider.callHistory.some(call => call.address === contract.address && call.data.startsWith(fnSighash)), 'Expected contract function to be called', 'Expected contract function NOT to be called', undefined);\n    });\n}\nexports.supportCalledOnContract = supportCalledOnContract;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,uBAAR,GAAkC,KAAK,CAAvC;;AACA,MAAMC,4BAA4B,GAAGC,OAAO,CAAC,8BAAD,CAA5C;;AACA,SAASF,uBAAT,CAAiCG,SAAjC,EAA4C;EACxCA,SAAS,CAACC,SAAV,CAAoB,kBAApB,EAAwC,UAAUC,QAAV,EAAoB;IACxD,MAAMC,MAAM,GAAG,KAAKC,IAApB;IACAN,4BAA4B,CAACO,gBAA7B,CAA8CH,QAA9C;IACAJ,4BAA4B,CAACQ,oBAA7B,CAAkDJ,QAAQ,CAACK,QAA3D;;IACA,IAAIJ,MAAM,KAAKK,SAAf,EAA0B;MACtBV,4BAA4B,CAACW,cAA7B,CAA4CN,MAA5C,EAAoDD,QAApD;IACH;;IACD,MAAMQ,SAAS,GAAGR,QAAQ,CAACS,SAAT,CAAmBC,UAAnB,CAA8BT,MAA9B,CAAlB;IACA,KAAKU,MAAL,CAAYX,QAAQ,CAACK,QAAT,CAAkBO,WAAlB,CAA8BC,IAA9B,CAAmCC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiBf,QAAQ,CAACe,OAA1B,IAAqCD,IAAI,CAACE,IAAL,CAAUC,UAAV,CAAqBT,SAArB,CAAhF,CAAZ,EAA8H,yCAA9H,EAAyK,6CAAzK,EAAwNF,SAAxN;EACH,CATD;AAUH;;AACDb,OAAO,CAACE,uBAAR,GAAkCA,uBAAlC"},"metadata":{},"sourceType":"script"}