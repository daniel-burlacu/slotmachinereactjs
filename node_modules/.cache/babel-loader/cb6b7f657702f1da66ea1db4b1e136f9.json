{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\Mint.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport '../assets/css/App.css';\nimport { ethers } from \"ethers\";\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/abi.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Mint = () => {\n  _s();\n\n  const [mintAmount, setMintAmount] = useState(\"\");\n  const [leftToMint, setLeftToMint] = useState(0);\n  const [contract, setContract] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n\n  const initConnection = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const newSigner = provider.getSigner();\n      setAccount(accounts[0]);\n      setContract(new ethers.Contract(\"0xEE8E55e5BE8fAB0aa31D23eeb0F976baB4C2E557\", PFPRacerNFT.abi, newSigner));\n    } else {\n      console.log(\"Please install metamask\");\n    }\n  };\n\n  const howManyNFTsAreLeft = async () => {\n    let totalNFT = await contract.maxSupply();\n    let mintedNFT = await contract.getBalance(); //to be changed into getNFTBalance\n\n    let nftLeftToMint = totalNFT - mintedNFT;\n    setLeftToMint(nftLeftToMint);\n    console.log(\"Total NFT's left to mint \" + nftLeftToMint);\n  };\n\n  useEffect(() => {\n    initConnection();\n    howManyNFTsAreLeft();\n  }, [account]);\n\n  const handleSubmit = async amount => {\n    howManyNFTsAreLeft();\n    amount.preventDefault();\n    await contract.Mint(amount);\n    howManyNFTsAreLeft();\n    alert(`We have minted ${amount}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"label-mint\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"p-mint\",\n          children: [\"NFT's left to mint: \", leftToMint]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"form-label\",\n        children: [\"Mint Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: mintAmount,\n          onChange: e => setMintAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"form-submit-button\",\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Mint, \"PbsFHDkPmE/XmbyEfZLRiE7i+lM=\");\n\n_c = Mint;\nexport default Mint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mint\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ethers","PFPRacerNFT","Mint","mintAmount","setMintAmount","leftToMint","setLeftToMint","contract","setContract","account","setAccount","initConnection","window","ethereum","accounts","request","method","provider","providers","Web3Provider","newSigner","getSigner","Contract","abi","console","log","howManyNFTsAreLeft","totalNFT","maxSupply","mintedNFT","getBalance","nftLeftToMint","handleSubmit","amount","preventDefault","alert","e","target","value"],"sources":["F:/Games/slotmachinereact/src/components/Mint.js"],"sourcesContent":["import  React, { useEffect, useState, useRef } from \"react\";\r\nimport '../assets/css/App.css';\r\nimport {ethers} from \"ethers\";\r\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/abi.json';\r\n\r\nconst Mint = () =>{\r\n    const [mintAmount, setMintAmount] = useState(\"\");\r\n    const [leftToMint, setLeftToMint] = useState(0);\r\n    const [contract, setContract] = useState(\"\");\r\n    const [account, setAccount] = useState(\"\");\r\n\r\n    const initConnection = async () =>{\r\n        if(typeof window.ethereum !== \"undefined\"){\r\n          const accounts = await window.ethereum.request({\r\n            method: \"eth_requestAccounts\",\r\n          });\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const newSigner = provider.getSigner();\r\n          setAccount(accounts[0]);\r\n          setContract(\r\n            new ethers.Contract(\r\n              \"0xEE8E55e5BE8fAB0aa31D23eeb0F976baB4C2E557\",\r\n              PFPRacerNFT.abi,\r\n              newSigner\r\n            )\r\n          )\r\n        }else{\r\n          console.log(\"Please install metamask\");\r\n        }\r\n      }\r\n\r\n    const howManyNFTsAreLeft = async () =>{\r\n        let totalNFT = await contract.maxSupply();\r\n        let mintedNFT= await  contract.getBalance(); //to be changed into getNFTBalance\r\n        let nftLeftToMint = totalNFT - mintedNFT;\r\n        setLeftToMint(nftLeftToMint);\r\n        console.log(\"Total NFT's left to mint \"+nftLeftToMint);\r\n      }\r\n\r\n    useEffect(()=>{\r\n        initConnection();\r\n        howManyNFTsAreLeft();\r\n      },[account]);\r\n\r\n\r\nconst handleSubmit= async(amount) =>{\r\n    howManyNFTsAreLeft();\r\n    amount.preventDefault();\r\n    await contract.Mint(amount);\r\n    howManyNFTsAreLeft();\r\n    alert(`We have minted ${amount}`)\r\n}\r\n      return (\r\n        <>\r\n        <form class=\"form\" onSubmit={handleSubmit}>\r\n        <label class=\"label-mint\"> \r\n             <p class=\"p-mint\">NFT's left to mint: {leftToMint}</p>\r\n        </label>\r\n          <label class=\"form-label\">\r\n            Mint Amount:\r\n            <input\r\n              type=\"text\"\r\n              value={mintAmount}\r\n              onChange={e => setMintAmount(e.target.value)}\r\n            />\r\n          </label>\r\n          <input class=\"form-submit-button\" type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n        </>\r\n    \r\n      );\r\n}\r\n\r\n\r\n\r\nexport default Mint;"],"mappings":"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"},"metadata":{},"sourceType":"module"}