{"ast":null,"code":"const EventEmitter = require('events').EventEmitter;\n\nconst FilterSubprovider = require('./filters.js');\n\nconst from = require('../util/rpc-hex-encoding.js');\n\nconst inherits = require('util').inherits;\n\nconst utils = require('ethereumjs-util');\n\nfunction SubscriptionSubprovider(opts) {\n  const self = this;\n  opts = opts || {};\n  EventEmitter.apply(this, Array.prototype.slice.call(arguments));\n  FilterSubprovider.apply(this, [opts]);\n  this.subscriptions = {};\n}\n\ninherits(SubscriptionSubprovider, FilterSubprovider); // a cheap crack at multiple inheritance\n// I don't really care if `instanceof EventEmitter` passes...\n\nObject.assign(SubscriptionSubprovider.prototype, EventEmitter.prototype); // preserve our constructor, though\n\nSubscriptionSubprovider.prototype.constructor = SubscriptionSubprovider;\n\nSubscriptionSubprovider.prototype.eth_subscribe = function (payload, cb) {\n  const self = this;\n\n  let createSubscriptionFilter = () => {};\n\n  let subscriptionType = payload.params[0];\n\n  switch (subscriptionType) {\n    case 'logs':\n      ;\n\n      (function () {\n        let options = payload.params[1];\n        createSubscriptionFilter = self.newLogFilter.bind(self, options);\n      })();\n\n      break;\n\n    case 'newPendingTransactions':\n      createSubscriptionFilter = self.newPendingTransactionFilter.bind(self);\n      break;\n\n    case 'newHeads':\n      createSubscriptionFilter = self.newBlockFilter.bind(self);\n      break;\n\n    case 'syncing':\n    default:\n      cb(new Error('unsupported subscription type'));\n      return;\n  }\n\n  createSubscriptionFilter(function (err, hexId) {\n    if (err) return cb(err);\n    const id = Number.parseInt(hexId, 16);\n    self.subscriptions[id] = subscriptionType;\n    self.filters[id].on('data', function (results) {\n      if (!Array.isArray(results)) {\n        results = [results];\n      }\n\n      var notificationHandler = self._notificationHandler.bind(self, hexId, subscriptionType);\n\n      results.forEach(notificationHandler);\n      self.filters[id].clearChanges();\n    });\n\n    if (subscriptionType === 'newPendingTransactions') {\n      self.checkForPendingBlocks();\n    }\n\n    cb(null, hexId);\n  });\n};\n\nSubscriptionSubprovider.prototype.eth_unsubscribe = function (payload, cb) {\n  const self = this;\n  let hexId = payload.params[0];\n  const id = Number.parseInt(hexId, 16);\n\n  if (!self.subscriptions[id]) {\n    cb(new Error(`Subscription ID ${hexId} not found.`));\n  } else {\n    let subscriptionType = self.subscriptions[id];\n    self.uninstallFilter(hexId, function (err, result) {\n      delete self.subscriptions[id];\n      cb(err, result);\n    });\n  }\n};\n\nSubscriptionSubprovider.prototype._notificationHandler = function (hexId, subscriptionType, result) {\n  const self = this;\n\n  if (subscriptionType === 'newHeads') {\n    result = self._notificationResultFromBlock(result);\n  } // it seems that web3 doesn't expect there to be a separate error event\n  // so we must emit null along with the result object\n\n\n  self.emit('data', null, {\n    jsonrpc: \"2.0\",\n    method: \"eth_subscription\",\n    params: {\n      subscription: hexId,\n      result: result\n    }\n  });\n};\n\nSubscriptionSubprovider.prototype._notificationResultFromBlock = function (block) {\n  return {\n    hash: utils.bufferToHex(block.hash),\n    parentHash: utils.bufferToHex(block.parentHash),\n    sha3Uncles: utils.bufferToHex(block.sha3Uncles),\n    miner: utils.bufferToHex(block.miner),\n    stateRoot: utils.bufferToHex(block.stateRoot),\n    transactionsRoot: utils.bufferToHex(block.transactionsRoot),\n    receiptsRoot: utils.bufferToHex(block.receiptsRoot),\n    logsBloom: utils.bufferToHex(block.logsBloom),\n    difficulty: from.bufferToQuantityHex(block.difficulty),\n    number: from.bufferToQuantityHex(block.number),\n    gasLimit: from.bufferToQuantityHex(block.gasLimit),\n    gasUsed: from.bufferToQuantityHex(block.gasUsed),\n    nonce: block.nonce ? utils.bufferToHex(block.nonce) : null,\n    mixHash: utils.bufferToHex(block.mixHash),\n    timestamp: from.bufferToQuantityHex(block.timestamp),\n    extraData: utils.bufferToHex(block.extraData)\n  };\n};\n\nSubscriptionSubprovider.prototype.handleRequest = function (payload, next, end) {\n  switch (payload.method) {\n    case 'eth_subscribe':\n      this.eth_subscribe(payload, end);\n      break;\n\n    case 'eth_unsubscribe':\n      this.eth_unsubscribe(payload, end);\n      break;\n\n    default:\n      FilterSubprovider.prototype.handleRequest.apply(this, Array.prototype.slice.call(arguments));\n  }\n};\n\nmodule.exports = SubscriptionSubprovider;","map":{"version":3,"names":["EventEmitter","require","FilterSubprovider","from","inherits","utils","SubscriptionSubprovider","opts","self","apply","Array","prototype","slice","call","arguments","subscriptions","Object","assign","constructor","eth_subscribe","payload","cb","createSubscriptionFilter","subscriptionType","params","options","newLogFilter","bind","newPendingTransactionFilter","newBlockFilter","Error","err","hexId","id","Number","parseInt","filters","on","results","isArray","notificationHandler","_notificationHandler","forEach","clearChanges","checkForPendingBlocks","eth_unsubscribe","uninstallFilter","result","_notificationResultFromBlock","emit","jsonrpc","method","subscription","block","hash","bufferToHex","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","bufferToQuantityHex","number","gasLimit","gasUsed","nonce","mixHash","timestamp","extraData","handleRequest","next","end","module","exports"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/node_modules/web3-provider-engine/subproviders/subscriptions.js"],"sourcesContent":["const EventEmitter = require('events').EventEmitter\nconst FilterSubprovider = require('./filters.js')\nconst from = require('../util/rpc-hex-encoding.js')\nconst inherits = require('util').inherits\nconst utils = require('ethereumjs-util')\n\nfunction SubscriptionSubprovider(opts) {\n  const self = this\n\n  opts = opts || {}\n\n  EventEmitter.apply(this, Array.prototype.slice.call(arguments))\n  FilterSubprovider.apply(this, [opts])\n\n  this.subscriptions = {}\n}\n\ninherits(SubscriptionSubprovider, FilterSubprovider)\n\n// a cheap crack at multiple inheritance\n// I don't really care if `instanceof EventEmitter` passes...\nObject.assign(SubscriptionSubprovider.prototype, EventEmitter.prototype)\n\n// preserve our constructor, though\nSubscriptionSubprovider.prototype.constructor = SubscriptionSubprovider\n\nSubscriptionSubprovider.prototype.eth_subscribe = function(payload, cb) {\n  const self = this\n  let createSubscriptionFilter = () => {}\n  let subscriptionType = payload.params[0]\n\n  switch (subscriptionType) {\n    case 'logs':\n      ;(function(){\n        let options = payload.params[1]\n        createSubscriptionFilter = self.newLogFilter.bind(self, options)\n      })()\n      break\n    case 'newPendingTransactions':\n      createSubscriptionFilter = self.newPendingTransactionFilter.bind(self)\n      break\n    case 'newHeads':\n      createSubscriptionFilter = self.newBlockFilter.bind(self)\n      break\n    case 'syncing':\n    default:\n      cb(new Error('unsupported subscription type'))\n      return\n  }\n\n  createSubscriptionFilter(function(err, hexId) {\n    if (err) return cb(err)\n\n    const id = Number.parseInt(hexId, 16)\n    self.subscriptions[id] = subscriptionType\n\n    self.filters[id].on('data', function(results) {\n      if (!Array.isArray(results)) {\n        results = [results]\n      }\n\n      var notificationHandler = self._notificationHandler.bind(self, hexId, subscriptionType)\n      results.forEach(notificationHandler)\n      self.filters[id].clearChanges()\n    })\n    if (subscriptionType === 'newPendingTransactions') {\n      self.checkForPendingBlocks()\n    }\n    cb(null, hexId)\n  })\n}\n\nSubscriptionSubprovider.prototype.eth_unsubscribe = function(payload, cb) {\n  const self = this\n  let hexId = payload.params[0]\n  const id = Number.parseInt(hexId, 16)\n  if (!self.subscriptions[id]) {\n    cb(new Error(`Subscription ID ${hexId} not found.`))\n  } else {\n    let subscriptionType = self.subscriptions[id]\n    self.uninstallFilter(hexId, function (err, result) {\n      delete self.subscriptions[id]\n      cb(err, result)\n    })\n  }\n}\n\n\nSubscriptionSubprovider.prototype._notificationHandler = function (hexId, subscriptionType, result) {\n  const self = this\n  if (subscriptionType === 'newHeads') {\n    result = self._notificationResultFromBlock(result)\n  }\n\n  // it seems that web3 doesn't expect there to be a separate error event\n  // so we must emit null along with the result object\n  self.emit('data', null, {\n    jsonrpc: \"2.0\",\n    method: \"eth_subscription\",\n    params: {\n      subscription: hexId,\n      result: result,\n    },\n  })\n}\n\nSubscriptionSubprovider.prototype._notificationResultFromBlock = function(block) {\n  return {\n    hash: utils.bufferToHex(block.hash),\n    parentHash: utils.bufferToHex(block.parentHash),\n    sha3Uncles: utils.bufferToHex(block.sha3Uncles),\n    miner: utils.bufferToHex(block.miner),\n    stateRoot: utils.bufferToHex(block.stateRoot),\n    transactionsRoot: utils.bufferToHex(block.transactionsRoot),\n    receiptsRoot: utils.bufferToHex(block.receiptsRoot),\n    logsBloom: utils.bufferToHex(block.logsBloom),\n    difficulty: from.bufferToQuantityHex(block.difficulty),\n    number: from.bufferToQuantityHex(block.number),\n    gasLimit: from.bufferToQuantityHex(block.gasLimit),\n    gasUsed: from.bufferToQuantityHex(block.gasUsed),\n    nonce: block.nonce ? utils.bufferToHex(block.nonce): null,\n    mixHash: utils.bufferToHex(block.mixHash),\n    timestamp: from.bufferToQuantityHex(block.timestamp),\n    extraData: utils.bufferToHex(block.extraData)\n  }\n}\n\nSubscriptionSubprovider.prototype.handleRequest = function(payload, next, end) {\n  switch(payload.method){\n    case 'eth_subscribe':\n      this.eth_subscribe(payload, end)\n      break\n    case 'eth_unsubscribe':\n      this.eth_unsubscribe(payload, end)\n      break\n    default:\n      FilterSubprovider.prototype.handleRequest.apply(this, Array.prototype.slice.call(arguments))\n  }\n}\n\nmodule.exports = SubscriptionSubprovider\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}