{"ast":null,"code":"/*\nCopyright (c) 2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport { useState, useReducer, useEffect } from 'react';\nimport copy from 'copy-to-clipboard';\nimport debounce from 'lodash/debounce'; // transformations, code generation\n\nimport { transformBeforeCompilation } from './ast';\nimport { getCode, formatCode } from './code-generator';\nimport { buildPropsObj } from './utils'; // actions that can be dispatched\n\nimport { reset, updateAll, updateCode, updateCodeAndProvider, updateProps, updatePropsAndCode, updatePropsAndCodeNoRecompile } from './actions';\nimport reducer from './reducer';\n\nconst useView = function () {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // setting defaults\n  const componentName = config.componentName ? config.componentName : '';\n  const propsConfig = config.props ? config.props : {};\n  const scopeConfig = config.scope ? config.scope : {};\n  const importsConfig = config.imports ? config.imports : {};\n  const provider = config.provider ? config.provider : {\n    value: undefined,\n    parse: () => undefined,\n    generate: (_, child) => child,\n    imports: {}\n  };\n  const onUpdate = config.onUpdate ? config.onUpdate : () => {};\n  const customProps = config.customProps ? config.customProps : {};\n  const initialCode = config.initialCode;\n  const [hydrated, setHydrated] = useState(false);\n  const [error, setError] = useState({\n    where: '',\n    msg: null\n  });\n  const [state, dispatch] = useReducer(reducer, {\n    code: initialCode || getCode({\n      props: propsConfig,\n      componentName,\n      provider,\n      providerValue: provider.value,\n      importsConfig,\n      customProps\n    }),\n    codeNoRecompile: '',\n    props: propsConfig,\n    providerValue: provider ? provider.value : undefined\n  }); // initialize from the initialCode\n\n  useEffect(() => {\n    if (initialCode && !hydrated) {\n      setHydrated(true);\n\n      try {\n        updateAll(dispatch, initialCode, componentName, propsConfig, provider ? provider.parse : undefined, customProps);\n      } catch (e) {}\n    }\n  }, [initialCode]); // this callback is secretely inserted into props marked with\n  // \"propHook\" this way we can get notified when the internal\n  // state of previewed component is changed by user\n\n  const __reactViewOnChange = debounce((propValue, propName) => {\n    !hydrated && setHydrated(true);\n    const newCode = getCode({\n      props: buildPropsObj(state.props, {\n        [propName]: propValue\n      }),\n      componentName,\n      provider,\n      providerValue: state.providerValue,\n      importsConfig,\n      customProps\n    });\n    updatePropsAndCodeNoRecompile(dispatch, newCode, propName, propValue);\n    onUpdate({\n      code: newCode\n    });\n  }, 200);\n\n  return {\n    compilerProps: {\n      code: state.code,\n      setError: msg => setError({\n        where: '__compiler',\n        msg\n      }),\n      transformations: [ast => transformBeforeCompilation(ast, componentName, propsConfig)],\n      scope: Object.assign(Object.assign({}, scopeConfig), {\n        __reactViewOnChange\n      })\n    },\n    knobProps: {\n      state: state.props,\n      error,\n      set: (propValue, propName) => {\n        try {\n          !hydrated && setHydrated(true);\n          const newCode = getCode({\n            props: buildPropsObj(state.props, {\n              [propName]: propValue\n            }),\n            componentName,\n            provider,\n            providerValue: state.providerValue,\n            importsConfig,\n            customProps\n          });\n          setError({\n            where: '',\n            msg: null\n          });\n\n          if (state.codeNoRecompile !== '') {\n            // fixes https://github.com/uber/react-view/issues/19\n            // We don't run compiler when the state change comes from interacting\n            // with the component since that causes remount and lost of focus.\n            // That's a bad experience for interactions like typing. But, we\n            // still want to display correct code snippet. That's why we have\n            // a separate state.codeNoRecompile. The problem is that compiler runs\n            // only if state.code changes and that doesn't really happen in the modal\n            // case since we are only flipping a boolean flag. So state.code stays same\n            // each even cycle of \"open the modal through the knob and close it by its button\".\n            // so here we need to force an addition state.code update (aka recompile\n            // with show=false\n            updateCode(dispatch, state.codeNoRecompile); // and now we need to do the sequential state.code update with show=true\n            // in the next tick\n\n            setTimeout(() => {\n              updatePropsAndCode(dispatch, newCode, propName, propValue);\n              onUpdate({\n                code: newCode\n              });\n            }, 0);\n          } else {\n            updatePropsAndCode(dispatch, newCode, propName, propValue);\n            onUpdate({\n              code: newCode\n            });\n          }\n        } catch (e) {\n          updateProps(dispatch, propName, propValue);\n          setError({\n            where: propName,\n            msg: e.toString()\n          });\n        }\n      }\n    },\n    providerValue: state.providerValue,\n    editorProps: {\n      code: state.codeNoRecompile !== '' ? state.codeNoRecompile : state.code,\n      onChange: newCode => {\n        try {\n          updateAll(dispatch, newCode, componentName, propsConfig, provider ? provider.parse : undefined, customProps);\n          onUpdate({\n            code: newCode\n          });\n        } catch (e) {\n          updateCode(dispatch, newCode);\n        }\n      }\n    },\n    errorProps: {\n      msg: error.where === '__compiler' ? error.msg : null,\n      code: state.code\n    },\n    actions: {\n      formatCode: () => {\n        updateCode(dispatch, formatCode(state.code));\n      },\n      copyCode: () => {\n        copy(state.code);\n      },\n      copyUrl: () => {\n        copy(window.location.href);\n      },\n      reset: () => {\n        const editorOnlyMode = Object.keys(propsConfig).length === 0;\n        const providerValue = provider ? provider.value : undefined;\n        const newCode = editorOnlyMode ? initialCode : getCode({\n          props: propsConfig,\n          componentName,\n          provider,\n          providerValue,\n          importsConfig,\n          customProps\n        });\n        reset(dispatch, newCode, providerValue, propsConfig);\n        onUpdate({\n          code: newCode\n        });\n      },\n      updateProvider: providerValue => {\n        const newCode = getCode({\n          props: buildPropsObj(state.props, {}),\n          componentName,\n          provider,\n          providerValue,\n          importsConfig,\n          customProps\n        });\n        updateCodeAndProvider(dispatch, newCode, providerValue);\n      },\n      updateProp: (propName, propValue) => {\n        try {\n          const newCode = getCode({\n            props: buildPropsObj(state.props, {\n              [propName]: propValue\n            }),\n            componentName,\n            provider,\n            providerValue: state.providerValue,\n            importsConfig,\n            customProps\n          });\n          setError({\n            where: '',\n            msg: null\n          });\n          updatePropsAndCode(dispatch, newCode, propName, propValue);\n        } catch (e) {\n          updateProps(dispatch, propName, propValue);\n          setError({\n            where: propName,\n            msg: e.toString()\n          });\n        }\n      }\n    }\n  };\n};\n\nexport default useView;","map":{"version":3,"mappings":"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","names":["useState","useReducer","useEffect","copy","debounce","transformBeforeCompilation","getCode","formatCode","buildPropsObj","reset","updateAll","updateCode","updateCodeAndProvider","updateProps","updatePropsAndCode","updatePropsAndCodeNoRecompile","reducer","useView","config","componentName","propsConfig","props","scopeConfig","scope","importsConfig","imports","provider","value","undefined","parse","generate","_","child","onUpdate","customProps","initialCode","hydrated","setHydrated","error","setError","where","msg","state","dispatch","code","providerValue","codeNoRecompile","e","__reactViewOnChange","propValue","propName","newCode","compilerProps","transformations","ast","knobProps","set","setTimeout","toString","editorProps","onChange","errorProps","actions","copyCode","copyUrl","window","location","href","editorOnlyMode","Object","keys","length","updateProvider","updateProp"],"sources":["../../src/use-view.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}