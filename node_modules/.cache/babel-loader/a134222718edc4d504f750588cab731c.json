{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\ReelSet.js\";\nimport React, { Component, View } from \"react\";\nimport Constants from \"../Constants\";\nimport Reel from \"./Reel\"; // /import \"../assets/css/App.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ReelSet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.randomBetween = (min, max) => {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    };\n\n    this.audioUrlWin = require(\"../assets/sounds/coinsHandling.wav\");\n    this.audioWin = new Audio(\"../assets/sounds/coinsHandling.wav\");\n    this.audioUrlWinBonus = require(\"../assets/sounds/winningBonus.wav\");\n    this.audioWinBonus = new Audio(\"../assets/sounds/winningBonus.wav\");\n    this.audioUrlBtn = require(\"../assets/sounds/buttonPress.wav\");\n    this.audioBtn = new Audio(\"../assets/sounds/buttonPress.wav\");\n    this.audioUrlSpin = require(\"../assets/sounds/spinningSlotMachine.wav\");\n    this.audioSpin = new Audio(\"../assets/sounds/spinningSlotMachine.wav\");\n\n    this.drawScore = (lineNumberType, fool) => {\n      let newScore = 0;\n\n      if (fool) {\n        lineNumberType = 18;\n      }\n\n      switch (lineNumberType) {\n        case 0:\n          // top line\n          //        this.audioWin.play();\n          newScore = 0.5;\n          break;\n\n        case 1:\n          // middle line\n          //        this.audioWin.play();\n          newScore = 0.5;\n          break;\n\n        case 2:\n          // bottom line\n          //        this.audioWin.play();\n          newScore = 0.5;\n          break;\n\n        case 3:\n          // V shape starting bottom left\n          //        this.audioWin.play();\n          newScore = 0.2;\n          break;\n\n        case 4:\n          // V shape starting bottom right\n          //        this.audioWin.play();\n          newScore = 0.2;\n          break;\n\n        case 5:\n          // W shape starting top left\n          //        this.audioWin.play();\n          newScore = 0.3;\n          break;\n\n        case 6:\n          // M shape starting bottom left\n          //        this.audioWin.play();\n          newScore = 0.3;\n          break;\n\n        case 7:\n          // M shape on top half\n          //        this.audioWin.play();\n          newScore = 0.3;\n          break;\n\n        case 8:\n          // W shape on top half\n          //        this.audioWin.play();\n          newScore = 0.3;\n          break;\n\n        case 9:\n          //W shape on bottom half\n          //        this.audioWin.play();\n          newScore = 0.3;\n          break;\n\n        case 10:\n          // M shape on bottom half\n          //        this.audioWin.play();\n          newScore = 0.3;\n          break;\n\n        case 11:\n          // U shape on top half\n          //        this.audioWin.play();\n          newScore = 0.1;\n          break;\n\n        case 12:\n          // inverse U shape on top half\n          //        this.audioWin.play();\n          newScore = 0.1;\n          break;\n\n        case 13:\n          // U shape on bottom half\n          //        this.audioWin.play();\n          newScore = 0.1;\n          break;\n\n        case 14:\n          // inverse U shape on bottom half\n          //        this.audioWin.play();\n          newScore = 0.1;\n          break;\n\n        case 15:\n          // inverse U shape on top half\n          //        this.audioWin.play();\n          newScore = 0.1;\n          break;\n\n        case 16:\n          // Z shape from top left\n          //        this.audioWin.play();\n          newScore = 0.4;\n          break;\n\n        case 17:\n          // Z shape from bottom left\n          //        this.audioWin.play();\n          newScore = 0.4;\n          break;\n\n        case 18:\n          // Z shape from bottom left\n          //        this.audioWinBonus.play();\n          newScore = 100;\n          break;\n\n        default:\n          newScore = 0;\n      }\n\n      console.log(\"My score is:\" + newScore);\n      this.setScore(newScore);\n      return;\n    };\n\n    this.setScoreState = () => {\n      console.log(\"My scr is:\" + this.scr);\n      this.setState({\n        score: this.scr\n      });\n    };\n\n    this.checkLinesElements = symbol => {\n      this.countWin++;\n      let symNr = 0;\n      let fool = 0;\n\n      for (let i = 0; i < Constants.LINES.length; i++) {\n        fool = 0;\n        symNr = 0;\n\n        for (let j = 0; j < Constants.LINES[i].length; j++) {\n          let indexI = Constants.LINES[i][j][0];\n          let indexJ = Constants.LINES[i][j][1];\n\n          if (this.spinResults[indexI][indexJ] === 'D') {\n            fool++;\n          }\n\n          if (symbol === this.spinResults[indexI][indexJ]) {\n            symNr++;\n          }\n        }\n\n        if (fool + symNr === 5 && fool < 4) {\n          this.winningLines.push(i);\n        }\n      }\n\n      this.winningLines = this.uniq(this.winningLines);\n    };\n\n    this.uniq = a => {\n      return a.sort().filter(function (item, pos, ary) {\n        return !pos || item !== ary[pos - 1];\n      });\n    };\n\n    this.checkElements = () => {\n      let fool = 0;\n\n      for (let k = 0; k < 3; k++) {\n        fool = 0;\n\n        for (let i = 0; i < this.spinResults.length; i++) {\n          let symb = \"\";\n\n          for (let j = k; j < this.spinResults[i].length; j++) {\n            if (this.spinResults[i][j] !== 'D') {\n              symb = this.spinResults[i][j];\n              j = this.spinResults[i].length;\n            } else {\n              fool++;\n              j = this.spinResults[i].length;\n            }\n          }\n\n          if (fool < 4 && symb !== \"\") {\n            this.symbolSellection.push(symb);\n          }\n        }\n      }\n\n      for (let i = 0; i < this.symbolSellection.length; i++) {\n        this.checkLinesElements(this.symbolSellection[i]);\n      }\n    };\n\n    this.evaluateResults = () => {\n      this.checkFourFools();\n      this.checkElements();\n      this.highLightWinningLines(0);\n\n      if (this.winningLines.length > 0) {\n        console.log(\"We have winning line !!!\");\n\n        for (let i = 0; i < this.winningLines.length; i++) {\n          this.drawScore(this.winningLines[i], false);\n        }\n      } else {\n        console.log(\"We have no winning lines !!!\");\n\n        if (this.scr - this.state.bet >= 0.2) {\n          this.scr = Math.round((this.scr - this.state.bet) * 100) / 100;\n          this.setScoreState();\n\n          if (this.scr < this.state.bet) {\n            this.setBetZero();\n          }\n        } else if (this.scr - this.state.bet === 0) {\n          this.setBetZero();\n          this.scr = 0;\n          this.setScoreState();\n        }\n      } //this.winningLines=[];\n\n    };\n\n    this.checkFourFools = () => {\n      for (let i = 0; i < Constants.LINES.length; i++) {\n        let fool = 0;\n\n        for (let j = 0; j < Constants.LINES[0].length; j++) {\n          let indexI = Constants.LINES[i][j][0];\n          let indexJ = Constants.LINES[i][j][1];\n\n          if (this.spinResults[indexI][indexJ] === \"D\") {\n            fool++;\n          }\n        }\n\n        if (fool === 4) {\n          this.winningLines.push(i);\n          this.drawScore(i, false);\n        }\n      }\n    };\n\n    this.checkFiveFools = () => {\n      let fl = false;\n\n      for (let i = 0; i < Constants.LINES.length; i++) {\n        let fool = 0;\n\n        for (let j = 0; j < Constants.LINES[0].length; j++) {\n          let indexI = Constants.LINES[i][j][0];\n          let indexJ = Constants.LINES[i][j][1];\n\n          if (this.spinResults[indexI][indexJ] === \"D\") {\n            fool++;\n          }\n        }\n\n        if (fool === 5) {\n          fl = true;\n          this.winningLines.push(i);\n          this.drawScore(i, true);\n          this.highLightWinningLines(0);\n          break;\n        }\n      }\n\n      return fl;\n    };\n\n    this.checkWin = () => {\n      let fool = this.checkFiveFools();\n\n      if (!fool) {\n        this.evaluateResults();\n      } //  this.setScoreState();\n\n    };\n\n    this.highLightWinningLines = currentIndex => {\n      if (!this.winningLines.length) {\n        return;\n      }\n\n      if (currentIndex > 0) {\n        //turn off the light on the previous line\n        Constants.LINES[this.winningLines[currentIndex - 1]].map(el => {\n          return this.reels[el[0]].highLightAtIndex(el[1], false);\n        });\n      }\n\n      if (currentIndex > this.winningLines.length - 1) {\n        return;\n      }\n\n      Constants.LINES[this.winningLines[currentIndex]].map(el => {\n        return this.reels[el[0]].highLightAtIndex(el[1], true), this.reels[el[0]].shakeAtIndex(el[1]);\n      });\n      setTimeout(() => {\n        this.highLightWinningLines(currentIndex + 1);\n      }, 800);\n    };\n\n    this.spin = () => {\n      this.winningLines = [];\n      this.reelsInMotion = Constants.REELS;\n\n      for (let i = 0; i < Constants.REELS; i++) {\n        this.reels[i].scrollByOffSet(this.randomBetween((Constants.REELS_REPEAT - 6) * this.reels[i].symbols.length, (Constants.REELS_REPEAT - 5) * this.reels[i].symbols.length), (reelIndex, results) => {\n          this.reelsInMotion -= 1;\n          this.spinResults[reelIndex] = results;\n\n          if (this.reelsInMotion === 0) {\n            this.checkWin();\n            console.log(\"We have finished rolling\"); //  this.setScoreState();\n          }\n        });\n      }\n    };\n\n    this.onLayout = e => {\n      this.setState({\n        width: e.nativeEvent.layout.width,\n        height: e.nativeEvent.layout.height\n      });\n    };\n\n    this.renderReels = () => {\n      let reelWidth = this.state.width / Constants.REELS;\n      let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\n        return /*#__PURE__*/_jsxDEV(Reel, {\n          width: reelWidth,\n          height: this.state.height,\n          index: idx,\n          ref: ref => {\n            this.reels[idx] = ref;\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 9\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: reelList\n      }, void 0, false);\n    };\n\n    this.setScore = e => {\n      console.log(\"We are in setScore: \" + e);\n      let sc = 0;\n\n      if (this.state.bet > 0 && e > 0) {\n        console.log(\"Calculating:\" + this.scr + \"+(\" + this.state.bet + \"*\" + e + \")\");\n        this.scr = this.scr + (e + this.state.bet * e);\n        this.scr = Math.round(this.scr * 100) / 100;\n      } else if (this.state.bet > 0 && e === 0) {\n        this.scr = this.scr - (e + this.state.bet * e);\n        console.log(\"Calculating:\" + sc + \"-(\" + this.state.bet + \"*\" + e + \")\");\n        this.scr = Math.round(this.scr * 100) / 100;\n      } else if (this.state.bet === 0 && e > 0) {\n        console.log(\"Calculating: \" + this.scr + \" + \" + e);\n        this.scr = Math.round((this.scr + e) * 100) / 100;\n      } //this.setBetZero();\n\n\n      this.setScoreState(this.scr);\n    };\n\n    this.setRolling = async roll => {\n      this.setState({\n        rolling: roll\n      });\n    };\n\n    this.setBetZero = () => {\n      this.setState({\n        bet: 0\n      });\n    };\n\n    this.roll = () => {\n      this.setRolling(true);\n      setTimeout(() => {\n        this.setRolling(false);\n      }, 700);\n    };\n\n    this.setWithdrawal = wdrl => {\n      this.setState({\n        withdrawal: wdrl\n      });\n    };\n\n    this.increaseBet = () => {\n      if (this.state.bet < this.scr - 0.2 && this.scr !== 0) {\n        console.log(\"Bet is set !\");\n        this.setState({\n          bet: Math.round((this.state.bet + 0.2) * 100) / 100\n        });\n      } else this.setState({\n        bet: this.scr\n      });\n    };\n\n    this.decreaseBet = () => {\n      if (this.state.bet >= 0.2 && this.state.score !== 0) {\n        this.setState({\n          bet: Math.round((this.state.bet - 0.2) * 100) / 100\n        });\n      } else if (this.state.bet === this.scr && this.state.score !== 0) {\n        this.setState({\n          bet: Math.round((this.state.score - 0.2) * 100) / 100\n        });\n      }\n    };\n\n    this.state = {\n      width: null,\n      height: null,\n      bet: 0,\n      score: 2\n    };\n    this.reels = [];\n    this.reelsInMotion = null;\n    this.spinResults = [];\n    this.winningLines = [];\n    this.strike = false;\n    this.LINES = Constants.LINES;\n    this.scr = 2;\n    this.countWin = 0;\n    this.symbolSellection = [];\n  }\n\n  render() {\n    const reelSet = {\n      flex: 1,\n      flexDirection: \"row\",\n      backgroundColor: \"red\"\n    };\n    const container = {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"blue\"\n    };\n    const playContainer = {\n      height: Constants.MAX_HEIGHT,\n      width: Constants.MAX_WIDTH,\n      backgroundColor: \"yellow\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: playContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: reelSet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ReelSet;","map":{"version":3,"names":["React","Component","View","Constants","Reel","ReelSet","constructor","props","randomBetween","min","max","Math","floor","random","audioUrlWin","require","audioWin","Audio","audioUrlWinBonus","audioWinBonus","audioUrlBtn","audioBtn","audioUrlSpin","audioSpin","drawScore","lineNumberType","fool","newScore","console","log","setScore","setScoreState","scr","setState","score","checkLinesElements","symbol","countWin","symNr","i","LINES","length","j","indexI","indexJ","spinResults","winningLines","push","uniq","a","sort","filter","item","pos","ary","checkElements","k","symb","symbolSellection","evaluateResults","checkFourFools","highLightWinningLines","state","bet","round","setBetZero","checkFiveFools","fl","checkWin","currentIndex","map","el","reels","highLightAtIndex","shakeAtIndex","setTimeout","spin","reelsInMotion","REELS","scrollByOffSet","REELS_REPEAT","symbols","reelIndex","results","onLayout","e","width","nativeEvent","layout","height","renderReels","reelWidth","reelList","Array","apply","idx","ref","sc","setRolling","roll","rolling","setWithdrawal","wdrl","withdrawal","increaseBet","decreaseBet","strike","render","reelSet","flex","flexDirection","backgroundColor","container","justifyContent","alignItems","playContainer","MAX_HEIGHT","MAX_WIDTH"],"sources":["F:/Games/slotmachinereact/src/components/ReelSet.js"],"sourcesContent":["import React, { Component, View } from \"react\";\r\nimport Constants from \"../Constants\";\r\nimport Reel from \"./Reel\";\r\n// /import \"../assets/css/App.css\";\r\n\r\nclass ReelSet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: null,\r\n      height: null,\r\n      bet:0,\r\n      score: 2\r\n    };\r\n    this.reels = [];\r\n    this.reelsInMotion = null;\r\n    this.spinResults = [];\r\n    this.winningLines = [];\r\n    this.strike = false;\r\n    this.LINES = Constants.LINES;\r\n    this.scr = 2;\r\n    this.countWin = 0;\r\n    this.symbolSellection = [];\r\n  }\r\n\r\n  randomBetween = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  audioUrlWin = require(\"../assets/sounds/coinsHandling.wav\");\r\n  audioWin = new Audio(\"../assets/sounds/coinsHandling.wav\");\r\n\r\n  audioUrlWinBonus = require(\"../assets/sounds/winningBonus.wav\");\r\n  audioWinBonus = new Audio(\"../assets/sounds/winningBonus.wav\");\r\n\r\n  audioUrlBtn = require(\"../assets/sounds/buttonPress.wav\");\r\n  audioBtn = new Audio(\"../assets/sounds/buttonPress.wav\");\r\n\r\n  audioUrlSpin = require(\"../assets/sounds/spinningSlotMachine.wav\");\r\n  audioSpin = new Audio(\"../assets/sounds/spinningSlotMachine.wav\");\r\n\r\n  //    evaluateResults = () => {\r\n  //        this.winningLines = [];\r\n  //        console.log(this.spinResults);\r\n  //    }\r\n\r\n  drawScore = (lineNumberType, fool) => {\r\n    let newScore = 0;\r\n    if (fool) {\r\n      lineNumberType = 18;\r\n    }\r\n    switch (lineNumberType) {\r\n      case 0: // top line\r\n//        this.audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 1: // middle line\r\n//        this.audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 2: // bottom line\r\n//        this.audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 3: // V shape starting bottom left\r\n//        this.audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 4: // V shape starting bottom right\r\n//        this.audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 5: // W shape starting top left\r\n//        this.audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 6: // M shape starting bottom left\r\n//        this.audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 7: // M shape on top half\r\n//        this.audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 8: // W shape on top half\r\n//        this.audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 9: //W shape on bottom half\r\n//        this.audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 10: // M shape on bottom half\r\n//        this.audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 11: // U shape on top half\r\n//        this.audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 12: // inverse U shape on top half\r\n//        this.audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 13: // U shape on bottom half\r\n//        this.audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 14: // inverse U shape on bottom half\r\n//        this.audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 15: // inverse U shape on top half\r\n//        this.audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 16: // Z shape from top left\r\n//        this.audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 17: // Z shape from bottom left\r\n//        this.audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 18: // Z shape from bottom left\r\n//        this.audioWinBonus.play();\r\n        newScore = 100;\r\n        break;\r\n      default:\r\n        newScore=0;\r\n    }\r\n\r\n    console.log(\"My score is:\"+newScore);\r\n    this.setScore(newScore);\r\n    return;\r\n  };\r\n\r\n  setScoreState = () => {\r\n    console.log(\"My scr is:\"+this.scr);\r\n    this.setState({\r\n      score:this.scr,\r\n        });\r\n  };\r\n  \r\n  checkLinesElements=(symbol)=>{\r\n    this.countWin++;\r\n    let symNr=0;\r\n    let fool=0;\r\n    for(let i=0;i<Constants.LINES.length;i++){\r\n        fool=0;\r\n        symNr=0;\r\n        for(let j=0; j<Constants.LINES[i].length;j++){\r\n            let indexI = Constants.LINES[i][j][0];\r\n            let indexJ = Constants.LINES[i][j][1];\r\n\r\n            if(this.spinResults[indexI][indexJ]==='D'){\r\n                fool++;\r\n            }\r\n            if(symbol===this.spinResults[indexI][indexJ]){\r\n                symNr++;\r\n            }\r\n        }  \r\n        if(fool+symNr===5&&fool<4){\r\n            this.winningLines.push(i);\r\n        }\r\n    }\r\n    this.winningLines=this.uniq(this.winningLines);\r\n  }\r\n\r\n  uniq=(a)=> {\r\n    return a.sort().filter(function(item, pos, ary) {\r\n        return !pos || item !== ary[pos - 1];\r\n    });\r\n}\r\n\r\n\r\n  checkElements=()=>{\r\n      let fool=0;\r\n    for(let k=0; k<3; k++){\r\n      fool=0;\r\n      for(let i=0;i<this.spinResults.length;i++){\r\n          let symb =\"\";\r\n          for(let j=k; j<this.spinResults[i].length;j++){\r\n              if(this.spinResults[i][j]!=='D'){\r\n                  symb=this.spinResults[i][j];\r\n                  j=this.spinResults[i].length;\r\n              }else{\r\n                fool++;\r\n                j=this.spinResults[i].length;\r\n              }\r\n          }\r\n         if(fool<4&&symb!==\"\"){\r\n         this.symbolSellection.push(symb); \r\n        }\r\n      } \r\n    } \r\n    for(let i=0;i<this.symbolSellection.length;i++){\r\n        this.checkLinesElements(this.symbolSellection[i]);\r\n    }\r\n    \r\n  }\r\n\r\n  evaluateResults = () => {\r\n    this.checkFourFools();\r\n    this.checkElements();\r\n    this.highLightWinningLines(0);\r\n    if(this.winningLines.length>0){\r\n      console.log(\"We have winning line !!!\");\r\n      for(let i=0; i< this.winningLines.length;i++){\r\n          this.drawScore(this.winningLines[i],false);\r\n    }\r\n  }else{\r\n    console.log(\"We have no winning lines !!!\");\r\n    if((this.scr - this.state.bet)>=0.2){\r\n      this.scr= Math.round((this.scr - this.state.bet) * 100) / 100;\r\n      this.setScoreState();\r\n      if(this.scr < this.state.bet){\r\n        this.setBetZero();\r\n      }\r\n    }else if((this.scr - this.state.bet)===0){\r\n      this.setBetZero();\r\n      this.scr=0;\r\n      this.setScoreState();\r\n    }\r\n    \r\n  }\r\n    //this.winningLines=[];\r\n  };\r\n\r\n  checkFourFools = () => {\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n        \r\n        if (this.spinResults[indexI][indexJ] === \"D\") {\r\n                fool++;\r\n        }\r\n      }\r\n      if (fool === 4) {\r\n        this.winningLines.push(i);\r\n        this.drawScore(i,false);\r\n      } \r\n    }\r\n  };\r\n\r\n  checkFiveFools = () => {\r\n    let fl = false;\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n        if (this.spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n      }\r\n      if (fool === 5) {\r\n        fl = true;\r\n        this.winningLines.push(i);\r\n        this.drawScore(i,true);\r\n        this.highLightWinningLines(0);\r\n        break;\r\n      }\r\n    }\r\n    return fl;\r\n  };\r\n\r\n  checkWin = () => {\r\n    let fool = this.checkFiveFools();\r\n    if (!fool) {\r\n      this.evaluateResults();\r\n    }\r\n  //  this.setScoreState();\r\n  };\r\n  \r\n  highLightWinningLines = (currentIndex) => {\r\n    if (!this.winningLines.length) {\r\n      return;\r\n    }\r\n    if (currentIndex > 0) {\r\n      //turn off the light on the previous line\r\n      Constants.LINES[this.winningLines[currentIndex - 1]].map((el) => {\r\n        return this.reels[el[0]].highLightAtIndex(el[1], false);\r\n      });\r\n    }\r\n    if (currentIndex > this.winningLines.length - 1) {\r\n      return;\r\n    }\r\n\r\n    Constants.LINES[this.winningLines[currentIndex]].map((el) => {\r\n      return (\r\n        this.reels[el[0]].highLightAtIndex(el[1], true),\r\n        this.reels[el[0]].shakeAtIndex(el[1])\r\n      );\r\n    });\r\n    setTimeout(() => {\r\n      this.highLightWinningLines(currentIndex + 1);\r\n    }, 800);\r\n  };\r\n\r\n  spin =() => {\r\n    this.winningLines = [];\r\n    this.reelsInMotion = Constants.REELS;\r\n    for (let i = 0; i < Constants.REELS; i++) {\r\n      this.reels[i].scrollByOffSet(\r\n        this.randomBetween(\r\n          (Constants.REELS_REPEAT - 6) * this.reels[i].symbols.length,\r\n          (Constants.REELS_REPEAT - 5) * this.reels[i].symbols.length\r\n        ),\r\n        (reelIndex, results) => {\r\n          this.reelsInMotion -= 1;\r\n          this.spinResults[reelIndex] = results;\r\n\r\n          if (this.reelsInMotion === 0) {\r\n            this.checkWin();\r\n            console.log(\"We have finished rolling\");\r\n          //  this.setScoreState();\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  onLayout = (e) => {\r\n    this.setState({\r\n      width: e.nativeEvent.layout.width,\r\n      height: e.nativeEvent.layout.height,\r\n    });\r\n  };\r\n\r\n  renderReels = () => {\r\n    let reelWidth = this.state.width / Constants.REELS;\r\n    let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\r\n      return (\r\n        <Reel\r\n          width={reelWidth}\r\n          height={this.state.height}\r\n          key={idx}\r\n          index={idx}\r\n          ref={(ref) => {\r\n            this.reels[idx] = ref;\r\n          }}\r\n        />\r\n      );\r\n    });\r\n\r\n    return <>{reelList}</>;\r\n  };\r\n\r\n\r\n  setScore = (e) => {\r\n    console.log(\"We are in setScore: \" + e);\r\n    let sc = 0;\r\n    if (this.state.bet > 0 && e > 0) {\r\n      console.log(\"Calculating:\" + this.scr + \"+(\" + this.state.bet + \"*\" + e + \")\");\r\n      this.scr = this.scr + (e+(this.state.bet * e));\r\n      this.scr = Math.round(this.scr * 100) / 100;\r\n    } else if (this.state.bet > 0 && e === 0) {\r\n      this.scr= this.scr -(e+(this.state.bet * e));\r\n      console.log(\"Calculating:\" + sc + \"-(\" + this.state.bet + \"*\" + e + \")\");\r\n      this.scr = Math.round(this.scr * 100) / 100;\r\n    } else if (this.state.bet === 0 && e > 0) {\r\n      console.log(\"Calculating: \" + this.scr + \" + \"+ e);\r\n      this.scr= Math.round((this.scr+e) * 100)/100;\r\n    }\r\n\r\n    //this.setBetZero();\r\n    this.setScoreState(this.scr);\r\n  };\r\n\r\n  setRolling = async (roll) => {\r\n    this.setState({\r\n      rolling: roll,\r\n    });\r\n  };\r\n\r\n  setBetZero = () => {\r\n    this.setState({\r\n      bet: 0,\r\n    });\r\n  };\r\n\r\n  // to trigger roolling and maintain state\r\n  roll = () => {\r\n    this.setRolling(true);\r\n    setTimeout(() => {\r\n      this.setRolling(false);\r\n    }, 700);\r\n  };\r\n\r\n  setWithdrawal = (wdrl) => {\r\n    this.setState({\r\n      withdrawal: wdrl,\r\n    });\r\n  };\r\n\r\n  increaseBet = () => {\r\n\r\n    if (this.state.bet < this.scr - 0.2 && this.scr !== 0) {\r\n      console.log(\"Bet is set !\");\r\n      this.setState({\r\n        bet: Math.round((this.state.bet + 0.2) * 100) / 100,\r\n      });\r\n    } else\r\n      this.setState({\r\n        bet: this.scr,\r\n      });\r\n  };\r\n\r\n  decreaseBet = () => {\r\n    if (this.state.bet >= 0.2 && this.state.score !== 0) {\r\n      this.setState({\r\n        bet: Math.round((this.state.bet - 0.2) * 100) / 100,\r\n      });\r\n    } else if (this.state.bet === this.scr && this.state.score !== 0) {\r\n      this.setState({\r\n        bet: Math.round((this.state.score - 0.2) * 100) / 100,\r\n      });\r\n    }\r\n  };\r\n  \r\n  render() {\r\n\r\n   const reelSet= {\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        backgroundColor: \"red\"\r\n      };\r\n   const container= {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"blue\"\r\n      };\r\n    const playContainer= {\r\n        height: Constants.MAX_HEIGHT,\r\n        width: Constants.MAX_WIDTH,\r\n        backgroundColor: \"yellow\",\r\n      };\r\n\r\n    return (   \r\n      <div style={container}>\r\n        <div style={playContainer}>\r\n        <div style={reelSet} > \r\n                \r\n           </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReelSet;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}