{"ast":null,"code":"const async = require('async');\n\nconst inherits = require('util').inherits;\n\nconst ethUtil = require('ethereumjs-util');\n\nconst Subprovider = require('./subprovider.js');\n\nconst Stoplight = require('../util/stoplight.js');\n\nconst EventEmitter = require('events').EventEmitter;\n\nmodule.exports = FilterSubprovider; // handles the following RPC methods:\n//   eth_newBlockFilter\n//   eth_newPendingTransactionFilter\n//   eth_newFilter\n//   eth_getFilterChanges\n//   eth_uninstallFilter\n//   eth_getFilterLogs\n\ninherits(FilterSubprovider, Subprovider);\n\nfunction FilterSubprovider(opts) {\n  opts = opts || {};\n  const self = this;\n  self.filterIndex = 0;\n  self.filters = {};\n  self.filterDestroyHandlers = {};\n  self.asyncBlockHandlers = {};\n  self.asyncPendingBlockHandlers = {};\n  self._ready = new Stoplight();\n\n  self._ready.setMaxListeners(opts.maxFilters || 25);\n\n  self._ready.go();\n\n  self.pendingBlockTimeout = opts.pendingBlockTimeout || 4000;\n  self.checkForPendingBlocksActive = false; // we dont have engine immeditately\n\n  setTimeout(function () {\n    // asyncBlockHandlers require locking provider until updates are completed\n    self.engine.on('block', function (block) {\n      // pause processing\n      self._ready.stop(); // update filters\n\n\n      var updaters = valuesFor(self.asyncBlockHandlers).map(function (fn) {\n        return fn.bind(null, block);\n      });\n      async.parallel(updaters, function (err) {\n        if (err) console.error(err); // unpause processing\n\n        self._ready.go();\n      });\n    });\n  });\n}\n\nFilterSubprovider.prototype.handleRequest = function (payload, next, end) {\n  const self = this;\n\n  switch (payload.method) {\n    case 'eth_newBlockFilter':\n      self.newBlockFilter(end);\n      return;\n\n    case 'eth_newPendingTransactionFilter':\n      self.newPendingTransactionFilter(end);\n      self.checkForPendingBlocks();\n      return;\n\n    case 'eth_newFilter':\n      self.newLogFilter(payload.params[0], end);\n      return;\n\n    case 'eth_getFilterChanges':\n      self._ready.await(function () {\n        self.getFilterChanges(payload.params[0], end);\n      });\n\n      return;\n\n    case 'eth_getFilterLogs':\n      self._ready.await(function () {\n        self.getFilterLogs(payload.params[0], end);\n      });\n\n      return;\n\n    case 'eth_uninstallFilter':\n      self._ready.await(function () {\n        self.uninstallFilter(payload.params[0], end);\n      });\n\n      return;\n\n    default:\n      next();\n      return;\n  }\n};\n\nFilterSubprovider.prototype.newBlockFilter = function (cb) {\n  const self = this;\n\n  self._getBlockNumber(function (err, blockNumber) {\n    if (err) return cb(err);\n    var filter = new BlockFilter({\n      blockNumber: blockNumber\n    });\n    var newBlockHandler = filter.update.bind(filter);\n    self.engine.on('block', newBlockHandler);\n\n    var destroyHandler = function () {\n      self.engine.removeListener('block', newBlockHandler);\n    };\n\n    self.filterIndex++;\n    self.filters[self.filterIndex] = filter;\n    self.filterDestroyHandlers[self.filterIndex] = destroyHandler;\n    var hexFilterIndex = intToHex(self.filterIndex);\n    cb(null, hexFilterIndex);\n  });\n};\n\nFilterSubprovider.prototype.newLogFilter = function (opts, cb) {\n  const self = this;\n\n  self._getBlockNumber(function (err, blockNumber) {\n    if (err) return cb(err);\n    var filter = new LogFilter(opts);\n    var newLogHandler = filter.update.bind(filter);\n\n    var blockHandler = function (block, cb) {\n      self._logsForBlock(block, function (err, logs) {\n        if (err) return cb(err);\n        newLogHandler(logs);\n        cb();\n      });\n    };\n\n    self.filterIndex++;\n    self.asyncBlockHandlers[self.filterIndex] = blockHandler;\n    self.filters[self.filterIndex] = filter;\n    var hexFilterIndex = intToHex(self.filterIndex);\n    cb(null, hexFilterIndex);\n  });\n};\n\nFilterSubprovider.prototype.newPendingTransactionFilter = function (cb) {\n  const self = this;\n  var filter = new PendingTransactionFilter();\n  var newTxHandler = filter.update.bind(filter);\n\n  var blockHandler = function (block, cb) {\n    self._txHashesForBlock(block, function (err, txs) {\n      if (err) return cb(err);\n      newTxHandler(txs);\n      cb();\n    });\n  };\n\n  self.filterIndex++;\n  self.asyncPendingBlockHandlers[self.filterIndex] = blockHandler;\n  self.filters[self.filterIndex] = filter;\n  var hexFilterIndex = intToHex(self.filterIndex);\n  cb(null, hexFilterIndex);\n};\n\nFilterSubprovider.prototype.getFilterChanges = function (hexFilterId, cb) {\n  const self = this;\n  var filterId = Number.parseInt(hexFilterId, 16);\n  var filter = self.filters[filterId];\n  if (!filter) console.warn('FilterSubprovider - no filter with that id:', hexFilterId);\n  if (!filter) return cb(null, []);\n  var results = filter.getChanges();\n  filter.clearChanges();\n  cb(null, results);\n};\n\nFilterSubprovider.prototype.getFilterLogs = function (hexFilterId, cb) {\n  const self = this;\n  var filterId = Number.parseInt(hexFilterId, 16);\n  var filter = self.filters[filterId];\n  if (!filter) console.warn('FilterSubprovider - no filter with that id:', hexFilterId);\n  if (!filter) return cb(null, []);\n\n  if (filter.type === 'log') {\n    self.emitPayload({\n      method: 'eth_getLogs',\n      params: [{\n        fromBlock: filter.fromBlock,\n        toBlock: filter.toBlock,\n        address: filter.address,\n        topics: filter.topics\n      }]\n    }, function (err, res) {\n      if (err) return cb(err);\n      cb(null, res.result);\n    });\n  } else {\n    var results = [];\n    cb(null, results);\n  }\n};\n\nFilterSubprovider.prototype.uninstallFilter = function (hexFilterId, cb) {\n  const self = this;\n  var filterId = Number.parseInt(hexFilterId, 16);\n  var filter = self.filters[filterId];\n\n  if (!filter) {\n    cb(null, false);\n    return;\n  }\n\n  self.filters[filterId].removeAllListeners();\n  var destroyHandler = self.filterDestroyHandlers[filterId];\n  delete self.filters[filterId];\n  delete self.asyncBlockHandlers[filterId];\n  delete self.asyncPendingBlockHandlers[filterId];\n  delete self.filterDestroyHandlers[filterId];\n  if (destroyHandler) destroyHandler();\n  cb(null, true);\n}; // private\n// check for pending blocks\n\n\nFilterSubprovider.prototype.checkForPendingBlocks = function () {\n  const self = this;\n  if (self.checkForPendingBlocksActive) return;\n  var activePendingTxFilters = !!Object.keys(self.asyncPendingBlockHandlers).length;\n\n  if (activePendingTxFilters) {\n    self.checkForPendingBlocksActive = true;\n    self.emitPayload({\n      method: 'eth_getBlockByNumber',\n      params: ['pending', true]\n    }, function (err, res) {\n      if (err) {\n        self.checkForPendingBlocksActive = false;\n        console.error(err);\n        return;\n      }\n\n      self.onNewPendingBlock(res.result, function (err) {\n        if (err) console.error(err);\n        self.checkForPendingBlocksActive = false;\n        setTimeout(self.checkForPendingBlocks.bind(self), self.pendingBlockTimeout);\n      });\n    });\n  }\n};\n\nFilterSubprovider.prototype.onNewPendingBlock = function (block, cb) {\n  const self = this; // update filters\n\n  var updaters = valuesFor(self.asyncPendingBlockHandlers).map(function (fn) {\n    return fn.bind(null, block);\n  });\n  async.parallel(updaters, cb);\n};\n\nFilterSubprovider.prototype._getBlockNumber = function (cb) {\n  const self = this;\n  var blockNumber = bufferToNumberHex(self.engine.currentBlock.number);\n  cb(null, blockNumber);\n};\n\nFilterSubprovider.prototype._logsForBlock = function (block, cb) {\n  const self = this;\n  var blockNumber = bufferToNumberHex(block.number);\n  self.emitPayload({\n    method: 'eth_getLogs',\n    params: [{\n      fromBlock: blockNumber,\n      toBlock: blockNumber\n    }]\n  }, function (err, response) {\n    if (err) return cb(err);\n    if (response.error) return cb(response.error);\n    cb(null, response.result);\n  });\n};\n\nFilterSubprovider.prototype._txHashesForBlock = function (block, cb) {\n  const self = this;\n  var txs = block.transactions; // short circuit if empty\n\n  if (txs.length === 0) return cb(null, []); // txs are already hashes\n\n  if ('string' === typeof txs[0]) {\n    cb(null, txs); // txs are obj, need to map to hashes\n  } else {\n    var results = txs.map(tx => tx.hash);\n    cb(null, results);\n  }\n}; //\n// BlockFilter\n//\n\n\ninherits(BlockFilter, EventEmitter);\n\nfunction BlockFilter(opts) {\n  // console.log('BlockFilter - new')\n  const self = this;\n  EventEmitter.apply(self);\n  self.type = 'block';\n  self.engine = opts.engine;\n  self.blockNumber = opts.blockNumber;\n  self.updates = [];\n}\n\nBlockFilter.prototype.update = function (block) {\n  // console.log('BlockFilter - update')\n  const self = this;\n  var blockHash = bufferToHex(block.hash);\n  self.updates.push(blockHash);\n  self.emit('data', block);\n};\n\nBlockFilter.prototype.getChanges = function () {\n  const self = this;\n  var results = self.updates; // console.log('BlockFilter - getChanges:', results.length)\n\n  return results;\n};\n\nBlockFilter.prototype.clearChanges = function () {\n  // console.log('BlockFilter - clearChanges')\n  const self = this;\n  self.updates = [];\n}; //\n// LogFilter\n//\n\n\ninherits(LogFilter, EventEmitter);\n\nfunction LogFilter(opts) {\n  // console.log('LogFilter - new')\n  const self = this;\n  EventEmitter.apply(self);\n  self.type = 'log';\n  self.fromBlock = opts.fromBlock !== undefined ? opts.fromBlock : 'latest';\n  self.toBlock = opts.toBlock !== undefined ? opts.toBlock : 'latest';\n  var expectedAddress = opts.address && (Array.isArray(opts.address) ? opts.address : [opts.address]);\n  self.address = expectedAddress && expectedAddress.map(normalizeHex);\n  self.topics = opts.topics || [];\n  self.updates = [];\n  self.allResults = [];\n}\n\nLogFilter.prototype.validateLog = function (log) {\n  // console.log('LogFilter - validateLog:', log)\n  const self = this; // check if block number in bounds:\n  // console.log('LogFilter - validateLog - blockNumber', self.fromBlock, self.toBlock)\n\n  if (blockTagIsNumber(self.fromBlock) && hexToInt(self.fromBlock) >= hexToInt(log.blockNumber)) return false;\n  if (blockTagIsNumber(self.toBlock) && hexToInt(self.toBlock) <= hexToInt(log.blockNumber)) return false; // address is correct:\n  // console.log('LogFilter - validateLog - address', self.address)\n\n  if (self.address && !self.address.map(a => a.toLowerCase()).includes(log.address.toLowerCase())) return false; // topics match:\n  // topics are position-dependant\n  // topics can be nested to represent `or` [[a || b], c]\n  // topics can be null, representing a wild card for that position\n  // console.log('LogFilter - validateLog - topics', log.topics)\n  // console.log('LogFilter - validateLog - against topics', self.topics)\n\n  var topicsMatch = self.topics.reduce(function (previousMatched, topicPattern, index) {\n    // abort in progress\n    if (!previousMatched) return false; // wild card\n\n    if (!topicPattern) return true; // pattern is longer than actual topics\n\n    var logTopic = log.topics[index];\n    if (!logTopic) return false; // check each possible matching topic\n\n    var subtopicsToMatch = Array.isArray(topicPattern) ? topicPattern : [topicPattern];\n    var topicDoesMatch = subtopicsToMatch.filter(function (subTopic) {\n      return logTopic.toLowerCase() === subTopic.toLowerCase();\n    }).length > 0;\n    return topicDoesMatch;\n  }, true); // console.log('LogFilter - validateLog - '+(topicsMatch ? 'approved!' : 'denied!')+' ==============')\n\n  return topicsMatch;\n};\n\nLogFilter.prototype.update = function (logs) {\n  // console.log('LogFilter - update')\n  const self = this; // validate filter match\n\n  var validLogs = [];\n  logs.forEach(function (log) {\n    var validated = self.validateLog(log);\n    if (!validated) return; // add to results\n\n    validLogs.push(log);\n    self.updates.push(log);\n    self.allResults.push(log);\n  });\n\n  if (validLogs.length > 0) {\n    self.emit('data', validLogs);\n  }\n};\n\nLogFilter.prototype.getChanges = function () {\n  // console.log('LogFilter - getChanges')\n  const self = this;\n  var results = self.updates;\n  return results;\n};\n\nLogFilter.prototype.getAllResults = function () {\n  // console.log('LogFilter - getAllResults')\n  const self = this;\n  var results = self.allResults;\n  return results;\n};\n\nLogFilter.prototype.clearChanges = function () {\n  // console.log('LogFilter - clearChanges')\n  const self = this;\n  self.updates = [];\n}; //\n// PendingTxFilter\n//\n\n\ninherits(PendingTransactionFilter, EventEmitter);\n\nfunction PendingTransactionFilter() {\n  // console.log('PendingTransactionFilter - new')\n  const self = this;\n  EventEmitter.apply(self);\n  self.type = 'pendingTx';\n  self.updates = [];\n  self.allResults = [];\n}\n\nPendingTransactionFilter.prototype.validateUnique = function (tx) {\n  const self = this;\n  return self.allResults.indexOf(tx) === -1;\n};\n\nPendingTransactionFilter.prototype.update = function (txs) {\n  // console.log('PendingTransactionFilter - update')\n  const self = this;\n  var validTxs = [];\n  txs.forEach(function (tx) {\n    // validate filter match\n    var validated = self.validateUnique(tx);\n    if (!validated) return; // add to results\n\n    validTxs.push(tx);\n    self.updates.push(tx);\n    self.allResults.push(tx);\n  });\n\n  if (validTxs.length > 0) {\n    self.emit('data', validTxs);\n  }\n};\n\nPendingTransactionFilter.prototype.getChanges = function () {\n  // console.log('PendingTransactionFilter - getChanges')\n  const self = this;\n  var results = self.updates;\n  return results;\n};\n\nPendingTransactionFilter.prototype.getAllResults = function () {\n  // console.log('PendingTransactionFilter - getAllResults')\n  const self = this;\n  var results = self.allResults;\n  return results;\n};\n\nPendingTransactionFilter.prototype.clearChanges = function () {\n  // console.log('PendingTransactionFilter - clearChanges')\n  const self = this;\n  self.updates = [];\n}; // util\n\n\nfunction normalizeHex(hexString) {\n  return hexString.slice(0, 2) === '0x' ? hexString : '0x' + hexString;\n}\n\nfunction intToHex(value) {\n  return ethUtil.intToHex(value);\n}\n\nfunction hexToInt(hexString) {\n  return Number(hexString);\n}\n\nfunction bufferToHex(buffer) {\n  return '0x' + buffer.toString('hex');\n}\n\nfunction bufferToNumberHex(buffer) {\n  return stripLeadingZero(buffer.toString('hex'));\n}\n\nfunction stripLeadingZero(hexNum) {\n  let stripped = ethUtil.stripHexPrefix(hexNum);\n\n  while (stripped[0] === '0') {\n    stripped = stripped.substr(1);\n  }\n\n  return `0x${stripped}`;\n}\n\nfunction blockTagIsNumber(blockTag) {\n  return blockTag && ['earliest', 'latest', 'pending'].indexOf(blockTag) === -1;\n}\n\nfunction valuesFor(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}","map":{"version":3,"names":["async","require","inherits","ethUtil","Subprovider","Stoplight","EventEmitter","module","exports","FilterSubprovider","opts","self","filterIndex","filters","filterDestroyHandlers","asyncBlockHandlers","asyncPendingBlockHandlers","_ready","setMaxListeners","maxFilters","go","pendingBlockTimeout","checkForPendingBlocksActive","setTimeout","engine","on","block","stop","updaters","valuesFor","map","fn","bind","parallel","err","console","error","prototype","handleRequest","payload","next","end","method","newBlockFilter","newPendingTransactionFilter","checkForPendingBlocks","newLogFilter","params","await","getFilterChanges","getFilterLogs","uninstallFilter","cb","_getBlockNumber","blockNumber","filter","BlockFilter","newBlockHandler","update","destroyHandler","removeListener","hexFilterIndex","intToHex","LogFilter","newLogHandler","blockHandler","_logsForBlock","logs","PendingTransactionFilter","newTxHandler","_txHashesForBlock","txs","hexFilterId","filterId","Number","parseInt","warn","results","getChanges","clearChanges","type","emitPayload","fromBlock","toBlock","address","topics","res","result","removeAllListeners","activePendingTxFilters","Object","keys","length","onNewPendingBlock","bufferToNumberHex","currentBlock","number","response","transactions","tx","hash","apply","updates","blockHash","bufferToHex","push","emit","undefined","expectedAddress","Array","isArray","normalizeHex","allResults","validateLog","log","blockTagIsNumber","hexToInt","a","toLowerCase","includes","topicsMatch","reduce","previousMatched","topicPattern","index","logTopic","subtopicsToMatch","topicDoesMatch","subTopic","validLogs","forEach","validated","getAllResults","validateUnique","indexOf","validTxs","hexString","slice","value","buffer","toString","stripLeadingZero","hexNum","stripped","stripHexPrefix","substr","blockTag","obj","key"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/node_modules/web3-provider-engine/subproviders/filters.js"],"sourcesContent":["const async = require('async')\nconst inherits = require('util').inherits\nconst ethUtil = require('ethereumjs-util')\nconst Subprovider = require('./subprovider.js')\nconst Stoplight = require('../util/stoplight.js')\nconst EventEmitter = require('events').EventEmitter\n\nmodule.exports = FilterSubprovider\n\n// handles the following RPC methods:\n//   eth_newBlockFilter\n//   eth_newPendingTransactionFilter\n//   eth_newFilter\n//   eth_getFilterChanges\n//   eth_uninstallFilter\n//   eth_getFilterLogs\n\ninherits(FilterSubprovider, Subprovider)\n\nfunction FilterSubprovider(opts) {\n  opts = opts || {}\n  const self = this\n  self.filterIndex = 0\n  self.filters = {}\n  self.filterDestroyHandlers = {}\n  self.asyncBlockHandlers = {}\n  self.asyncPendingBlockHandlers = {}\n  self._ready = new Stoplight()\n  self._ready.setMaxListeners(opts.maxFilters || 25)\n  self._ready.go()\n  self.pendingBlockTimeout = opts.pendingBlockTimeout || 4000\n  self.checkForPendingBlocksActive = false\n\n  // we dont have engine immeditately\n  setTimeout(function(){\n    // asyncBlockHandlers require locking provider until updates are completed\n    self.engine.on('block', function(block){\n      // pause processing\n      self._ready.stop()\n      // update filters\n      var updaters = valuesFor(self.asyncBlockHandlers)\n      .map(function(fn){ return fn.bind(null, block) })\n      async.parallel(updaters, function(err){\n        if (err) console.error(err)\n        // unpause processing\n        self._ready.go()\n      })\n    })\n  })\n\n}\n\nFilterSubprovider.prototype.handleRequest = function(payload, next, end){\n  const self = this\n  switch(payload.method){\n\n    case 'eth_newBlockFilter':\n      self.newBlockFilter(end)\n      return\n\n    case 'eth_newPendingTransactionFilter':\n      self.newPendingTransactionFilter(end)\n      self.checkForPendingBlocks()\n      return\n\n    case 'eth_newFilter':\n      self.newLogFilter(payload.params[0], end)\n      return\n\n    case 'eth_getFilterChanges':\n      self._ready.await(function(){\n        self.getFilterChanges(payload.params[0], end)\n      })\n      return\n\n    case 'eth_getFilterLogs':\n      self._ready.await(function(){\n        self.getFilterLogs(payload.params[0], end)\n      })\n      return\n\n    case 'eth_uninstallFilter':\n      self._ready.await(function(){\n        self.uninstallFilter(payload.params[0], end)\n      })\n      return\n\n    default:\n      next()\n      return\n  }\n}\n\nFilterSubprovider.prototype.newBlockFilter = function(cb) {\n  const self = this\n\n  self._getBlockNumber(function(err, blockNumber){\n    if (err) return cb(err)\n\n    var filter = new BlockFilter({\n      blockNumber: blockNumber,\n    })\n\n    var newBlockHandler = filter.update.bind(filter)\n    self.engine.on('block', newBlockHandler)\n    var destroyHandler = function(){\n      self.engine.removeListener('block', newBlockHandler)\n    }\n\n    self.filterIndex++\n    self.filters[self.filterIndex] = filter\n    self.filterDestroyHandlers[self.filterIndex] = destroyHandler\n\n    var hexFilterIndex = intToHex(self.filterIndex)\n    cb(null, hexFilterIndex)\n  })\n}\n\nFilterSubprovider.prototype.newLogFilter = function(opts, cb) {\n  const self = this\n\n  self._getBlockNumber(function(err, blockNumber){\n    if (err) return cb(err)\n\n    var filter = new LogFilter(opts)\n    var newLogHandler = filter.update.bind(filter)\n    var blockHandler = function(block, cb){\n      self._logsForBlock(block, function(err, logs){\n        if (err) return cb(err)\n        newLogHandler(logs)\n        cb()\n      })\n    }\n\n    self.filterIndex++\n    self.asyncBlockHandlers[self.filterIndex] = blockHandler\n    self.filters[self.filterIndex] = filter\n\n    var hexFilterIndex = intToHex(self.filterIndex)\n    cb(null, hexFilterIndex)\n  })\n}\n\nFilterSubprovider.prototype.newPendingTransactionFilter = function(cb) {\n  const self = this\n\n  var filter = new PendingTransactionFilter()\n  var newTxHandler = filter.update.bind(filter)\n  var blockHandler = function(block, cb){\n    self._txHashesForBlock(block, function(err, txs){\n      if (err) return cb(err)\n      newTxHandler(txs)\n      cb()\n    })\n  }\n\n  self.filterIndex++\n  self.asyncPendingBlockHandlers[self.filterIndex] = blockHandler\n  self.filters[self.filterIndex] = filter\n\n  var hexFilterIndex = intToHex(self.filterIndex)\n  cb(null, hexFilterIndex)\n}\n\nFilterSubprovider.prototype.getFilterChanges = function(hexFilterId, cb) {\n  const self = this\n\n  var filterId = Number.parseInt(hexFilterId, 16)\n  var filter = self.filters[filterId]\n  if (!filter) console.warn('FilterSubprovider - no filter with that id:', hexFilterId)\n  if (!filter) return cb(null, [])\n  var results = filter.getChanges()\n  filter.clearChanges()\n  cb(null, results)\n}\n\nFilterSubprovider.prototype.getFilterLogs = function(hexFilterId, cb) {\n  const self = this\n\n  var filterId = Number.parseInt(hexFilterId, 16)\n  var filter = self.filters[filterId]\n  if (!filter) console.warn('FilterSubprovider - no filter with that id:', hexFilterId)\n  if (!filter) return cb(null, [])\n  if (filter.type === 'log') {\n    self.emitPayload({\n      method: 'eth_getLogs',\n      params: [{\n        fromBlock: filter.fromBlock,\n        toBlock: filter.toBlock,\n        address: filter.address,\n        topics: filter.topics,\n      }],\n    }, function(err, res){\n      if (err) return cb(err)\n      cb(null, res.result)\n    })\n  } else {\n    var results = []\n    cb(null, results)\n  }\n}\n\nFilterSubprovider.prototype.uninstallFilter = function(hexFilterId, cb) {\n  const self = this\n\n  var filterId = Number.parseInt(hexFilterId, 16)\n  var filter = self.filters[filterId]\n  if (!filter) {\n    cb(null, false)\n    return\n  }\n\n  self.filters[filterId].removeAllListeners()\n\n  var destroyHandler = self.filterDestroyHandlers[filterId]\n  delete self.filters[filterId]\n  delete self.asyncBlockHandlers[filterId]\n  delete self.asyncPendingBlockHandlers[filterId]\n  delete self.filterDestroyHandlers[filterId]\n  if (destroyHandler) destroyHandler()\n\n  cb(null, true)\n}\n\n// private\n\n// check for pending blocks\nFilterSubprovider.prototype.checkForPendingBlocks = function(){\n  const self = this\n  if (self.checkForPendingBlocksActive) return\n  var activePendingTxFilters = !!Object.keys(self.asyncPendingBlockHandlers).length\n  if (activePendingTxFilters) {\n    self.checkForPendingBlocksActive = true\n    self.emitPayload({\n      method: 'eth_getBlockByNumber',\n      params: ['pending', true],\n    }, function(err, res){\n      if (err) {\n        self.checkForPendingBlocksActive = false\n        console.error(err)\n        return\n      }\n      self.onNewPendingBlock(res.result, function(err){\n        if (err) console.error(err)\n        self.checkForPendingBlocksActive = false\n        setTimeout(self.checkForPendingBlocks.bind(self), self.pendingBlockTimeout)\n      })\n    })\n  }\n}\n\nFilterSubprovider.prototype.onNewPendingBlock = function(block, cb){\n  const self = this\n  // update filters\n  var updaters = valuesFor(self.asyncPendingBlockHandlers)\n  .map(function(fn){ return fn.bind(null, block) })\n  async.parallel(updaters, cb)\n}\n\nFilterSubprovider.prototype._getBlockNumber = function(cb) {\n  const self = this\n  var blockNumber = bufferToNumberHex(self.engine.currentBlock.number)\n  cb(null, blockNumber)\n}\n\nFilterSubprovider.prototype._logsForBlock = function(block, cb) {\n  const self = this\n  var blockNumber = bufferToNumberHex(block.number)\n  self.emitPayload({\n    method: 'eth_getLogs',\n    params: [{\n      fromBlock: blockNumber,\n      toBlock: blockNumber,\n    }],\n  }, function(err, response){\n    if (err) return cb(err)\n    if (response.error) return cb(response.error)\n    cb(null, response.result)\n  })\n\n}\n\nFilterSubprovider.prototype._txHashesForBlock = function(block, cb) {\n  const self = this\n  var txs = block.transactions\n  // short circuit if empty\n  if (txs.length === 0) return cb(null, [])\n  // txs are already hashes\n  if ('string' === typeof txs[0]) {\n    cb(null, txs)\n  // txs are obj, need to map to hashes\n  } else {\n    var results = txs.map((tx) => tx.hash)\n    cb(null, results)\n  }\n}\n\n//\n// BlockFilter\n//\n\ninherits(BlockFilter, EventEmitter)\n\nfunction BlockFilter(opts) {\n  // console.log('BlockFilter - new')\n  const self = this\n  EventEmitter.apply(self)\n  self.type = 'block'\n  self.engine = opts.engine\n  self.blockNumber = opts.blockNumber\n  self.updates = []\n}\n\nBlockFilter.prototype.update = function(block){\n  // console.log('BlockFilter - update')\n  const self = this\n  var blockHash = bufferToHex(block.hash)\n  self.updates.push(blockHash)\n  self.emit('data', block)\n}\n\nBlockFilter.prototype.getChanges = function(){\n  const self = this\n  var results = self.updates\n  // console.log('BlockFilter - getChanges:', results.length)\n  return results\n}\n\nBlockFilter.prototype.clearChanges = function(){\n  // console.log('BlockFilter - clearChanges')\n  const self = this\n  self.updates = []\n}\n\n//\n// LogFilter\n//\n\ninherits(LogFilter, EventEmitter)\n\nfunction LogFilter(opts) {\n  // console.log('LogFilter - new')\n  const self = this\n  EventEmitter.apply(self)\n  self.type = 'log'\n  self.fromBlock = (opts.fromBlock !== undefined) ? opts.fromBlock : 'latest'\n  self.toBlock = (opts.toBlock !== undefined) ? opts.toBlock : 'latest'\n  var expectedAddress = opts.address && (Array.isArray(opts.address) ? opts.address : [opts.address]);\n  self.address = expectedAddress && expectedAddress.map(normalizeHex);\n  self.topics = opts.topics || []\n  self.updates = []\n  self.allResults = []\n}\n\nLogFilter.prototype.validateLog = function(log){\n  // console.log('LogFilter - validateLog:', log)\n  const self = this\n\n  // check if block number in bounds:\n  // console.log('LogFilter - validateLog - blockNumber', self.fromBlock, self.toBlock)\n  if (blockTagIsNumber(self.fromBlock) && hexToInt(self.fromBlock) >= hexToInt(log.blockNumber)) return false\n  if (blockTagIsNumber(self.toBlock) && hexToInt(self.toBlock) <= hexToInt(log.blockNumber)) return false\n\n  // address is correct:\n  // console.log('LogFilter - validateLog - address', self.address)\n  if (self.address && !(self.address.map((a) => a.toLowerCase()).includes(\n    log.address.toLowerCase()))) return false\n\n  // topics match:\n  // topics are position-dependant\n  // topics can be nested to represent `or` [[a || b], c]\n  // topics can be null, representing a wild card for that position\n  // console.log('LogFilter - validateLog - topics', log.topics)\n  // console.log('LogFilter - validateLog - against topics', self.topics)\n  var topicsMatch = self.topics.reduce(function(previousMatched, topicPattern, index){\n    // abort in progress\n    if (!previousMatched) return false\n    // wild card\n    if (!topicPattern) return true\n    // pattern is longer than actual topics\n    var logTopic = log.topics[index]\n    if (!logTopic) return false\n    // check each possible matching topic\n    var subtopicsToMatch = Array.isArray(topicPattern) ? topicPattern : [topicPattern]\n    var topicDoesMatch = subtopicsToMatch.filter(function(subTopic) {\n      return logTopic.toLowerCase() === subTopic.toLowerCase()\n    }).length > 0\n    return topicDoesMatch\n  }, true)\n\n  // console.log('LogFilter - validateLog - '+(topicsMatch ? 'approved!' : 'denied!')+' ==============')\n  return topicsMatch\n}\n\nLogFilter.prototype.update = function(logs){\n  // console.log('LogFilter - update')\n  const self = this\n  // validate filter match\n  var validLogs = []\n  logs.forEach(function(log) {\n    var validated = self.validateLog(log)\n    if (!validated) return\n    // add to results\n    validLogs.push(log)\n    self.updates.push(log)\n    self.allResults.push(log)\n  })\n  if (validLogs.length > 0) {\n    self.emit('data', validLogs)\n  }\n}\n\nLogFilter.prototype.getChanges = function(){\n  // console.log('LogFilter - getChanges')\n  const self = this\n  var results = self.updates\n  return results\n}\n\nLogFilter.prototype.getAllResults = function(){\n  // console.log('LogFilter - getAllResults')\n  const self = this\n  var results = self.allResults\n  return results\n}\n\nLogFilter.prototype.clearChanges = function(){\n  // console.log('LogFilter - clearChanges')\n  const self = this\n  self.updates = []\n}\n\n//\n// PendingTxFilter\n//\n\ninherits(PendingTransactionFilter, EventEmitter)\n\nfunction PendingTransactionFilter(){\n  // console.log('PendingTransactionFilter - new')\n  const self = this\n  EventEmitter.apply(self)\n  self.type = 'pendingTx'\n  self.updates = []\n  self.allResults = []\n}\n\nPendingTransactionFilter.prototype.validateUnique = function(tx){\n  const self = this\n  return self.allResults.indexOf(tx) === -1\n}\n\nPendingTransactionFilter.prototype.update = function(txs){\n  // console.log('PendingTransactionFilter - update')\n  const self = this\n  var validTxs = []\n  txs.forEach(function (tx) {\n    // validate filter match\n    var validated = self.validateUnique(tx)\n    if (!validated) return\n    // add to results\n    validTxs.push(tx)\n    self.updates.push(tx)\n    self.allResults.push(tx)\n  })\n  if (validTxs.length > 0) {\n    self.emit('data', validTxs)\n  }\n}\n\nPendingTransactionFilter.prototype.getChanges = function(){\n  // console.log('PendingTransactionFilter - getChanges')\n  const self = this\n  var results = self.updates\n  return results\n}\n\nPendingTransactionFilter.prototype.getAllResults = function(){\n  // console.log('PendingTransactionFilter - getAllResults')\n  const self = this\n  var results = self.allResults\n  return results\n}\n\nPendingTransactionFilter.prototype.clearChanges = function(){\n  // console.log('PendingTransactionFilter - clearChanges')\n  const self = this\n  self.updates = []\n}\n\n// util\n\nfunction normalizeHex(hexString) {\n  return hexString.slice(0, 2) === '0x' ? hexString : '0x'+hexString\n}\n\nfunction intToHex(value) {\n  return ethUtil.intToHex(value)\n}\n\nfunction hexToInt(hexString) {\n  return Number(hexString)\n}\n\nfunction bufferToHex(buffer) {\n  return '0x'+buffer.toString('hex')\n}\n\nfunction bufferToNumberHex(buffer) {\n  return stripLeadingZero(buffer.toString('hex'))\n}\n\nfunction stripLeadingZero(hexNum) {\n  let stripped = ethUtil.stripHexPrefix(hexNum)\n  while (stripped[0] === '0') {\n    stripped = stripped.substr(1)\n  }\n  return `0x${stripped}`\n}\n\nfunction blockTagIsNumber(blockTag){\n  return blockTag && ['earliest', 'latest', 'pending'].indexOf(blockTag) === -1\n}\n\nfunction valuesFor(obj){\n  return Object.keys(obj).map(function(key){ return obj[key] })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}