{"ast":null,"code":"var inherits = require(\"util\").inherits; // raised when the transaction is rejected prior to running it in the EVM.\n\n\nfunction TXRejectedError(message) {\n  // Why not just Error.apply(this, [message])? See\n  // https://gist.github.com/justmoon/15511f92e5216fa2624b#anti-patterns\n  Error.captureStackTrace(this, this.constructor);\n  this.name = this.constructor.name;\n  this.message = message;\n}\n\ninherits(TXRejectedError, Error);\nmodule.exports = TXRejectedError;","map":{"version":3,"names":["inherits","require","TXRejectedError","message","Error","captureStackTrace","constructor","name","module","exports"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/lib/utils/txrejectederror.js"],"sourcesContent":["var inherits = require(\"util\").inherits;\n\n// raised when the transaction is rejected prior to running it in the EVM.\nfunction TXRejectedError(message) {\n  // Why not just Error.apply(this, [message])? See\n  // https://gist.github.com/justmoon/15511f92e5216fa2624b#anti-patterns\n  Error.captureStackTrace(this, this.constructor);\n  this.name = this.constructor.name;\n  this.message = message;\n}\n\ninherits(TXRejectedError, Error);\n\nmodule.exports = TXRejectedError;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,MAAD,CAAP,CAAgBD,QAA/B,C,CAEA;;;AACA,SAASE,eAAT,CAAyBC,OAAzB,EAAkC;EAChC;EACA;EACAC,KAAK,CAACC,iBAAN,CAAwB,IAAxB,EAA8B,KAAKC,WAAnC;EACA,KAAKC,IAAL,GAAY,KAAKD,WAAL,CAAiBC,IAA7B;EACA,KAAKJ,OAAL,GAAeA,OAAf;AACD;;AAEDH,QAAQ,CAACE,eAAD,EAAkBE,KAAlB,CAAR;AAEAI,MAAM,CAACC,OAAP,GAAiBP,eAAjB"},"metadata":{},"sourceType":"script"}