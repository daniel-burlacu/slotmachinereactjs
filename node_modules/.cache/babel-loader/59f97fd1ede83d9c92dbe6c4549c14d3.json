{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\Mint.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport '../assets/css/App.css';\nimport { ethers } from \"ethers\";\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/abi.json';\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst cors = require(\"cors\");\n\nconst Mint = props => {\n  _s();\n\n  const [mintAmount, setMintAmount] = useState(0);\n  const [leftToMint, setLeftToMint] = useState(0);\n\n  const howManyNFTsAreLeft = async () => {\n    let totalNFT = \"\";\n    let mintedNFT = \"\";\n    totalNFT = await props.contract.methods.getMaxSupply().call(); //to be changed into getNFTBalance\n\n    mintedNFT = await props.contract.methods.getNFTBalance().call();\n    console.log(\"My totalNFT's in howManyNFTsAreLeft is : \" + totalNFT);\n    console.log(\"My total mintedNFT is\" + mintedNFT);\n    let nftLeftToMint = totalNFT - mintedNFT;\n    setLeftToMint(nftLeftToMint);\n    console.log(\"Total NFT's left to mint \" + nftLeftToMint);\n  };\n\n  const handleSubmit = async () => {\n    if (mintAmount > 0 && mintAmount < 1001) {\n      try {\n        const {\n          ethereum\n        } = window;\n\n        if (ethereum) {\n          let cost = await props.contract.cost();\n          cost = cost * mintAmount;\n          console.log(\"Price is: \" + cost);\n          let transaction = await props.contract.mint(mintAmount, {\n            value: cost\n          });\n          console.log(\"Transaction : \" + transaction);\n          let receipt = await transaction.wait;\n          alert(\"Minted !! You can see transaction here:\" + \"<a href=\" + `https://mumbai.polygonscan.com/tx/${transaction.hash}` + \">Transaction</a>\"); // await axios.get(`https://mumbai.polygonscan.com/tx/${transaction.hash}`)\n          // .then(resp => {\n          //     response=resp.data;\n          //     console.log(\"My resonse data in get is: \"+response);\n          // });\n\n          await howManyNFTsAreLeft();\n          setMintAmount(0);\n        } else {\n          console.log(\"Ethereum object does not exist !\");\n        }\n      } catch (err) {\n        console.log(\"This is myerror\" + err);\n      }\n    } else {\n      if (mintAmount === 0) {\n        alert(\"You need to mint at least 1 NFT\");\n      } else if (mintAmount > 1000) {\n        alert(\"Holly Molly what do you wanna do ? Hold your horses and leave some for the others too!!! \");\n      } else {\n        alert(\"Number only !!!\");\n      }\n    } //    let nftTx = await contract.mint(mintAmount);\n    //    console.log(\"We are in handleSubmit: \"+mintAmount);\n    //mintAmount.preventDefault();\n    //,{ gasPrice: 33e9 }\n    //  let gasPrice = await props.contract.getGasPrice();\n    // console.log(\"Gas price is: \"+gasPrice);\n    //   /  let nftTx = await contract.mint(mintAmount);\n    //   console.log('Mining....', nftTx.hash)\n    //   let tx= nftTx.wait();\n    //  let nftTx = await props.contract.mint(mintAmount);\n    //  let tx = nftTx.wait();\n    //   console.log(\"Mined!\", tx);\n    // console.log(\"Mined!\", tx);\n    //await contract.withdrawal(mintAmount, \"dbabe1135898ac301cfb00e6ce2122515ccae2390fc4c304eef3523a8f69843b\");\n    // howManyNFTsAreLeft();\n    //  alert(`We have minted ${mintAmount}`)\n\n  };\n\n  useEffect(() => {\n    howManyNFTsAreLeft();\n  }, [mintAmount]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-mint\",\n          children: [\"NFT's left to mint:\", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p-welcomeMint\",\n            children: leftToMint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 14\n          }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"Mint Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: mintAmount,\n            onChange: e => setMintAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-mint\",\n          children: \"Price per/NFT is 10 Matic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"form-submit-button\",\n      onClick: () => {\n        handleSubmit(mintAmount);\n      },\n      children: \"Mint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Mint, \"3GhxCDAq2ecw7JVLBNtpIVT2PU8=\");\n\n_c = Mint;\nexport default Mint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mint\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ethers","PFPRacerNFT","wait","axios","cors","require","Mint","props","mintAmount","setMintAmount","leftToMint","setLeftToMint","howManyNFTsAreLeft","totalNFT","mintedNFT","contract","methods","getMaxSupply","call","getNFTBalance","console","log","nftLeftToMint","handleSubmit","ethereum","window","cost","transaction","mint","value","receipt","alert","hash","err","e","target"],"sources":["F:/Games/slotmachinereact/src/components/Mint.js"],"sourcesContent":["import  React, { useEffect, useState, useRef } from \"react\";\r\nimport '../assets/css/App.css';\r\nimport {ethers} from \"ethers\";\r\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/abi.json';\r\nimport { wait } from \"@testing-library/user-event/dist/utils\";\r\nimport axios from 'axios';\r\nconst cors = require(\"cors\");\r\n\r\nconst Mint = (props) =>{\r\n    const [mintAmount, setMintAmount] = useState(0);\r\n    const [leftToMint, setLeftToMint] = useState(0);\r\n\r\n    const howManyNFTsAreLeft = async () =>{\r\n      let totalNFT=\"\";\r\n      let mintedNFT=\"\";\r\n\r\n      totalNFT = await props.contract.methods.getMaxSupply().call();//to be changed into getNFTBalance\r\n      mintedNFT= await props.contract.methods.getNFTBalance().call(); \r\n      \r\n        console.log(\"My totalNFT's in howManyNFTsAreLeft is : \"+totalNFT);\r\n        console.log(\"My total mintedNFT is\"+mintedNFT);\r\n        let nftLeftToMint = totalNFT - mintedNFT;\r\n        setLeftToMint(nftLeftToMint);\r\n        console.log(\"Total NFT's left to mint \"+nftLeftToMint);\r\n      }\r\n\r\nconst handleSubmit= async() =>{\r\n    if(mintAmount>0&&mintAmount<1001){\r\n        try{\r\n            const{ethereum}=window;\r\n\r\n            if(ethereum){\r\n   \r\n                let cost = await props.contract.cost();\r\n                cost = cost*mintAmount;\r\n                console.log(\"Price is: \"+cost);\r\n\r\n                let transaction = await props.contract.mint(mintAmount, {value: cost});\r\n                console.log(\"Transaction : \"+transaction);\r\n                let receipt = await transaction.wait;\r\n        \r\n                alert(\"Minted !! You can see transaction here:\" +\"<a href=\"+`https://mumbai.polygonscan.com/tx/${transaction.hash}`+\">Transaction</a>\");\r\n            \r\n                // await axios.get(`https://mumbai.polygonscan.com/tx/${transaction.hash}`)\r\n                // .then(resp => {\r\n                //     response=resp.data;\r\n                //     console.log(\"My resonse data in get is: \"+response);\r\n                // });\r\n               \r\n                await howManyNFTsAreLeft();\r\n                setMintAmount(0);\r\n             } else{\r\n                console.log(\"Ethereum object does not exist !\");\r\n             }   \r\n        }\r\n        catch(err){\r\n            console.log(\"This is myerror\"+err);\r\n        }\r\n     \r\n\r\n    }else{\r\n      if(mintAmount===0){\r\n        alert(\"You need to mint at least 1 NFT\");\r\n      }else if(mintAmount >1000){\r\n        alert(\"Holly Molly what do you wanna do ? Hold your horses and leave some for the others too!!! \");\r\n      }else{\r\n        alert(\"Number only !!!\")\r\n      }\r\n    }\r\n//    let nftTx = await contract.mint(mintAmount);\r\n//    console.log(\"We are in handleSubmit: \"+mintAmount);\r\n    //mintAmount.preventDefault();\r\n//,{ gasPrice: 33e9 }\r\n  //  let gasPrice = await props.contract.getGasPrice();\r\n    \r\n   // console.log(\"Gas price is: \"+gasPrice);\r\n//   /  let nftTx = await contract.mint(mintAmount);\r\n //   console.log('Mining....', nftTx.hash)\r\n //   let tx= nftTx.wait();\r\n  //  let nftTx = await props.contract.mint(mintAmount);\r\n  //  let tx = nftTx.wait();\r\n //   console.log(\"Mined!\", tx);\r\n   // console.log(\"Mined!\", tx);\r\n   //await contract.withdrawal(mintAmount, \"dbabe1135898ac301cfb00e6ce2122515ccae2390fc4c304eef3523a8f69843b\");\r\n    // howManyNFTsAreLeft();\r\n  //  alert(`We have minted ${mintAmount}`)\r\n    \r\n}\r\n\r\n    useEffect(()=>{\r\n        howManyNFTsAreLeft();\r\n    },[mintAmount])\r\n\r\n      return (\r\n        <>\r\n        <div className=\"div-form\">\r\n        <form className=\"form\">\r\n        <label className=\"label-mint\">\r\n             NFT's left to mint:\r\n             <p className=\"p-welcomeMint\">{leftToMint}</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </label>\r\n          <label className=\"form-label\">\r\n            Mint Amount:\r\n            <input\r\n              type=\"text\"\r\n              value={mintAmount}\r\n              onChange={e => setMintAmount(e.target.value)}\r\n            />\r\n          </label>\r\n          <label className=\"label-mint\">\r\n            Price per/NFT is 10 Matic\r\n            </label>\r\n        </form>\r\n        </div>\r\n     <button className=\"form-submit-button\" onClick={()=>{handleSubmit(mintAmount)}}>Mint</button>\r\n     </>\r\n      );\r\n}\r\n\r\nexport default Mint;"],"mappings":"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"},"metadata":{},"sourceType":"module"}