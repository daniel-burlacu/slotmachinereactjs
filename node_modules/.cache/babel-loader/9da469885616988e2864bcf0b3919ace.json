{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\Reel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, forwardRef } from \"react\";\nimport Constants from \"../Constants\";\nimport Symbol from \"./Symbol\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reel = props => {\n  _s();\n\n  //42 symbols\n  //  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPKKQQAAG\";\n  //const symbols = \"DDDGNNSS\";\n  const symbols = Constants.REEL_SYMBOLS;\n  let reelSymbols = \"\";\n  let reelRef = useRef([]);\n  let list = [];\n  let reel = [];\n\n  const mappingSymbols = () => {\n    reelSymbols.map((el, idx) => {\n      return reel[idx] = el;\n    });\n  };\n\n  const mappingSymbolsReturn = () => {\n    list = reelSymbols.map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(Symbol, {\n        symbol: el,\n        index: idx,\n        spin: props.gameOn,\n        ref: ref => {\n          this.reelRef[idx] = ref;\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    });\n    console.log(\"My return object is: \" + list);\n  };\n\n  if (props.gameOn === 0) {\n    reelSymbols = symbols[props.index].split(\"\");\n  } else {\n    reelSymbols = symbols[props.index].repeat(Constants.REELS_REPEAT).split(\"\");\n    mappingSymbols();\n    mappingSymbolsReturn();\n    console.log(\"My gameOn is: \" + props.gameOn + \" , my reel is:\" + reel);\n  }\n\n  let position = reelSymbols.length - Constants.SYMBOLS;\n\n  const highLightAtIndex = (index, highLight) => {\n    reelRef[position + index].setActive(highLight);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reel\",\n    children: reelSymbols.map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(Symbol, {\n        symbol: el,\n        index: idx,\n        spin: props.gameOn\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reel, \"1qRp6ocMGgKYKzFLqc8RKJEG6n8=\");\n\n_c = Reel;\nexport default Reel;\n/*\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Reel\");","map":{"version":3,"names":["React","useState","useRef","useEffect","forwardRef","Constants","Symbol","Reel","props","symbols","REEL_SYMBOLS","reelSymbols","reelRef","list","reel","mappingSymbols","map","el","idx","mappingSymbolsReturn","gameOn","ref","console","log","index","split","repeat","REELS_REPEAT","position","length","SYMBOLS","highLightAtIndex","highLight","setActive"],"sources":["F:/Games/slotmachinereact/src/components/Reel.js"],"sourcesContent":["import React, { useState, useRef, useEffect, forwardRef } from \"react\";\r\nimport Constants from \"../Constants\";\r\nimport Symbol from \"./Symbol\";\r\n\r\nconst Reel = (props) => {\r\n  //42 symbols\r\n  //  const symbols = \"DDDGNNSSVVVCCFFRRYYIIJJZZMMOOLLTTPPKKQQAAG\";\r\n  //const symbols = \"DDDGNNSS\";\r\n  const symbols = Constants.REEL_SYMBOLS;\r\n \r\n  let reelSymbols = \"\";\r\n  let reelRef = useRef([]);\r\n  let list = [];\r\n  let reel =[];\r\n\r\n  const mappingSymbols = () => {\r\n     reelSymbols.map((el, idx) => {\r\n      return reel[idx]=el;\r\n    });\r\n  }\r\n\r\n  const mappingSymbolsReturn = () =>{\r\n   list = reelSymbols.map((el, idx) => {\r\n      return <Symbol symbol={el} key={idx} index={idx} spin={props.gameOn} ref={(ref) => { this.reelRef[idx]=ref; }}/>;\r\n    })\r\n\r\n    console.log(\"My return object is: \"+list);\r\n  }\r\n  \r\n  if (props.gameOn === 0) {\r\n    reelSymbols = symbols[props.index].split(\"\");\r\n  } else {\r\n   \r\n    reelSymbols = symbols[props.index].repeat(Constants.REELS_REPEAT).split(\"\");  \r\n    mappingSymbols();\r\n    mappingSymbolsReturn();\r\n\r\n    console.log(\"My gameOn is: \"+props.gameOn+\" , my reel is:\"+reel);\r\n  }\r\n  let position = reelSymbols.length - Constants.SYMBOLS;\r\n\r\n  const highLightAtIndex = (index, highLight) => {\r\n    reelRef[position + index].setActive(highLight);\r\n  }\r\n\r\n  return (\r\n    <div className=\"reel\">\r\n      {reelSymbols.map((el, idx) => {\r\n        return <Symbol symbol={el} key={idx} index={idx} spin={props.gameOn} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Reel;\r\n\r\n/*\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G,\r\nD,D,D,G,N,N,S,S,V,V,V,C,C,F,F,R,R,Y,Y,I,I,J,J,Z,Z,M,M,O,O,L,L,T,T,P,P,B,B,Q,Q,A,A,G\r\n*/\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB;EACA;EACA;EACA,MAAMC,OAAO,GAAGJ,SAAS,CAACK,YAA1B;EAEA,IAAIC,WAAW,GAAG,EAAlB;EACA,IAAIC,OAAO,GAAGV,MAAM,CAAC,EAAD,CAApB;EACA,IAAIW,IAAI,GAAG,EAAX;EACA,IAAIC,IAAI,GAAE,EAAV;;EAEA,MAAMC,cAAc,GAAG,MAAM;IAC1BJ,WAAW,CAACK,GAAZ,CAAgB,CAACC,EAAD,EAAKC,GAAL,KAAa;MAC5B,OAAOJ,IAAI,CAACI,GAAD,CAAJ,GAAUD,EAAjB;IACD,CAFA;EAGF,CAJD;;EAMA,MAAME,oBAAoB,GAAG,MAAK;IACjCN,IAAI,GAAGF,WAAW,CAACK,GAAZ,CAAgB,CAACC,EAAD,EAAKC,GAAL,KAAa;MACjC,oBAAO,QAAC,MAAD;QAAQ,MAAM,EAAED,EAAhB;QAA8B,KAAK,EAAEC,GAArC;QAA0C,IAAI,EAAEV,KAAK,CAACY,MAAtD;QAA8D,GAAG,EAAGC,GAAD,IAAS;UAAE,KAAKT,OAAL,CAAaM,GAAb,IAAkBG,GAAlB;QAAwB;MAAtG,GAAyBH,GAAzB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFK,CAAP;IAICI,OAAO,CAACC,GAAR,CAAY,0BAAwBV,IAApC;EACD,CAND;;EAQA,IAAIL,KAAK,CAACY,MAAN,KAAiB,CAArB,EAAwB;IACtBT,WAAW,GAAGF,OAAO,CAACD,KAAK,CAACgB,KAAP,CAAP,CAAqBC,KAArB,CAA2B,EAA3B,CAAd;EACD,CAFD,MAEO;IAELd,WAAW,GAAGF,OAAO,CAACD,KAAK,CAACgB,KAAP,CAAP,CAAqBE,MAArB,CAA4BrB,SAAS,CAACsB,YAAtC,EAAoDF,KAApD,CAA0D,EAA1D,CAAd;IACAV,cAAc;IACdI,oBAAoB;IAEpBG,OAAO,CAACC,GAAR,CAAY,mBAAiBf,KAAK,CAACY,MAAvB,GAA8B,gBAA9B,GAA+CN,IAA3D;EACD;;EACD,IAAIc,QAAQ,GAAGjB,WAAW,CAACkB,MAAZ,GAAqBxB,SAAS,CAACyB,OAA9C;;EAEA,MAAMC,gBAAgB,GAAG,CAACP,KAAD,EAAQQ,SAAR,KAAsB;IAC7CpB,OAAO,CAACgB,QAAQ,GAAGJ,KAAZ,CAAP,CAA0BS,SAA1B,CAAoCD,SAApC;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,UACGrB,WAAW,CAACK,GAAZ,CAAgB,CAACC,EAAD,EAAKC,GAAL,KAAa;MAC5B,oBAAO,QAAC,MAAD;QAAQ,MAAM,EAAED,EAAhB;QAA8B,KAAK,EAAEC,GAArC;QAA0C,IAAI,EAAEV,KAAK,CAACY;MAAtD,GAAyBF,GAAzB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAhDD;;GAAMX,I;;KAAAA,I;AAiDN,eAAeA,IAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}