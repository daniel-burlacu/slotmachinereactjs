{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportBigNumber = void 0;\n\nconst ethers_1 = require(\"ethers\");\n\nfunction supportBigNumber(Assertion, utils) {\n  Assertion.overwriteMethod('equals', override('eq', 'equal', utils));\n  Assertion.overwriteMethod('equal', override('eq', 'equal', utils));\n  Assertion.overwriteMethod('eq', override('eq', 'equal', utils));\n  Assertion.overwriteMethod('above', override('gt', 'above', utils));\n  Assertion.overwriteMethod('gt', override('gt', 'greater than', utils));\n  Assertion.overwriteMethod('below', override('lt', 'below', utils));\n  Assertion.overwriteMethod('lt', override('lt', 'less than', utils));\n  Assertion.overwriteMethod('least', override('gte', 'at least', utils));\n  Assertion.overwriteMethod('gte', override('gte', 'greater than or equal', utils));\n  Assertion.overwriteMethod('most', override('lte', 'at most', utils));\n  Assertion.overwriteMethod('lte', override('lte', 'less than or equal', utils));\n  Assertion.overwriteMethod('within', overrideWithin(utils));\n  Assertion.overwriteMethod('closeTo', overrideCloseTo(utils));\n}\n\nexports.supportBigNumber = supportBigNumber;\n\nfunction override(method, name, utils) {\n  return _super => overwriteBigNumberFunction(method, name, _super, utils);\n}\n\nfunction overwriteBigNumberFunction(functionName, readableName, _super, chaiUtils) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const [actual] = args;\n    const expected = chaiUtils.flag(this, 'object');\n\n    if (chaiUtils.flag(this, 'doLength') && ethers_1.BigNumber.isBigNumber(actual)) {\n      _super.apply(this, [actual.toNumber()]);\n\n      return;\n    }\n\n    if (ethers_1.BigNumber.isBigNumber(expected) || ethers_1.BigNumber.isBigNumber(actual)) {\n      this.assert(ethers_1.BigNumber.from(expected)[functionName](actual), `Expected \"${expected}\" to be ${readableName} ${actual}`, `Expected \"${expected}\" NOT to be ${readableName} ${actual}`, expected, actual);\n    } else {\n      _super.apply(this, args);\n    }\n  };\n}\n\nfunction overrideWithin(utils) {\n  return _super => overwriteBigNumberWithin(_super, utils);\n}\n\nfunction overwriteBigNumberWithin(_super, chaiUtils) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    const [start, finish] = args;\n    const expected = chaiUtils.flag(this, 'object');\n\n    if (ethers_1.BigNumber.isBigNumber(expected) || ethers_1.BigNumber.isBigNumber(start) || ethers_1.BigNumber.isBigNumber(finish)) {\n      this.assert(ethers_1.BigNumber.from(start).lte(expected) && ethers_1.BigNumber.from(finish).gte(expected), `Expected \"${expected}\" to be within [${[start, finish]}]`, `Expected \"${expected}\" NOT to be within [${[start, finish]}]`, [start, finish], expected);\n    } else {\n      _super.apply(this, args);\n    }\n  };\n}\n\nfunction overrideCloseTo(utils) {\n  return _super => overwriteBigNumberCloseTo(_super, utils);\n}\n\nfunction overwriteBigNumberCloseTo(_super, chaiUtils) {\n  return function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    const [actual, delta] = args;\n    const expected = chaiUtils.flag(this, 'object');\n\n    if (ethers_1.BigNumber.isBigNumber(expected) || ethers_1.BigNumber.isBigNumber(actual) || ethers_1.BigNumber.isBigNumber(delta)) {\n      this.assert(ethers_1.BigNumber.from(expected).sub(actual).abs().lte(delta), `Expected \"${expected}\" to be within ${delta} of ${actual}`, `Expected \"${expected}\" NOT to be within ${delta} of ${actual}`, `A number between ${actual.sub(delta)} and ${actual.sub(delta)}`, expected);\n    } else {\n      _super.apply(this, args);\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","supportBigNumber","ethers_1","require","Assertion","utils","overwriteMethod","override","overrideWithin","overrideCloseTo","method","name","_super","overwriteBigNumberFunction","functionName","readableName","chaiUtils","args","actual","expected","flag","BigNumber","isBigNumber","apply","toNumber","assert","from","overwriteBigNumberWithin","start","finish","lte","gte","overwriteBigNumberCloseTo","delta","sub","abs"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/chai/dist/cjs/matchers/bigNumber.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.supportBigNumber = void 0;\nconst ethers_1 = require(\"ethers\");\nfunction supportBigNumber(Assertion, utils) {\n    Assertion.overwriteMethod('equals', override('eq', 'equal', utils));\n    Assertion.overwriteMethod('equal', override('eq', 'equal', utils));\n    Assertion.overwriteMethod('eq', override('eq', 'equal', utils));\n    Assertion.overwriteMethod('above', override('gt', 'above', utils));\n    Assertion.overwriteMethod('gt', override('gt', 'greater than', utils));\n    Assertion.overwriteMethod('below', override('lt', 'below', utils));\n    Assertion.overwriteMethod('lt', override('lt', 'less than', utils));\n    Assertion.overwriteMethod('least', override('gte', 'at least', utils));\n    Assertion.overwriteMethod('gte', override('gte', 'greater than or equal', utils));\n    Assertion.overwriteMethod('most', override('lte', 'at most', utils));\n    Assertion.overwriteMethod('lte', override('lte', 'less than or equal', utils));\n    Assertion.overwriteMethod('within', overrideWithin(utils));\n    Assertion.overwriteMethod('closeTo', overrideCloseTo(utils));\n}\nexports.supportBigNumber = supportBigNumber;\nfunction override(method, name, utils) {\n    return (_super) => overwriteBigNumberFunction(method, name, _super, utils);\n}\nfunction overwriteBigNumberFunction(functionName, readableName, _super, chaiUtils) {\n    return function (...args) {\n        const [actual] = args;\n        const expected = chaiUtils.flag(this, 'object');\n        if (chaiUtils.flag(this, 'doLength') && ethers_1.BigNumber.isBigNumber(actual)) {\n            _super.apply(this, [actual.toNumber()]);\n            return;\n        }\n        if (ethers_1.BigNumber.isBigNumber(expected) || ethers_1.BigNumber.isBigNumber(actual)) {\n            this.assert(ethers_1.BigNumber.from(expected)[functionName](actual), `Expected \"${expected}\" to be ${readableName} ${actual}`, `Expected \"${expected}\" NOT to be ${readableName} ${actual}`, expected, actual);\n        }\n        else {\n            _super.apply(this, args);\n        }\n    };\n}\nfunction overrideWithin(utils) {\n    return (_super) => overwriteBigNumberWithin(_super, utils);\n}\nfunction overwriteBigNumberWithin(_super, chaiUtils) {\n    return function (...args) {\n        const [start, finish] = args;\n        const expected = chaiUtils.flag(this, 'object');\n        if (ethers_1.BigNumber.isBigNumber(expected) || ethers_1.BigNumber.isBigNumber(start) || ethers_1.BigNumber.isBigNumber(finish)) {\n            this.assert(ethers_1.BigNumber.from(start).lte(expected) && ethers_1.BigNumber.from(finish).gte(expected), `Expected \"${expected}\" to be within [${[start, finish]}]`, `Expected \"${expected}\" NOT to be within [${[start, finish]}]`, [start, finish], expected);\n        }\n        else {\n            _super.apply(this, args);\n        }\n    };\n}\nfunction overrideCloseTo(utils) {\n    return (_super) => overwriteBigNumberCloseTo(_super, utils);\n}\nfunction overwriteBigNumberCloseTo(_super, chaiUtils) {\n    return function (...args) {\n        const [actual, delta] = args;\n        const expected = chaiUtils.flag(this, 'object');\n        if (ethers_1.BigNumber.isBigNumber(expected) || ethers_1.BigNumber.isBigNumber(actual) || ethers_1.BigNumber.isBigNumber(delta)) {\n            this.assert(ethers_1.BigNumber.from(expected).sub(actual).abs().lte(delta), `Expected \"${expected}\" to be within ${delta} of ${actual}`, `Expected \"${expected}\" NOT to be within ${delta} of ${actual}`, `A number between ${actual.sub(delta)} and ${actual.sub(delta)}`, expected);\n        }\n        else {\n            _super.apply(this, args);\n        }\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}