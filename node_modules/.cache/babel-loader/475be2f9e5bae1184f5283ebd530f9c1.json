{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst is_url_1 = __importDefault(require(\"is-url\"));\n\nconst request_1 = __importDefault(require(\"request\"));\n\nconst debug = debug_1.default(\"resolverengine:urlparser\");\n\nfunction UrlParser() {\n  return url => new Promise((resolve, reject) => {\n    if (!is_url_1.default(url)) {\n      return resolve(null);\n    }\n\n    request_1.default(url, (err, response, body) => {\n      if (err) {\n        return reject(err);\n      }\n\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\n        return resolve(body);\n      } else {\n        debug(`Got error: ${response.statusCode} ${response.statusMessage}`);\n        return resolve(null);\n      }\n    });\n  });\n}\n\nexports.UrlParser = UrlParser;","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;;AAGA,MAAMA,KAAK,GAAGC,gBAAM,0BAAN,CAAd;;AAEA,SAAgBC,SAAhB,GAAyB;EACvB,OAAQC,GAAD,IACL,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;IAC9B,IAAI,CAACC,iBAAMJ,GAAN,CAAL,EAAiB;MACf,OAAOE,OAAO,CAAC,IAAD,CAAd;IACD;;IACDG,kBAAQL,GAAR,EAAa,CAACM,GAAD,EAAMC,QAAN,EAAgBC,IAAhB,KAAwB;MACnC,IAAIF,GAAJ,EAAS;QACP,OAAOH,MAAM,CAACG,GAAD,CAAb;MACD;;MACD,IAAIC,QAAQ,CAACE,UAAT,IAAuB,GAAvB,IAA8BF,QAAQ,CAACE,UAAT,IAAuB,GAAzD,EAA8D;QAC5D,OAAOP,OAAO,CAACM,IAAD,CAAd;MACD,CAFD,MAEO;QACLX,KAAK,CAAC,cAAcU,QAAQ,CAACE,UAAU,IAAIF,QAAQ,CAACG,aAAa,EAA5D,CAAL;QACA,OAAOR,OAAO,CAAC,IAAD,CAAd;MACD;IACF,CAVD;EAWD,CAfD,CADF;AAiBD;;AAlBDS","names":["debug","debug_1","UrlParser","url","Promise","resolve","reject","is_url_1","request_1","err","response","body","statusCode","statusMessage","exports"],"sources":["F:\\Games\\slotmachinereact\\node_modules\\@resolver-engine\\core\\src\\parsers\\urlparser.ts"],"sourcesContent":["import Debug from \"debug\";\nimport isUrl from \"is-url\";\nimport request from \"request\";\nimport { SubParser } from \"./subparser\";\n\nconst debug = Debug(\"resolverengine:urlparser\");\n\nexport function UrlParser(): SubParser<string> {\n  return (url: string): Promise<string | null> =>\n    new Promise((resolve, reject) => {\n      if (!isUrl(url)) {\n        return resolve(null);\n      }\n      request(url, (err, response, body) => {\n        if (err) {\n          return reject(err);\n        }\n        if (response.statusCode >= 200 && response.statusCode <= 299) {\n          return resolve(body);\n        } else {\n          debug(`Got error: ${response.statusCode} ${response.statusMessage}`);\n          return resolve(null);\n        }\n      });\n    });\n}\n"]},"metadata":{},"sourceType":"script"}