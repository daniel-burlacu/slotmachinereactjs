{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportCalledOnContractWith = void 0;\n\nconst calledOnContractValidators_1 = require(\"./calledOnContractValidators\");\n\nfunction supportCalledOnContractWith(Assertion) {\n  Assertion.addMethod('calledOnContractWith', function (contract, parameters) {\n    const fnName = this._obj;\n    calledOnContractValidators_1.validateContract(contract);\n    calledOnContractValidators_1.validateMockProvider(contract.provider);\n    calledOnContractValidators_1.validateFnName(fnName, contract);\n    const funCallData = contract.interface.encodeFunctionData(fnName, parameters);\n    this.assert(contract.provider.callHistory.some(call => call.address === contract.address && call.data === funCallData), 'Expected contract function with parameters to be called', 'Expected contract function with parameters NOT to be called', undefined);\n  });\n}\n\nexports.supportCalledOnContractWith = supportCalledOnContractWith;","map":{"version":3,"names":["Object","defineProperty","exports","value","supportCalledOnContractWith","calledOnContractValidators_1","require","Assertion","addMethod","contract","parameters","fnName","_obj","validateContract","validateMockProvider","provider","validateFnName","funCallData","interface","encodeFunctionData","assert","callHistory","some","call","address","data","undefined"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/chai/dist/cjs/matchers/calledOnContract/calledOnContractWith.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.supportCalledOnContractWith = void 0;\nconst calledOnContractValidators_1 = require(\"./calledOnContractValidators\");\nfunction supportCalledOnContractWith(Assertion) {\n    Assertion.addMethod('calledOnContractWith', function (contract, parameters) {\n        const fnName = this._obj;\n        calledOnContractValidators_1.validateContract(contract);\n        calledOnContractValidators_1.validateMockProvider(contract.provider);\n        calledOnContractValidators_1.validateFnName(fnName, contract);\n        const funCallData = contract.interface.encodeFunctionData(fnName, parameters);\n        this.assert(contract.provider.callHistory.some(call => call.address === contract.address && call.data === funCallData), 'Expected contract function with parameters to be called', 'Expected contract function with parameters NOT to be called', undefined);\n    });\n}\nexports.supportCalledOnContractWith = supportCalledOnContractWith;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,2BAAR,GAAsC,KAAK,CAA3C;;AACA,MAAMC,4BAA4B,GAAGC,OAAO,CAAC,8BAAD,CAA5C;;AACA,SAASF,2BAAT,CAAqCG,SAArC,EAAgD;EAC5CA,SAAS,CAACC,SAAV,CAAoB,sBAApB,EAA4C,UAAUC,QAAV,EAAoBC,UAApB,EAAgC;IACxE,MAAMC,MAAM,GAAG,KAAKC,IAApB;IACAP,4BAA4B,CAACQ,gBAA7B,CAA8CJ,QAA9C;IACAJ,4BAA4B,CAACS,oBAA7B,CAAkDL,QAAQ,CAACM,QAA3D;IACAV,4BAA4B,CAACW,cAA7B,CAA4CL,MAA5C,EAAoDF,QAApD;IACA,MAAMQ,WAAW,GAAGR,QAAQ,CAACS,SAAT,CAAmBC,kBAAnB,CAAsCR,MAAtC,EAA8CD,UAA9C,CAApB;IACA,KAAKU,MAAL,CAAYX,QAAQ,CAACM,QAAT,CAAkBM,WAAlB,CAA8BC,IAA9B,CAAmCC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiBf,QAAQ,CAACe,OAA1B,IAAqCD,IAAI,CAACE,IAAL,KAAcR,WAA9F,CAAZ,EAAwH,yDAAxH,EAAmL,6DAAnL,EAAkPS,SAAlP;EACH,CAPD;AAQH;;AACDxB,OAAO,CAACE,2BAAR,GAAsCA,2BAAtC"},"metadata":{},"sourceType":"script"}