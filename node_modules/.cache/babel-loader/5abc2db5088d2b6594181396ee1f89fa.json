{"ast":null,"code":"var Subprovider = require(\"web3-provider-engine/subproviders/subprovider.js\");\n\nvar inherits = require(\"util\").inherits;\n\ninherits(GethDefaults, Subprovider);\nmodule.exports = GethDefaults;\n\nfunction GethDefaults() {} // Massage eth_estimateGas requests, setting default data (e.g., from) if\n// not specified. This is here specifically to make the testrpc\n// react like Geth.\n\n\nGethDefaults.prototype.handleRequest = function (payload, next, end) {\n  if (payload.method !== \"eth_estimateGas\" && payload.method !== \"eth_call\") {\n    return next();\n  }\n\n  var params = payload.params[0];\n\n  if (params.from == null) {\n    this.emitPayload({\n      method: \"eth_coinbase\"\n    }, function (err, result) {\n      if (err) {\n        return end(err);\n      }\n\n      var coinbase = result.result;\n      params.from = coinbase;\n      next();\n    });\n  } else {\n    next();\n  }\n};","map":{"version":3,"names":["Subprovider","require","inherits","GethDefaults","module","exports","prototype","handleRequest","payload","next","end","method","params","from","emitPayload","err","result","coinbase"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/lib/subproviders/gethdefaults.js"],"sourcesContent":["var Subprovider = require(\"web3-provider-engine/subproviders/subprovider.js\");\nvar inherits = require(\"util\").inherits;\n\ninherits(GethDefaults, Subprovider);\n\nmodule.exports = GethDefaults;\n\nfunction GethDefaults() {}\n\n// Massage eth_estimateGas requests, setting default data (e.g., from) if\n// not specified. This is here specifically to make the testrpc\n// react like Geth.\nGethDefaults.prototype.handleRequest = function(payload, next, end) {\n  if (payload.method !== \"eth_estimateGas\" && payload.method !== \"eth_call\") {\n    return next();\n  }\n\n  var params = payload.params[0];\n\n  if (params.from == null) {\n    this.emitPayload(\n      {\n        method: \"eth_coinbase\"\n      },\n      function(err, result) {\n        if (err) {\n          return end(err);\n        }\n\n        var coinbase = result.result;\n\n        params.from = coinbase;\n        next();\n      }\n    );\n  } else {\n    next();\n  }\n};\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,kDAAD,CAAzB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,MAAD,CAAP,CAAgBC,QAA/B;;AAEAA,QAAQ,CAACC,YAAD,EAAeH,WAAf,CAAR;AAEAI,MAAM,CAACC,OAAP,GAAiBF,YAAjB;;AAEA,SAASA,YAAT,GAAwB,CAAE,C,CAE1B;AACA;AACA;;;AACAA,YAAY,CAACG,SAAb,CAAuBC,aAAvB,GAAuC,UAASC,OAAT,EAAkBC,IAAlB,EAAwBC,GAAxB,EAA6B;EAClE,IAAIF,OAAO,CAACG,MAAR,KAAmB,iBAAnB,IAAwCH,OAAO,CAACG,MAAR,KAAmB,UAA/D,EAA2E;IACzE,OAAOF,IAAI,EAAX;EACD;;EAED,IAAIG,MAAM,GAAGJ,OAAO,CAACI,MAAR,CAAe,CAAf,CAAb;;EAEA,IAAIA,MAAM,CAACC,IAAP,IAAe,IAAnB,EAAyB;IACvB,KAAKC,WAAL,CACE;MACEH,MAAM,EAAE;IADV,CADF,EAIE,UAASI,GAAT,EAAcC,MAAd,EAAsB;MACpB,IAAID,GAAJ,EAAS;QACP,OAAOL,GAAG,CAACK,GAAD,CAAV;MACD;;MAED,IAAIE,QAAQ,GAAGD,MAAM,CAACA,MAAtB;MAEAJ,MAAM,CAACC,IAAP,GAAcI,QAAd;MACAR,IAAI;IACL,CAbH;EAeD,CAhBD,MAgBO;IACLA,IAAI;EACL;AACF,CA1BD"},"metadata":{},"sourceType":"script"}