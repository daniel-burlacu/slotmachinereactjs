{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* tslint:disable:no-console */\n\nconst chalk_1 = require(\"chalk\");\n\nconst {\n  gray,\n  green,\n  yellow,\n  red\n} = chalk_1.default;\nconst loggerLvlToNumber = {\n  verbose: 2,\n  info: 1,\n  error: 0\n};\n\nclass ConsoleLogger {\n  constructor(name, lvl) {\n    this.name = name;\n    this.lvl = lvl;\n  }\n\n  prefix() {\n    return `${gray(this.name)}:`;\n  }\n\n  info() {\n    if (loggerLvlToNumber[\"info\"] <= loggerLvlToNumber[this.lvl]) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      console.info(this.prefix(), ...args);\n    }\n  }\n\n  verbose() {\n    if (loggerLvlToNumber[\"verbose\"] <= loggerLvlToNumber[this.lvl]) {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      console.info(this.prefix(), ...args);\n    }\n  }\n\n  error() {\n    if (loggerLvlToNumber[\"error\"] <= loggerLvlToNumber[this.lvl]) {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      console.error(this.prefix(), ...args.map(m => red(m)));\n    }\n  }\n\n  warn() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    console.info(this.prefix(), ...args.map(m => yellow(m)));\n  }\n\n  accent(s) {\n    return green(s);\n  }\n\n  childLogger(name) {\n    return new ConsoleLogger(name, this.lvl);\n  }\n\n}\n\nexports.ConsoleLogger = ConsoleLogger;\n\nclass NoLogger {\n  constructor() {\n    this.lvl = \"error\";\n  }\n\n  info() {}\n\n  verbose() {}\n\n  error() {}\n\n  warn() {}\n\n  accent(s) {\n    return s;\n  }\n\n  childLogger() {\n    return new NoLogger();\n  }\n\n}\n\nexports.NoLogger = NoLogger;","map":{"version":3,"names":["Object","defineProperty","exports","value","chalk_1","require","gray","green","yellow","red","default","loggerLvlToNumber","verbose","info","error","ConsoleLogger","constructor","name","lvl","prefix","args","console","map","m","warn","accent","s","childLogger","NoLogger"],"sources":["F:/Games/slotmachinereact/node_modules/ts-generator/dist/logger.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:no-console */\nconst chalk_1 = require(\"chalk\");\nconst { gray, green, yellow, red } = chalk_1.default;\nconst loggerLvlToNumber = {\n    verbose: 2,\n    info: 1,\n    error: 0,\n};\nclass ConsoleLogger {\n    constructor(name, lvl) {\n        this.name = name;\n        this.lvl = lvl;\n    }\n    prefix() {\n        return `${gray(this.name)}:`;\n    }\n    info(...args) {\n        if (loggerLvlToNumber[\"info\"] <= loggerLvlToNumber[this.lvl]) {\n            console.info(this.prefix(), ...args);\n        }\n    }\n    verbose(...args) {\n        if (loggerLvlToNumber[\"verbose\"] <= loggerLvlToNumber[this.lvl]) {\n            console.info(this.prefix(), ...args);\n        }\n    }\n    error(...args) {\n        if (loggerLvlToNumber[\"error\"] <= loggerLvlToNumber[this.lvl]) {\n            console.error(this.prefix(), ...args.map((m) => red(m)));\n        }\n    }\n    warn(...args) {\n        console.info(this.prefix(), ...args.map((m) => yellow(m)));\n    }\n    accent(s) {\n        return green(s);\n    }\n    childLogger(name) {\n        return new ConsoleLogger(name, this.lvl);\n    }\n}\nexports.ConsoleLogger = ConsoleLogger;\nclass NoLogger {\n    constructor() {\n        this.lvl = \"error\";\n    }\n    info() { }\n    verbose() { }\n    error() { }\n    warn() { }\n    accent(s) {\n        return s;\n    }\n    childLogger() {\n        return new NoLogger();\n    }\n}\nexports.NoLogger = NoLogger;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACA;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAM;EAAEC,IAAF;EAAQC,KAAR;EAAeC,MAAf;EAAuBC;AAAvB,IAA+BL,OAAO,CAACM,OAA7C;AACA,MAAMC,iBAAiB,GAAG;EACtBC,OAAO,EAAE,CADa;EAEtBC,IAAI,EAAE,CAFgB;EAGtBC,KAAK,EAAE;AAHe,CAA1B;;AAKA,MAAMC,aAAN,CAAoB;EAChBC,WAAW,CAACC,IAAD,EAAOC,GAAP,EAAY;IACnB,KAAKD,IAAL,GAAYA,IAAZ;IACA,KAAKC,GAAL,GAAWA,GAAX;EACH;;EACDC,MAAM,GAAG;IACL,OAAQ,GAAEb,IAAI,CAAC,KAAKW,IAAN,CAAY,GAA1B;EACH;;EACDJ,IAAI,GAAU;IACV,IAAIF,iBAAiB,CAAC,MAAD,CAAjB,IAA6BA,iBAAiB,CAAC,KAAKO,GAAN,CAAlD,EAA8D;MAAA,kCAD1DE,IAC0D;QAD1DA,IAC0D;MAAA;;MAC1DC,OAAO,CAACR,IAAR,CAAa,KAAKM,MAAL,EAAb,EAA4B,GAAGC,IAA/B;IACH;EACJ;;EACDR,OAAO,GAAU;IACb,IAAID,iBAAiB,CAAC,SAAD,CAAjB,IAAgCA,iBAAiB,CAAC,KAAKO,GAAN,CAArD,EAAiE;MAAA,mCAD1DE,IAC0D;QAD1DA,IAC0D;MAAA;;MAC7DC,OAAO,CAACR,IAAR,CAAa,KAAKM,MAAL,EAAb,EAA4B,GAAGC,IAA/B;IACH;EACJ;;EACDN,KAAK,GAAU;IACX,IAAIH,iBAAiB,CAAC,OAAD,CAAjB,IAA8BA,iBAAiB,CAAC,KAAKO,GAAN,CAAnD,EAA+D;MAAA,mCAD1DE,IAC0D;QAD1DA,IAC0D;MAAA;;MAC3DC,OAAO,CAACP,KAAR,CAAc,KAAKK,MAAL,EAAd,EAA6B,GAAGC,IAAI,CAACE,GAAL,CAAUC,CAAD,IAAOd,GAAG,CAACc,CAAD,CAAnB,CAAhC;IACH;EACJ;;EACDC,IAAI,GAAU;IAAA,mCAANJ,IAAM;MAANA,IAAM;IAAA;;IACVC,OAAO,CAACR,IAAR,CAAa,KAAKM,MAAL,EAAb,EAA4B,GAAGC,IAAI,CAACE,GAAL,CAAUC,CAAD,IAAOf,MAAM,CAACe,CAAD,CAAtB,CAA/B;EACH;;EACDE,MAAM,CAACC,CAAD,EAAI;IACN,OAAOnB,KAAK,CAACmB,CAAD,CAAZ;EACH;;EACDC,WAAW,CAACV,IAAD,EAAO;IACd,OAAO,IAAIF,aAAJ,CAAkBE,IAAlB,EAAwB,KAAKC,GAA7B,CAAP;EACH;;AA/Be;;AAiCpBhB,OAAO,CAACa,aAAR,GAAwBA,aAAxB;;AACA,MAAMa,QAAN,CAAe;EACXZ,WAAW,GAAG;IACV,KAAKE,GAAL,GAAW,OAAX;EACH;;EACDL,IAAI,GAAG,CAAG;;EACVD,OAAO,GAAG,CAAG;;EACbE,KAAK,GAAG,CAAG;;EACXU,IAAI,GAAG,CAAG;;EACVC,MAAM,CAACC,CAAD,EAAI;IACN,OAAOA,CAAP;EACH;;EACDC,WAAW,GAAG;IACV,OAAO,IAAIC,QAAJ,EAAP;EACH;;AAbU;;AAef1B,OAAO,CAAC0B,QAAR,GAAmBA,QAAnB"},"metadata":{},"sourceType":"script"}