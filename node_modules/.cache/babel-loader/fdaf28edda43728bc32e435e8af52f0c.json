{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\ReelSet.js\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useEffect, useRef, useState } from \"react\";\nimport Constants from \"../Constants\";\nimport Bet from \"./Bet\";\nimport Withdrawal from \"./Withdrawal\";\nimport \"../assets/css/App.css\";\nimport Reel from \"./Reel\";\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet score = 2;\nlet bet = 0;\n\nconst ReelSet = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [rolling, setRolling] = useState(false);\n  const [gameOn, setGameOn] = useState(0);\n  let scoreRef = 0; //let score = 2;\n\n  let spinResults = [];\n  const reel = useRef();\n  let results = [];\n  let winningLines = [];\n  let countWin = 0;\n  let symbolSellection = [];\n  const symbols = Constants.REEL_SYMBOLS;\n\n  const handleScore = e => {\n    // /  const [gameScore, setGameScore] = useState({score:0, bet:0})\n    score = Math.round((score + e) * 100) / 100; //  console.log(\"mySetGameScore = \"+gameScore.score);\n    //setGameScore(score);\n    // props.dadCallback(score)\n  };\n\n  const drawScore = (lineNumberType, fool) => {\n    let newScore = 0;\n\n    if (fool) {\n      lineNumberType = 18;\n    }\n\n    switch (lineNumberType) {\n      case 0:\n        // top line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 1:\n        // middle line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 2:\n        // bottom line\n        //        audioWin.play();\n        newScore = 0.5;\n        break;\n\n      case 3:\n        // V shape starting bottom left\n        //        audioWin.play();\n        newScore = 0.2;\n        break;\n\n      case 4:\n        // V shape starting bottom right\n        //        audioWin.play();\n        newScore = 0.2;\n        break;\n\n      case 5:\n        // W shape starting top left\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 6:\n        // M shape starting bottom left\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 7:\n        // M shape on top half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 8:\n        // W shape on top half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 9:\n        //W shape on bottom half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 10:\n        // M shape on bottom half\n        //        audioWin.play();\n        newScore = 0.3;\n        break;\n\n      case 11:\n        // U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 12:\n        // inverse U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 13:\n        // U shape on bottom half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 14:\n        // inverse U shape on bottom half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 15:\n        // inverse U shape on top half\n        //        audioWin.play();\n        newScore = 0.1;\n        break;\n\n      case 16:\n        // Z shape from top left\n        //        audioWin.play();\n        newScore = 0.4;\n        break;\n\n      case 17:\n        // Z shape from bottom left\n        //        audioWin.play();\n        newScore = 0.4;\n        break;\n\n      case 18:\n        // Z shape from bottom left\n        //        audioWinBonus.play();\n        newScore = 100;\n        break;\n\n      default:\n        newScore = 0;\n    }\n\n    if (gameOn > 0) {\n      setMyScore(newScore);\n    }\n\n    return;\n  };\n\n  const checkLinesElements = symbol => {\n    countWin++;\n    let symNr = 0;\n    let fool = 0;\n\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      fool = 0;\n      symNr = 0;\n\n      for (let j = 0; j < Constants.LINES[i].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n\n        if (symbol === spinResults[indexI][indexJ]) {\n          symNr++;\n        }\n      }\n\n      if (fool + symNr === 5 && fool < 4) {\n        winningLines.push(i);\n      }\n    }\n\n    winningLines = uniq(winningLines);\n  };\n\n  const uniq = a => {\n    return a.sort().filter(function (item, pos, ary) {\n      return !pos || item !== ary[pos - 1];\n    });\n  };\n\n  const checkElements = () => {\n    let fool = 0;\n\n    for (let k = 0; k < 3; k++) {\n      fool = 0;\n\n      for (let i = 0; i < spinResults.length; i++) {\n        let symb = \"\";\n\n        for (let j = k; j < spinResults[i].length; j++) {\n          if (spinResults[i][j] !== \"D\") {\n            symb = spinResults[i][j];\n            j = spinResults[i].length;\n          } else {\n            fool++;\n            j = spinResults[i].length;\n          }\n        }\n\n        if (fool < 4 && symb !== \"\") {\n          symbolSellection.push(symb);\n        }\n      }\n    }\n\n    for (let i = 0; i < symbolSellection.length; i++) {\n      checkLinesElements(symbolSellection[i]);\n    }\n  };\n\n  const setBetZero = () => {\n    bet = 0;\n  };\n\n  const setMyScore = e => {\n    let scr = 0;\n\n    if (bet > 0 && e > 0) {\n      scr = scr + (e + bet * e);\n      scr = Math.round(scr * 100) / 100;\n    } else if (bet > 0 && e === 0) {\n      scr = scr - (e + bet * e);\n      scr = Math.round(scr * 100) / 100;\n    } else if (bet === 0 && e > 0) {\n      scr = Math.round((scr + e) * 100) / 100;\n    }\n\n    handleScore(scr); //  setScore(scr);\n  };\n\n  const checkFourFools = () => {\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      let fool = 0;\n\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n      }\n\n      if (fool === 4) {\n        winningLines.push(i);\n        drawScore(i, false);\n      }\n    }\n  };\n\n  const evaluateResults = () => {\n    checkFourFools();\n    checkElements(); //highLightWinningLines(0);\n\n    if (winningLines.length > 0) {\n      for (let i = 0; i < winningLines.length; i++) {\n        drawScore(winningLines[i], false);\n      }\n    } else {\n      if (score - bet >= 0.2) {\n        score = Math.round((score - bet) * 100) / 100; //  setScore(scr);\n        //handleScore(scr);\n\n        if (score < bet) {\n          setBetZero();\n        }\n      } else if (score - bet === 0) {\n        setBetZero();\n        score = 0; //  setScore(scr);\n        //handleScore(scr);\n      }\n    } //winningLines=[];\n\n  };\n\n  const checkFiveFools = () => {\n    let fl = false;\n\n    for (let i = 0; i < Constants.LINES.length; i++) {\n      let fool = 0;\n\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\n        let indexI = Constants.LINES[i][j][0];\n        let indexJ = Constants.LINES[i][j][1];\n\n        if (spinResults[indexI][indexJ] === \"D\") {\n          fool++;\n        }\n      }\n\n      if (fool === 5) {\n        fl = true;\n        winningLines.push(i);\n        drawScore(i, true); //  highLightWinningLines(0);\n\n        break;\n      }\n    }\n\n    return fl;\n  };\n\n  const checkWin = () => {\n    if (gameOn > 0) {\n      let fool = checkFiveFools();\n\n      if (!fool) {\n        evaluateResults();\n      }\n    }\n  };\n\n  const createResults = () => {\n    let myResults = [];\n    let j = 0;\n\n    for (let i = 0; i <= results.length; i++) {\n      myResults[j] = results[i];\n      j++;\n\n      if (j === 3) {\n        spinResults.push(myResults);\n        myResults = [];\n        j = 0;\n      }\n    }\n\n    checkWin(); // score=score+scr;\n    // handleScore();\n    // setScore(scr);\n  };\n\n  useEffect(() => {\n    console.log(\"My reels are: \" + reel.current.childNodes[0].children);\n    console.log(\"My useEffect reels length is: \" + results.length);\n    createResults();\n  }, [gameOn]);\n\n  const renderReels = () => {\n    let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(Reel, {\n        reel: el,\n        index: idx,\n        game: gameOn,\n        opacity: 1,\n        createArray: callbackCreateArray\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 14\n      }, this);\n    });\n    console.log(\"My reelList size is:\" + reelList.length);\n    console.log(\"My results list size is:\" + results.length);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: reelList\n    }, void 0, false);\n  };\n\n  const callbackBet = e => {\n    //bet=e;\n    //setBet(()=>({bet:e}));\n    bet = e;\n  };\n\n  const spinReel = () => {\n    if (bet === 0 && score > 0) {\n      alert(\"Please set a bet !!!\");\n    } else if (bet === 0 && score === 0) {\n      alert(\"Game Over !!! You are you are out of cash !!!\");\n    } else {\n      setGameOn(gameOn + 1);\n    }\n  };\n\n  const callbackCreateArray = reel => {\n    console.log(\"Receiving callback Array: \" + reel);\n    results.push(reel);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      id: \"jackpot\",\n      children: [\"Jackpot: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"playContainer\",\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"reelSet\",\n          ref: reel,\n          children: renderReels()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !rolling ? \"roll rolling\" : \"roll\",\n        onClick: () => {\n          spinReel();\n        },\n        disabled: rolling,\n        children: rolling ? \"Rolling...\" : \"ROLL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Withdrawal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Bet, {\n        score: score,\n        setBet: callbackBet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"score\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"COtPvNVngb8I2brDWQANmW0qrNA=\")), \"COtPvNVngb8I2brDWQANmW0qrNA=\");\n\n_c2 = ReelSet;\nexport default ReelSet;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReelSet$forwardRef\");\n$RefreshReg$(_c2, \"ReelSet\");","map":{"version":3,"names":["React","forwardRef","useEffect","useRef","useState","Constants","Bet","Withdrawal","Reel","motion","score","bet","ReelSet","props","ref","rolling","setRolling","gameOn","setGameOn","scoreRef","spinResults","reel","results","winningLines","countWin","symbolSellection","symbols","REEL_SYMBOLS","handleScore","e","Math","round","drawScore","lineNumberType","fool","newScore","setMyScore","checkLinesElements","symbol","symNr","i","LINES","length","j","indexI","indexJ","push","uniq","a","sort","filter","item","pos","ary","checkElements","k","symb","setBetZero","scr","checkFourFools","evaluateResults","checkFiveFools","fl","checkWin","createResults","myResults","console","log","current","childNodes","children","renderReels","reelList","Array","apply","REELS","map","el","idx","callbackCreateArray","callbackBet","spinReel","alert"],"sources":["F:/Games/slotmachinereact/src/components/ReelSet.js"],"sourcesContent":["import React, { forwardRef, useEffect, useRef, useState} from \"react\";\r\nimport Constants from \"../Constants\";\r\nimport Bet from \"./Bet\";\r\nimport Withdrawal from \"./Withdrawal\";\r\nimport \"../assets/css/App.css\";\r\nimport Reel from \"./Reel\";\r\nimport {motion} from 'framer-motion';\r\n\r\nlet score=2;\r\nlet bet=0;\r\n\r\nconst ReelSet = forwardRef((props, ref) => {\r\n  const [rolling, setRolling] = useState(false);\r\n  const [gameOn, setGameOn] = useState(0);\r\n\r\n  let scoreRef = 0;\r\n  //let score = 2;\r\n  let spinResults = [];\r\n\r\n  const reel= useRef();\r\n  let results= [];\r\n\r\n  let winningLines = [];\r\n  let countWin = 0;\r\n  let symbolSellection = [];\r\n  const symbols = Constants.REEL_SYMBOLS;\r\n\r\n\r\n  const handleScore = (e) => {\r\n    // /  const [gameScore, setGameScore] = useState({score:0, bet:0})\r\n    score = Math.round((score + e) * 100) / 100;\r\n\r\n    //  console.log(\"mySetGameScore = \"+gameScore.score);\r\n\r\n    //setGameScore(score);\r\n    // props.dadCallback(score)\r\n  };\r\n\r\n  const drawScore = (lineNumberType, fool) => {\r\n    let newScore = 0;\r\n    if (fool) {\r\n      lineNumberType = 18;\r\n    }\r\n    switch (lineNumberType) {\r\n      case 0: // top line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 1: // middle line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 2: // bottom line\r\n        //        audioWin.play();\r\n        newScore = 0.5;\r\n        break;\r\n      case 3: // V shape starting bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 4: // V shape starting bottom right\r\n        //        audioWin.play();\r\n        newScore = 0.2;\r\n        break;\r\n      case 5: // W shape starting top left\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 6: // M shape starting bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 7: // M shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 8: // W shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 9: //W shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 10: // M shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.3;\r\n        break;\r\n      case 11: // U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 12: // inverse U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 13: // U shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 14: // inverse U shape on bottom half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 15: // inverse U shape on top half\r\n        //        audioWin.play();\r\n        newScore = 0.1;\r\n        break;\r\n      case 16: // Z shape from top left\r\n        //        audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 17: // Z shape from bottom left\r\n        //        audioWin.play();\r\n        newScore = 0.4;\r\n        break;\r\n      case 18: // Z shape from bottom left\r\n        //        audioWinBonus.play();\r\n        newScore = 100;\r\n        break;\r\n      default:\r\n        newScore = 0;\r\n    }\r\n\r\n    if (gameOn > 0) {\r\n      setMyScore(newScore);\r\n    }\r\n    return;\r\n  };\r\n\r\n\r\n  const checkLinesElements = (symbol) => {\r\n    countWin++;\r\n    let symNr = 0;\r\n    let fool = 0;\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      fool = 0;\r\n      symNr = 0;\r\n      for (let j = 0; j < Constants.LINES[i].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n        if (symbol === spinResults[indexI][indexJ]) {\r\n          symNr++;\r\n        }\r\n      }\r\n      if (fool + symNr === 5 && fool < 4) {\r\n        winningLines.push(i);\r\n      }\r\n    }\r\n    winningLines = uniq(winningLines);\r\n  };\r\n\r\n  const uniq = (a) => {\r\n    return a.sort().filter(function (item, pos, ary) {\r\n      return !pos || item !== ary[pos - 1];\r\n    });\r\n  };\r\n\r\n  const checkElements = () => {\r\n    let fool = 0;\r\n    for (let k = 0; k < 3; k++) {\r\n      fool = 0;\r\n      for (let i = 0; i < spinResults.length; i++) {\r\n        let symb = \"\";\r\n        for (let j = k; j < spinResults[i].length; j++) {\r\n          if (spinResults[i][j] !== \"D\") {\r\n            symb = spinResults[i][j];\r\n            j = spinResults[i].length;\r\n          } else {\r\n            fool++;\r\n            j = spinResults[i].length;\r\n          }\r\n        }\r\n        if (fool < 4 && symb !== \"\") {\r\n          symbolSellection.push(symb);\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < symbolSellection.length; i++) {\r\n      checkLinesElements(symbolSellection[i]);\r\n    }\r\n  };\r\n\r\n  const setBetZero = () => {\r\n    bet = 0;\r\n  };\r\n\r\n  const setMyScore = (e) => {\r\n    let scr = 0;\r\n\r\n    if (bet > 0 && e > 0) {\r\n      scr = scr + (e + bet * e);\r\n      scr = Math.round(scr * 100) / 100;\r\n    } else if (bet > 0 && e === 0) {\r\n      scr = scr - (e + bet * e);\r\n     \r\n      scr = Math.round(scr * 100) / 100;\r\n    } else if (bet === 0 && e > 0) {\r\n    \r\n      scr = Math.round((scr + e) * 100) / 100;\r\n    }\r\n   \r\n    handleScore(scr);\r\n    //  setScore(scr);\r\n  };\r\n\r\n  const checkFourFools = () => {\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n   \r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n      }\r\n   \r\n      if (fool === 4) {\r\n        winningLines.push(i);\r\n        drawScore(i, false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const evaluateResults = () => {\r\n    checkFourFools();\r\n    checkElements();\r\n    //highLightWinningLines(0);\r\n    if (winningLines.length > 0) {\r\n      for (let i = 0; i < winningLines.length; i++) {\r\n        drawScore(winningLines[i], false);\r\n      }\r\n    } else {\r\n\r\n      if (score - bet >= 0.2) {\r\n        score = Math.round((score - bet) * 100) / 100;\r\n        //  setScore(scr);\r\n        //handleScore(scr);\r\n\r\n        if (score < bet) {\r\n          setBetZero();\r\n        }\r\n      } else if (score - bet === 0) {\r\n        setBetZero();\r\n        score = 0;\r\n        //  setScore(scr);\r\n        //handleScore(scr);\r\n      }\r\n    }\r\n    //winningLines=[];\r\n  };\r\n\r\n\r\n  const checkFiveFools = () => {\r\n    let fl = false;\r\n\r\n    for (let i = 0; i < Constants.LINES.length; i++) {\r\n      let fool = 0;\r\n      for (let j = 0; j < Constants.LINES[0].length; j++) {\r\n        let indexI = Constants.LINES[i][j][0];\r\n        let indexJ = Constants.LINES[i][j][1];\r\n\r\n        if (spinResults[indexI][indexJ] === \"D\") {\r\n          fool++;\r\n        }\r\n      }\r\n \r\n      if (fool === 5) {\r\n        fl = true;\r\n        winningLines.push(i);\r\n        drawScore(i, true);\r\n        //  highLightWinningLines(0);\r\n        break;\r\n      }\r\n    }\r\n\r\n    return fl;\r\n  };\r\n\r\n\r\n  const checkWin = () => {\r\n\r\n    if (gameOn > 0) {\r\n      let fool = checkFiveFools();\r\n      if (!fool) {\r\n        evaluateResults();\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const createResults = () => {\r\n    let myResults = [];\r\n    let j = 0;\r\n\r\n    for (let i = 0; i <= results.length; i++) {\r\n      myResults[j] = results[i];\r\n      j++;\r\n\r\n      if (j === 3) {\r\n        spinResults.push(myResults);\r\n        myResults = [];\r\n        j = 0;\r\n      }\r\n    }\r\n\r\n    checkWin();\r\n    // score=score+scr;\r\n    // handleScore();\r\n    // setScore(scr);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    console.log(\"My reels are: \"+reel.current.childNodes[0].children );\r\n    console.log(\"My useEffect reels length is: \"+results.length);\r\n    createResults();\r\n  },[gameOn])\r\n\r\n  const renderReels=()=>{\r\n    let reelList = Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\r\n      return <Reel reel={el} key={idx} index={idx} game={gameOn} opacity={1} createArray={callbackCreateArray}/>});\r\n   \r\n      console.log(\"My reelList size is:\"+reelList.length);\r\n      console.log(\"My results list size is:\"+results.length)\r\n\r\n      return <>{reelList}</>;\r\n  }\r\n\r\n  const callbackBet = (e) => {\r\n    //bet=e;\r\n    //setBet(()=>({bet:e}));\r\n\r\n    bet = e;\r\n  };\r\n\r\n  const spinReel = () => {\r\n       if (bet === 0 && score > 0) {\r\n      alert(\"Please set a bet !!!\");\r\n    } else if (bet === 0 && score === 0) {\r\n      alert(\"Game Over !!! You are you are out of cash !!!\");\r\n    } else {\r\n      setGameOn(gameOn + 1);\r\n    }\r\n}\r\n\r\n  const callbackCreateArray = (reel) => {\r\n    console.log(\"Receiving callback Array: \"+reel);\r\n    results.push(reel);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <motion.div id=\"jackpot\" >\r\n    Jackpot: <span>100</span>\r\n  </motion.div>\r\n      <motion.div className=\"container\" >\r\n        <motion.div className=\"playContainer\">\r\n          <motion.div  className=\"reelSet\" ref={reel}>\r\n            {renderReels()}\r\n          </motion.div>\r\n        </motion.div>\r\n      </motion.div>\r\n            <div id=\"controls\">\r\n            <div\r\n              className={!rolling ? \"roll rolling\" : \"roll\"}\r\n              onClick={() => {\r\n                spinReel();\r\n              }}\r\n              disabled={rolling} >\r\n              {rolling ? \"Rolling...\" : \"ROLL\"}\r\n            </div>\r\n            <Withdrawal/>\r\n            <Bet score={score} setBet={callbackBet} />\r\n            <label>\r\n              Score:<span id=\"score\">{score}</span>\r\n            </label>\r\n          </div>\r\n          </>\r\n  );\r\n});\r\n\r\nexport default ReelSet;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}