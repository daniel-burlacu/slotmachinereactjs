{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportChangeBalance = void 0;\n\nconst ethers_1 = require(\"ethers\");\n\nconst account_1 = require(\"./misc/account\");\n\nconst changeEtherBalance_1 = require(\"./changeEtherBalance\");\n\nfunction supportChangeBalance(Assertion) {\n  Assertion.addMethod('changeBalance', function (account, balanceChange) {\n    const subject = this._obj;\n    const derivedPromise = Promise.all([changeEtherBalance_1.getBalanceChange(subject, account, {\n      includeFee: true\n    }), account_1.getAddressOf(account)]).then(_ref => {\n      let [actualChange, address] = _ref;\n      this.assert(actualChange.eq(ethers_1.BigNumber.from(balanceChange)), `Expected \"${address}\" to change balance by ${balanceChange} wei, ` + `but it has changed by ${actualChange} wei`, `Expected \"${address}\" to not change balance by ${balanceChange} wei,`, balanceChange, actualChange);\n    });\n    this.then = derivedPromise.then.bind(derivedPromise);\n    this.catch = derivedPromise.catch.bind(derivedPromise);\n    this.promise = derivedPromise;\n    return this;\n  });\n}\n\nexports.supportChangeBalance = supportChangeBalance;","map":{"version":3,"names":["Object","defineProperty","exports","value","supportChangeBalance","ethers_1","require","account_1","changeEtherBalance_1","Assertion","addMethod","account","balanceChange","subject","_obj","derivedPromise","Promise","all","getBalanceChange","includeFee","getAddressOf","then","actualChange","address","assert","eq","BigNumber","from","bind","catch","promise"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/chai/dist/cjs/matchers/changeBalance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.supportChangeBalance = void 0;\nconst ethers_1 = require(\"ethers\");\nconst account_1 = require(\"./misc/account\");\nconst changeEtherBalance_1 = require(\"./changeEtherBalance\");\nfunction supportChangeBalance(Assertion) {\n    Assertion.addMethod('changeBalance', function (account, balanceChange) {\n        const subject = this._obj;\n        const derivedPromise = Promise.all([\n            changeEtherBalance_1.getBalanceChange(subject, account, { includeFee: true }),\n            account_1.getAddressOf(account)\n        ]).then(([actualChange, address]) => {\n            this.assert(actualChange.eq(ethers_1.BigNumber.from(balanceChange)), `Expected \"${address}\" to change balance by ${balanceChange} wei, ` +\n                `but it has changed by ${actualChange} wei`, `Expected \"${address}\" to not change balance by ${balanceChange} wei,`, balanceChange, actualChange);\n        });\n        this.then = derivedPromise.then.bind(derivedPromise);\n        this.catch = derivedPromise.catch.bind(derivedPromise);\n        this.promise = derivedPromise;\n        return this;\n    });\n}\nexports.supportChangeBalance = supportChangeBalance;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;AACA,MAAME,oBAAoB,GAAGF,OAAO,CAAC,sBAAD,CAApC;;AACA,SAASF,oBAAT,CAA8BK,SAA9B,EAAyC;EACrCA,SAAS,CAACC,SAAV,CAAoB,eAApB,EAAqC,UAAUC,OAAV,EAAmBC,aAAnB,EAAkC;IACnE,MAAMC,OAAO,GAAG,KAAKC,IAArB;IACA,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAY,CAC/BT,oBAAoB,CAACU,gBAArB,CAAsCL,OAAtC,EAA+CF,OAA/C,EAAwD;MAAEQ,UAAU,EAAE;IAAd,CAAxD,CAD+B,EAE/BZ,SAAS,CAACa,YAAV,CAAuBT,OAAvB,CAF+B,CAAZ,EAGpBU,IAHoB,CAGf,QAA6B;MAAA,IAA5B,CAACC,YAAD,EAAeC,OAAf,CAA4B;MACjC,KAAKC,MAAL,CAAYF,YAAY,CAACG,EAAb,CAAgBpB,QAAQ,CAACqB,SAAT,CAAmBC,IAAnB,CAAwBf,aAAxB,CAAhB,CAAZ,EAAsE,aAAYW,OAAQ,0BAAyBX,aAAc,QAA5D,GAChE,yBAAwBU,YAAa,MAD1C,EACkD,aAAYC,OAAQ,8BAA6BX,aAAc,OADjH,EACyHA,aADzH,EACwIU,YADxI;IAEH,CANsB,CAAvB;IAOA,KAAKD,IAAL,GAAYN,cAAc,CAACM,IAAf,CAAoBO,IAApB,CAAyBb,cAAzB,CAAZ;IACA,KAAKc,KAAL,GAAad,cAAc,CAACc,KAAf,CAAqBD,IAArB,CAA0Bb,cAA1B,CAAb;IACA,KAAKe,OAAL,GAAef,cAAf;IACA,OAAO,IAAP;EACH,CAbD;AAcH;;AACDb,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B"},"metadata":{},"sourceType":"script"}