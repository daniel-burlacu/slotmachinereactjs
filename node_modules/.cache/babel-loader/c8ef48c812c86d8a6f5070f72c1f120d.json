{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\Mint.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport '../assets/css/App.css';\nimport { ethers } from \"ethers\";\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/abi.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet mintAmount = 0;\n\nconst Mint = props => {\n  _s();\n\n  const [mintAmount, setMintAmount] = useState(0);\n  const [leftToMint, setLeftToMint] = useState(0);\n  const url = \"https://vast-ridge-99820.herokuapp.com\";\n\n  const howManyNFTsAreLeft = async () => {\n    console.log(\"We are in useEffect\");\n    let totalNFT = \"\";\n    let mintedNFT = \"\";\n\n    try {\n      totalNFT = await props.contract.getMaxSupply();\n    } catch (err) {\n      console.log(\"My error is: \" + err);\n      totalNFT = \"ERR\";\n    }\n\n    try {\n      mintedNFT = await props.contract.getContractNFTBalance();\n    } catch (err) {\n      mintedNFT = 0;\n    }\n\n    let nftLeftToMint = totalNFT - mintedNFT;\n    setLeftToMint(nftLeftToMint);\n  };\n\n  const insertWalletIntoDB = async () => {\n    const dataToSend = JSON.stringify({\n      \"wallet\": props.account,\n      \"txtype\": \"mint\",\n      \"amount\": mintAmount\n    });\n    const link = url + \"/api/insertWallet\";\n    await fetch(link, {\n      //  await fetch('http://localhost:3333/api/insertWallet', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: dataToSend\n    });\n  };\n\n  const handleSubmit = async () => {\n    let transaction = \"\";\n    let errorTx = false;\n    let contractPaused = await props.contract.paused();\n    console.log(\"We are in the handleSubmit function\");\n\n    if (!contractPaused) {\n      if (mintAmount > 0 && mintAmount < 1001) {\n        try {\n          const {\n            ethereum\n          } = window;\n\n          if (ethereum) {\n            let cost = await props.contract.cost();\n            cost = cost * mintAmount;\n            cost = cost.toString();\n            var options = {\n              gasLimit: 174860,\n              nonce: 45,\n              value: ethers.utils.parseUnits(cost, 'wei')\n            };\n\n            try {\n              //                var options = { gasLimit: 174860, nonce: 45, value: ethers.utils.parseUnits(price, 'wei') };\n              transaction = await props.contract.mint(mintAmount, options);\n            } catch (err) {\n              errorTx = true;\n              alert(\"Transaction failed, please try again later ! Transaction has been reverted ! \");\n            }\n\n            if (!errorTx) {\n              alert(\"Minted !! You can see transaction here:\" + \"<a href=\" + `https://mumbai.polygonscan.com/tx/${transaction.hash}` + \">Transaction</a>\");\n              insertWalletIntoDB();\n              await howManyNFTsAreLeft();\n              setMintAmount(0);\n            }\n          } else {\n            alert(\"Please connect to Metamask or install it if not already done !\");\n          }\n        } catch (err) {\n          alert(\"Network is crowded please try again later !\");\n        }\n      } else {\n        if (mintAmount === 0) {\n          alert(\"You need to mint at least 1 NFT\");\n        } else if (mintAmount > 1000) {\n          alert(\"Holly Molly what do you wanna do ? Hold your horses and leave some for the others too!!! \");\n        } else {\n          alert(\"Make sure you insert NUMBERS Only !!!\");\n        }\n      }\n    } else {\n      alert(\"Contract is PAUSED, you can't mint at this moment, please try again later\");\n    }\n  };\n\n  useEffect(() => {\n    howManyNFTsAreLeft();\n  }, [mintAmount]);\n  useEffect(() => {\n    howManyNFTsAreLeft();\n  }, [mintAmount]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-mint\",\n          children: [\"NFT's left to mint:\", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p-welcomeMint\",\n            children: leftToMint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 14\n          }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: [\"Mint Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: mintAmount,\n            onChange: e => setMintAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-mint\",\n          children: \"Price per/NFT is 10 Matic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"form-submit-button\",\n      onClick: () => {\n        handleSubmit(mintAmount);\n      },\n      children: \"Mint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Mint, \"6viJvckb6m4NFf/o4ar29+khqwk=\");\n\n_c = Mint;\nexport default Mint;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mint\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ethers","PFPRacerNFT","mintAmount","Mint","props","setMintAmount","leftToMint","setLeftToMint","url","howManyNFTsAreLeft","console","log","totalNFT","mintedNFT","contract","getMaxSupply","err","getContractNFTBalance","nftLeftToMint","insertWalletIntoDB","dataToSend","JSON","stringify","account","link","fetch","method","headers","body","handleSubmit","transaction","errorTx","contractPaused","paused","ethereum","window","cost","toString","options","gasLimit","nonce","value","utils","parseUnits","mint","alert","hash","e","target"],"sources":["F:/Games/slotmachinereact/src/components/Mint.js"],"sourcesContent":["import  React, { useEffect, useState, useRef } from \"react\";\r\nimport '../assets/css/App.css';\r\nimport {ethers} from \"ethers\";\r\nimport PFPRacerNFT from '../artifacts/contracts/PFPRacerNFT.sol/abi.json';\r\n\r\nlet mintAmount=0;\r\n\r\nconst Mint = (props) =>{\r\n    const [mintAmount, setMintAmount] = useState(0);\r\n    const [leftToMint, setLeftToMint] = useState(0);\r\n        \r\n    const url=\"https://vast-ridge-99820.herokuapp.com\";\r\n\r\n\r\n    const howManyNFTsAreLeft = async () =>{\r\n      console.log(\"We are in useEffect\")\r\n      let totalNFT=\"\";\r\n      let mintedNFT=\"\";\r\n      try{\r\n        totalNFT = await props.contract.getMaxSupply();\r\n        }catch(err){\r\n          console.log(\"My error is: \"+err);\r\n          totalNFT=\"ERR\";\r\n        }\r\n      try{\r\n        mintedNFT= await props.contract.getContractNFTBalance(); \r\n      }catch(err){\r\n        mintedNFT=0;\r\n      }\r\n        let nftLeftToMint = totalNFT - mintedNFT;\r\n        setLeftToMint(nftLeftToMint);\r\n      }\r\n\r\n      const insertWalletIntoDB = async()=>{\r\n\r\n        const dataToSend = JSON.stringify({ \"wallet\": props.account,\r\n                                            \"txtype\":\"mint\",\r\n                                            \"amount\":mintAmount,\r\n                                             });\r\n          const link = url+\"/api/insertWallet\";\r\n          await fetch(link,{\r\n      //  await fetch('http://localhost:3333/api/insertWallet', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: dataToSend\r\n        })\r\n    \r\n      }\r\n\r\nconst handleSubmit= async() =>{\r\n  let transaction = \"\";\r\n  let errorTx= false;\r\n  let contractPaused = await props.contract.paused();\r\n  console.log(\"We are in the handleSubmit function\");\r\n  if(!contractPaused){\r\n    if(mintAmount>0&&mintAmount<1001){\r\n        try{\r\n            const{ethereum}=window;\r\n\r\n            if(ethereum){\r\n   \r\n                let cost = await props.contract.cost();\r\n                cost = cost*mintAmount;\r\n                cost = cost.toString();\r\n                var options = { gasLimit: 174860, nonce: 45, value: ethers.utils.parseUnits(cost, 'wei') };\r\n              try{\r\n//                var options = { gasLimit: 174860, nonce: 45, value: ethers.utils.parseUnits(price, 'wei') };\r\n                transaction = await props.contract.mint(mintAmount, options);\r\n              }catch(err){\r\n                errorTx=true;\r\n                alert(\"Transaction failed, please try again later ! Transaction has been reverted ! \");\r\n              }\r\n              if(!errorTx){\r\n                alert(\"Minted !! You can see transaction here:\" +\"<a href=\"+`https://mumbai.polygonscan.com/tx/${transaction.hash}`+\">Transaction</a>\");\r\n                insertWalletIntoDB();\r\n                await howManyNFTsAreLeft();\r\n                setMintAmount(0);\r\n              }\r\n             } else{\r\n                alert(\"Please connect to Metamask or install it if not already done !\");\r\n             }   \r\n        }\r\n        catch(err){\r\n           alert(\"Network is crowded please try again later !\");\r\n        }\r\n     \r\n\r\n    }else{\r\n      if(mintAmount===0){\r\n        alert(\"You need to mint at least 1 NFT\");\r\n      }else if(mintAmount >1000){\r\n        alert(\"Holly Molly what do you wanna do ? Hold your horses and leave some for the others too!!! \");\r\n      }else{\r\n        alert(\"Make sure you insert NUMBERS Only !!!\");\r\n      }\r\n    }\r\n\r\n}else{\r\n  alert(\"Contract is PAUSED, you can't mint at this moment, please try again later\");\r\n}\r\n}\r\n\r\n    useEffect(()=>{\r\n\r\n      howManyNFTsAreLeft();\r\n    },[mintAmount])\r\n\r\n     useEffect(()=>{\r\n      howManyNFTsAreLeft();\r\n     },[mintAmount])\r\n\r\n      return (\r\n        <>\r\n        <div className=\"div-form\">\r\n        <form className=\"form\">\r\n        <label className=\"label-mint\">\r\n             NFT's left to mint:\r\n             <p className=\"p-welcomeMint\">{leftToMint}</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </label>\r\n          <label className=\"form-label\">\r\n            Mint Amount:\r\n            <input\r\n              type=\"text\"\r\n              value={mintAmount}\r\n              onChange={e => setMintAmount(e.target.value)}\r\n            />\r\n          </label>\r\n          <label className=\"label-mint\">\r\n            Price per/NFT is 10 Matic\r\n            </label>\r\n        </form>\r\n        </div>\r\n     <button className=\"form-submit-button\" onClick={()=>{handleSubmit(mintAmount)}}>Mint</button>\r\n     </>\r\n      );\r\n}\r\n\r\nexport default Mint;"],"mappings":"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"},"metadata":{},"sourceType":"module"}