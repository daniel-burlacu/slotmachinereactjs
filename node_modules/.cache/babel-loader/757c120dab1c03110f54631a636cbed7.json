{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadCompiler = exports.compileSolcjs = void 0;\n\nconst solc_1 = __importDefault(require(\"solc\"));\n\nconst path_1 = __importDefault(require(\"path\"));\n\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\n\nconst utils_1 = require(\"./utils\");\n\nconst compilerInput_1 = require(\"./compilerInput\");\n\nconst findImports_1 = require(\"./findImports\");\n\nconst mkdirp_1 = __importDefault(require(\"mkdirp\"));\n\nconst fs_1 = __importDefault(require(\"fs\"));\n\nconst https_1 = __importDefault(require(\"https\"));\n\nconst semverRegex = /^\\d+\\.\\d+\\.\\d+$/;\n\nfunction compileSolcjs(config) {\n  return async function compile(sources) {\n    const solc = await loadCompiler(config);\n    const input = compilerInput_1.getCompilerInput(sources, config.compilerOptions, 'Solidity');\n    const imports = findImports_1.findImports(sources);\n    const output = solc.compile(input, {\n      imports\n    });\n    return JSON.parse(output);\n  };\n}\n\nexports.compileSolcjs = compileSolcjs;\n\nasync function loadCompiler(_ref) {\n  let {\n    compilerVersion,\n    cacheDirectory\n  } = _ref;\n\n  if (isDefaultVersion(compilerVersion)) {\n    return solc_1.default;\n  }\n\n  if (utils_1.isDirectory(compilerVersion)) {\n    return require(path_1.default.resolve(compilerVersion));\n  }\n\n  try {\n    const version = semverRegex.test(compilerVersion) ? await resolveSemverVersion(compilerVersion) : compilerVersion;\n    return await loadVersion(version, cacheDirectory);\n  } catch (e) {\n    throw new Error(`Error fetching compiler version: ${compilerVersion}.`);\n  }\n}\n\nexports.loadCompiler = loadCompiler;\n\nfunction isDefaultVersion(version) {\n  return version === 'default' || semverRegex.test(version) && solc_1.default.version().startsWith(`${version}+`);\n}\n\nasync function resolveSemverVersion(version) {\n  const releases = await fetchReleases();\n  const item = releases[version];\n  return item.substring('soljson-'.length, item.length - '.js'.length);\n}\n\nconst VERSION_LIST_URL = 'https://solc-bin.ethereum.org/bin/list.json';\nlet cache = undefined;\n\nasync function fetchReleases() {\n  if (!cache) {\n    const res = await node_fetch_1.default(VERSION_LIST_URL);\n    const {\n      releases\n    } = await res.json();\n    cache = releases;\n  }\n\n  return cache;\n}\n\nasync function loadVersion(version, cacheDirectory) {\n  const cachedSolcPath = path_1.default.resolve(cacheDirectory, 'solcjs', `${version}.js`);\n\n  if (!utils_1.isFile(cachedSolcPath)) {\n    await cacheRemoteVersion(version, cacheDirectory);\n  }\n\n  return loadCachedVersion(cachedSolcPath);\n}\n\nasync function cacheRemoteVersion(version, cacheDirectory) {\n  const solcCacheDirectory = path_1.default.resolve(cacheDirectory, 'solcjs');\n\n  if (!utils_1.isDirectory(solcCacheDirectory)) {\n    mkdirp_1.default.sync(solcCacheDirectory);\n  }\n\n  const filePath = path_1.default.join(solcCacheDirectory, `${version}.js`);\n  const file = fs_1.default.createWriteStream(filePath);\n  const url = `https://solc-bin.ethereum.org/bin/soljson-${version}.js`;\n  await new Promise((resolve, reject) => {\n    https_1.default.get(url, response => {\n      response.pipe(file);\n      file.on('finish', () => {\n        file.close();\n        resolve();\n      });\n    }).on('error', error => {\n      try {\n        fs_1.default.unlinkSync(filePath);\n        utils_1.removeEmptyDirsRecursively(path_1.default.resolve(cacheDirectory));\n      } finally {\n        reject(error);\n      }\n    });\n  });\n}\n\nfunction loadCachedVersion(cachedVersionPath) {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const solcjs = require(cachedVersionPath);\n\n  return solc_1.default.setupMethods(solcjs);\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","loadCompiler","compileSolcjs","solc_1","require","path_1","node_fetch_1","utils_1","compilerInput_1","findImports_1","mkdirp_1","fs_1","https_1","semverRegex","config","compile","sources","solc","input","getCompilerInput","compilerOptions","imports","findImports","output","JSON","parse","compilerVersion","cacheDirectory","isDefaultVersion","default","isDirectory","resolve","version","test","resolveSemverVersion","loadVersion","e","Error","startsWith","releases","fetchReleases","item","substring","length","VERSION_LIST_URL","cache","undefined","res","json","cachedSolcPath","isFile","cacheRemoteVersion","loadCachedVersion","solcCacheDirectory","sync","filePath","join","file","createWriteStream","url","Promise","reject","get","response","pipe","on","close","error","unlinkSync","removeEmptyDirsRecursively","cachedVersionPath","solcjs","setupMethods"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/compiler/dist/cjs/compileSolcjs.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadCompiler = exports.compileSolcjs = void 0;\nconst solc_1 = __importDefault(require(\"solc\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nconst utils_1 = require(\"./utils\");\nconst compilerInput_1 = require(\"./compilerInput\");\nconst findImports_1 = require(\"./findImports\");\nconst mkdirp_1 = __importDefault(require(\"mkdirp\"));\nconst fs_1 = __importDefault(require(\"fs\"));\nconst https_1 = __importDefault(require(\"https\"));\nconst semverRegex = /^\\d+\\.\\d+\\.\\d+$/;\nfunction compileSolcjs(config) {\n    return async function compile(sources) {\n        const solc = await loadCompiler(config);\n        const input = compilerInput_1.getCompilerInput(sources, config.compilerOptions, 'Solidity');\n        const imports = findImports_1.findImports(sources);\n        const output = solc.compile(input, { imports });\n        return JSON.parse(output);\n    };\n}\nexports.compileSolcjs = compileSolcjs;\nasync function loadCompiler({ compilerVersion, cacheDirectory }) {\n    if (isDefaultVersion(compilerVersion)) {\n        return solc_1.default;\n    }\n    if (utils_1.isDirectory(compilerVersion)) {\n        return require(path_1.default.resolve(compilerVersion));\n    }\n    try {\n        const version = semverRegex.test(compilerVersion)\n            ? await resolveSemverVersion(compilerVersion)\n            : compilerVersion;\n        return await loadVersion(version, cacheDirectory);\n    }\n    catch (e) {\n        throw new Error(`Error fetching compiler version: ${compilerVersion}.`);\n    }\n}\nexports.loadCompiler = loadCompiler;\nfunction isDefaultVersion(version) {\n    return version === 'default' ||\n        (semverRegex.test(version) && solc_1.default.version().startsWith(`${version}+`));\n}\nasync function resolveSemverVersion(version) {\n    const releases = await fetchReleases();\n    const item = releases[version];\n    return item.substring('soljson-'.length, item.length - '.js'.length);\n}\nconst VERSION_LIST_URL = 'https://solc-bin.ethereum.org/bin/list.json';\nlet cache = undefined;\nasync function fetchReleases() {\n    if (!cache) {\n        const res = await node_fetch_1.default(VERSION_LIST_URL);\n        const { releases } = await res.json();\n        cache = releases;\n    }\n    return cache;\n}\nasync function loadVersion(version, cacheDirectory) {\n    const cachedSolcPath = path_1.default.resolve(cacheDirectory, 'solcjs', `${version}.js`);\n    if (!utils_1.isFile(cachedSolcPath)) {\n        await cacheRemoteVersion(version, cacheDirectory);\n    }\n    return loadCachedVersion(cachedSolcPath);\n}\nasync function cacheRemoteVersion(version, cacheDirectory) {\n    const solcCacheDirectory = path_1.default.resolve(cacheDirectory, 'solcjs');\n    if (!utils_1.isDirectory(solcCacheDirectory)) {\n        mkdirp_1.default.sync(solcCacheDirectory);\n    }\n    const filePath = path_1.default.join(solcCacheDirectory, `${version}.js`);\n    const file = fs_1.default.createWriteStream(filePath);\n    const url = `https://solc-bin.ethereum.org/bin/soljson-${version}.js`;\n    await new Promise((resolve, reject) => {\n        https_1.default.get(url, (response) => {\n            response.pipe(file);\n            file.on('finish', () => {\n                file.close();\n                resolve();\n            });\n        }).on('error', (error) => {\n            try {\n                fs_1.default.unlinkSync(filePath);\n                utils_1.removeEmptyDirsRecursively(path_1.default.resolve(cacheDirectory));\n            }\n            finally {\n                reject(error);\n            }\n        });\n    });\n}\nfunction loadCachedVersion(cachedVersionPath) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const solcjs = require(cachedVersionPath);\n    return solc_1.default.setupMethods(solcjs);\n}\n"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;IAAE,WAAWA;EAAb,CAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,aAAR,GAAwB,KAAK,CAApD;;AACA,MAAMC,MAAM,GAAGT,eAAe,CAACU,OAAO,CAAC,MAAD,CAAR,CAA9B;;AACA,MAAMC,MAAM,GAAGX,eAAe,CAACU,OAAO,CAAC,MAAD,CAAR,CAA9B;;AACA,MAAME,YAAY,GAAGZ,eAAe,CAACU,OAAO,CAAC,YAAD,CAAR,CAApC;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMI,eAAe,GAAGJ,OAAO,CAAC,iBAAD,CAA/B;;AACA,MAAMK,aAAa,GAAGL,OAAO,CAAC,eAAD,CAA7B;;AACA,MAAMM,QAAQ,GAAGhB,eAAe,CAACU,OAAO,CAAC,QAAD,CAAR,CAAhC;;AACA,MAAMO,IAAI,GAAGjB,eAAe,CAACU,OAAO,CAAC,IAAD,CAAR,CAA5B;;AACA,MAAMQ,OAAO,GAAGlB,eAAe,CAACU,OAAO,CAAC,OAAD,CAAR,CAA/B;;AACA,MAAMS,WAAW,GAAG,iBAApB;;AACA,SAASX,aAAT,CAAuBY,MAAvB,EAA+B;EAC3B,OAAO,eAAeC,OAAf,CAAuBC,OAAvB,EAAgC;IACnC,MAAMC,IAAI,GAAG,MAAMhB,YAAY,CAACa,MAAD,CAA/B;IACA,MAAMI,KAAK,GAAGV,eAAe,CAACW,gBAAhB,CAAiCH,OAAjC,EAA0CF,MAAM,CAACM,eAAjD,EAAkE,UAAlE,CAAd;IACA,MAAMC,OAAO,GAAGZ,aAAa,CAACa,WAAd,CAA0BN,OAA1B,CAAhB;IACA,MAAMO,MAAM,GAAGN,IAAI,CAACF,OAAL,CAAaG,KAAb,EAAoB;MAAEG;IAAF,CAApB,CAAf;IACA,OAAOG,IAAI,CAACC,KAAL,CAAWF,MAAX,CAAP;EACH,CAND;AAOH;;AACDxB,OAAO,CAACG,aAAR,GAAwBA,aAAxB;;AACA,eAAeD,YAAf,OAAiE;EAAA,IAArC;IAAEyB,eAAF;IAAmBC;EAAnB,CAAqC;;EAC7D,IAAIC,gBAAgB,CAACF,eAAD,CAApB,EAAuC;IACnC,OAAOvB,MAAM,CAAC0B,OAAd;EACH;;EACD,IAAItB,OAAO,CAACuB,WAAR,CAAoBJ,eAApB,CAAJ,EAA0C;IACtC,OAAOtB,OAAO,CAACC,MAAM,CAACwB,OAAP,CAAeE,OAAf,CAAuBL,eAAvB,CAAD,CAAd;EACH;;EACD,IAAI;IACA,MAAMM,OAAO,GAAGnB,WAAW,CAACoB,IAAZ,CAAiBP,eAAjB,IACV,MAAMQ,oBAAoB,CAACR,eAAD,CADhB,GAEVA,eAFN;IAGA,OAAO,MAAMS,WAAW,CAACH,OAAD,EAAUL,cAAV,CAAxB;EACH,CALD,CAMA,OAAOS,CAAP,EAAU;IACN,MAAM,IAAIC,KAAJ,CAAW,oCAAmCX,eAAgB,GAA9D,CAAN;EACH;AACJ;;AACD3B,OAAO,CAACE,YAAR,GAAuBA,YAAvB;;AACA,SAAS2B,gBAAT,CAA0BI,OAA1B,EAAmC;EAC/B,OAAOA,OAAO,KAAK,SAAZ,IACFnB,WAAW,CAACoB,IAAZ,CAAiBD,OAAjB,KAA6B7B,MAAM,CAAC0B,OAAP,CAAeG,OAAf,GAAyBM,UAAzB,CAAqC,GAAEN,OAAQ,GAA/C,CADlC;AAEH;;AACD,eAAeE,oBAAf,CAAoCF,OAApC,EAA6C;EACzC,MAAMO,QAAQ,GAAG,MAAMC,aAAa,EAApC;EACA,MAAMC,IAAI,GAAGF,QAAQ,CAACP,OAAD,CAArB;EACA,OAAOS,IAAI,CAACC,SAAL,CAAe,WAAWC,MAA1B,EAAkCF,IAAI,CAACE,MAAL,GAAc,MAAMA,MAAtD,CAAP;AACH;;AACD,MAAMC,gBAAgB,GAAG,6CAAzB;AACA,IAAIC,KAAK,GAAGC,SAAZ;;AACA,eAAeN,aAAf,GAA+B;EAC3B,IAAI,CAACK,KAAL,EAAY;IACR,MAAME,GAAG,GAAG,MAAMzC,YAAY,CAACuB,OAAb,CAAqBe,gBAArB,CAAlB;IACA,MAAM;MAAEL;IAAF,IAAe,MAAMQ,GAAG,CAACC,IAAJ,EAA3B;IACAH,KAAK,GAAGN,QAAR;EACH;;EACD,OAAOM,KAAP;AACH;;AACD,eAAeV,WAAf,CAA2BH,OAA3B,EAAoCL,cAApC,EAAoD;EAChD,MAAMsB,cAAc,GAAG5C,MAAM,CAACwB,OAAP,CAAeE,OAAf,CAAuBJ,cAAvB,EAAuC,QAAvC,EAAkD,GAAEK,OAAQ,KAA5D,CAAvB;;EACA,IAAI,CAACzB,OAAO,CAAC2C,MAAR,CAAeD,cAAf,CAAL,EAAqC;IACjC,MAAME,kBAAkB,CAACnB,OAAD,EAAUL,cAAV,CAAxB;EACH;;EACD,OAAOyB,iBAAiB,CAACH,cAAD,CAAxB;AACH;;AACD,eAAeE,kBAAf,CAAkCnB,OAAlC,EAA2CL,cAA3C,EAA2D;EACvD,MAAM0B,kBAAkB,GAAGhD,MAAM,CAACwB,OAAP,CAAeE,OAAf,CAAuBJ,cAAvB,EAAuC,QAAvC,CAA3B;;EACA,IAAI,CAACpB,OAAO,CAACuB,WAAR,CAAoBuB,kBAApB,CAAL,EAA8C;IAC1C3C,QAAQ,CAACmB,OAAT,CAAiByB,IAAjB,CAAsBD,kBAAtB;EACH;;EACD,MAAME,QAAQ,GAAGlD,MAAM,CAACwB,OAAP,CAAe2B,IAAf,CAAoBH,kBAApB,EAAyC,GAAErB,OAAQ,KAAnD,CAAjB;EACA,MAAMyB,IAAI,GAAG9C,IAAI,CAACkB,OAAL,CAAa6B,iBAAb,CAA+BH,QAA/B,CAAb;EACA,MAAMI,GAAG,GAAI,6CAA4C3B,OAAQ,KAAjE;EACA,MAAM,IAAI4B,OAAJ,CAAY,CAAC7B,OAAD,EAAU8B,MAAV,KAAqB;IACnCjD,OAAO,CAACiB,OAAR,CAAgBiC,GAAhB,CAAoBH,GAApB,EAA0BI,QAAD,IAAc;MACnCA,QAAQ,CAACC,IAAT,CAAcP,IAAd;MACAA,IAAI,CAACQ,EAAL,CAAQ,QAAR,EAAkB,MAAM;QACpBR,IAAI,CAACS,KAAL;QACAnC,OAAO;MACV,CAHD;IAIH,CAND,EAMGkC,EANH,CAMM,OANN,EAMgBE,KAAD,IAAW;MACtB,IAAI;QACAxD,IAAI,CAACkB,OAAL,CAAauC,UAAb,CAAwBb,QAAxB;QACAhD,OAAO,CAAC8D,0BAAR,CAAmChE,MAAM,CAACwB,OAAP,CAAeE,OAAf,CAAuBJ,cAAvB,CAAnC;MACH,CAHD,SAIQ;QACJkC,MAAM,CAACM,KAAD,CAAN;MACH;IACJ,CAdD;EAeH,CAhBK,CAAN;AAiBH;;AACD,SAASf,iBAAT,CAA2BkB,iBAA3B,EAA8C;EAC1C;EACA,MAAMC,MAAM,GAAGnE,OAAO,CAACkE,iBAAD,CAAtB;;EACA,OAAOnE,MAAM,CAAC0B,OAAP,CAAe2C,YAAf,CAA4BD,MAA5B,CAAP;AACH"},"metadata":{},"sourceType":"script"}