{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BN = require(\"bn.js\");\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar exceptions_1 = require(\"../exceptions\");\n\nvar precompiles_1 = require(\"./precompiles\");\n\nvar eei_1 = require(\"./eei\");\n\nvar interpreter_1 = require(\"./interpreter\");\n\nvar Block = require('ethereumjs-block');\n\nfunction OOGResult(gasLimit) {\n  return {\n    returnValue: Buffer.alloc(0),\n    gasUsed: gasLimit,\n    exceptionError: new exceptions_1.VmError(exceptions_1.ERROR.OUT_OF_GAS)\n  };\n}\n\nexports.OOGResult = OOGResult;\n/**\n * EVM is responsible for executing an EVM message fully\n * (including any nested calls and creates), processing the results\n * and storing them to state (or discarding changes in case of exceptions).\n * @ignore\n */\n\nvar EVM =\n/** @class */\nfunction () {\n  function EVM(vm, txContext, block) {\n    this._vm = vm;\n    this._state = this._vm.pStateManager;\n    this._tx = txContext;\n    this._block = block;\n    this._refund = new BN(0);\n  }\n  /**\n   * Executes an EVM message, determining whether it's a call or create\n   * based on the `to` address. It checkpoints the state and reverts changes\n   * if an exception happens during the message execution.\n   */\n\n\n  EVM.prototype.executeMessage = function (message) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, err;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._vm._emit('beforeMessage', message)];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this._state.checkpoint()];\n\n          case 2:\n            _a.sent();\n\n            if (!message.to) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this._executeCall(message)];\n\n          case 3:\n            result = _a.sent();\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            return [4\n            /*yield*/\n            , this._executeCreate(message)];\n\n          case 5:\n            result = _a.sent();\n            _a.label = 6;\n\n          case 6:\n            // TODO: Move `gasRefund` to a tx-level result object\n            // instead of `ExecResult`.\n            result.execResult.gasRefund = this._refund.clone();\n            err = result.execResult.exceptionError;\n            if (!err) return [3\n            /*break*/\n            , 8];\n            result.execResult.logs = [];\n            return [4\n            /*yield*/\n            , this._state.revert()];\n\n          case 7:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 10];\n\n          case 8:\n            return [4\n            /*yield*/\n            , this._state.commit()];\n\n          case 9:\n            _a.sent();\n\n            _a.label = 10;\n\n          case 10:\n            return [4\n            /*yield*/\n            , this._vm._emit('afterMessage', result)];\n\n          case 11:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  EVM.prototype._executeCall = function (message) {\n    return __awaiter(this, void 0, void 0, function () {\n      var account, toAccount, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._state.getAccount(message.caller) // Reduce tx value from sender\n            ];\n\n          case 1:\n            account = _a.sent();\n            if (!!message.delegatecall) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this._reduceSenderBalance(account, message)];\n\n          case 2:\n            _a.sent();\n\n            _a.label = 3;\n\n          case 3:\n            return [4\n            /*yield*/\n            , this._state.getAccount(message.to) // Add tx value to the `to` account\n            ];\n\n          case 4:\n            toAccount = _a.sent();\n            if (!!message.delegatecall) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , this._addToBalance(toAccount, message)];\n\n          case 5:\n            _a.sent();\n\n            _a.label = 6;\n\n          case 6:\n            // Load code\n            return [4\n            /*yield*/\n            , this._loadCode(message)];\n\n          case 7:\n            // Load code\n            _a.sent();\n\n            if (!message.code || message.code.length === 0) {\n              return [2\n              /*return*/\n              , {\n                gasUsed: new BN(0),\n                execResult: {\n                  gasUsed: new BN(0),\n                  returnValue: Buffer.alloc(0)\n                }\n              }];\n            }\n\n            if (!message.isCompiled) return [3\n            /*break*/\n            , 8];\n            result = this.runPrecompile(message.code, message.data, message.gasLimit);\n            return [3\n            /*break*/\n            , 10];\n\n          case 8:\n            return [4\n            /*yield*/\n            , this.runInterpreter(message)];\n\n          case 9:\n            result = _a.sent();\n            _a.label = 10;\n\n          case 10:\n            return [2\n            /*return*/\n            , {\n              gasUsed: result.gasUsed,\n              execResult: result\n            }];\n        }\n      });\n    });\n  };\n\n  EVM.prototype._executeCreate = function (message) {\n    return __awaiter(this, void 0, void 0, function () {\n      var account, _a, toAccount, newContractEvent, result, totalGas, returnFee;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._state.getAccount(message.caller) // Reduce tx value from sender\n            ];\n\n          case 1:\n            account = _b.sent(); // Reduce tx value from sender\n\n            return [4\n            /*yield*/\n            , this._reduceSenderBalance(account, message)];\n\n          case 2:\n            // Reduce tx value from sender\n            _b.sent();\n\n            message.code = message.data;\n            message.data = Buffer.alloc(0);\n            _a = message;\n            return [4\n            /*yield*/\n            , this._generateAddress(message)];\n\n          case 3:\n            _a.to = _b.sent();\n            return [4\n            /*yield*/\n            , this._state.getAccount(message.to) // Check for collision\n            ];\n\n          case 4:\n            toAccount = _b.sent(); // Check for collision\n\n            if (toAccount.nonce && new BN(toAccount.nonce).gtn(0) || toAccount.codeHash.compare(ethereumjs_util_1.KECCAK256_NULL) !== 0) {\n              return [2\n              /*return*/\n              , {\n                gasUsed: message.gasLimit,\n                createdAddress: message.to,\n                execResult: {\n                  returnValue: Buffer.alloc(0),\n                  exceptionError: new exceptions_1.VmError(exceptions_1.ERROR.CREATE_COLLISION),\n                  gasUsed: message.gasLimit\n                }\n              }];\n            }\n\n            return [4\n            /*yield*/\n            , this._state.clearContractStorage(message.to)];\n\n          case 5:\n            _b.sent();\n\n            newContractEvent = {\n              address: message.to,\n              code: message.code\n            };\n            return [4\n            /*yield*/\n            , this._vm._emit('newContract', newContractEvent)];\n\n          case 6:\n            _b.sent();\n\n            return [4\n            /*yield*/\n            , this._state.getAccount(message.to)];\n\n          case 7:\n            toAccount = _b.sent();\n            toAccount.nonce = new BN(toAccount.nonce).addn(1).toArrayLike(Buffer); // Add tx value to the `to` account\n\n            return [4\n            /*yield*/\n            , this._addToBalance(toAccount, message)];\n\n          case 8:\n            // Add tx value to the `to` account\n            _b.sent();\n\n            if (!message.code || message.code.length === 0) {\n              return [2\n              /*return*/\n              , {\n                gasUsed: new BN(0),\n                createdAddress: message.to,\n                execResult: {\n                  gasUsed: new BN(0),\n                  returnValue: Buffer.alloc(0)\n                }\n              }];\n            }\n\n            return [4\n            /*yield*/\n            , this.runInterpreter(message) // fee for size of the return value\n            ];\n\n          case 9:\n            result = _b.sent();\n            totalGas = result.gasUsed;\n\n            if (!result.exceptionError) {\n              returnFee = new BN(result.returnValue.length * this._vm._common.param('gasPrices', 'createData'));\n              totalGas = totalGas.add(returnFee);\n            } // if not enough gas\n\n\n            if (totalGas.lte(message.gasLimit) && (this._vm.allowUnlimitedContractSize || result.returnValue.length <= 24576)) {\n              result.gasUsed = totalGas;\n            } else {\n              result = __assign(__assign({}, result), OOGResult(message.gasLimit));\n            }\n\n            if (!(!result.exceptionError && result.returnValue && result.returnValue.toString() !== '')) return [3\n            /*break*/\n            , 11];\n            return [4\n            /*yield*/\n            , this._state.putContractCode(message.to, result.returnValue)];\n\n          case 10:\n            _b.sent();\n\n            _b.label = 11;\n\n          case 11:\n            return [2\n            /*return*/\n            , {\n              gasUsed: result.gasUsed,\n              createdAddress: message.to,\n              execResult: result\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Starts the actual bytecode processing for a CALL or CREATE, providing\n   * it with the [[EEI]].\n   */\n\n\n  EVM.prototype.runInterpreter = function (message, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var env, _a, eei, oldRefund, interpreter, interpreterRes, result, gasUsed;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = {\n              blockchain: this._vm.blockchain,\n              address: message.to || ethereumjs_util_1.zeros(32),\n              caller: message.caller || ethereumjs_util_1.zeros(32),\n              callData: message.data || Buffer.from([0]),\n              callValue: message.value || new BN(0),\n              code: message.code,\n              isStatic: message.isStatic || false,\n              depth: message.depth || 0,\n              gasPrice: this._tx.gasPrice,\n              origin: this._tx.origin || message.caller || ethereumjs_util_1.zeros(32),\n              block: this._block || new Block()\n            };\n            return [4\n            /*yield*/\n            , this._state.getAccount(message.to || ethereumjs_util_1.zeros(32))];\n\n          case 1:\n            env = (_a.contract = _b.sent(), _a.codeAddress = message.codeAddress, _a);\n            eei = new eei_1.default(env, this._state, this, this._vm._common, message.gasLimit.clone());\n\n            if (message.selfdestruct) {\n              eei._result.selfdestruct = message.selfdestruct;\n            }\n\n            oldRefund = this._refund.clone();\n            interpreter = new interpreter_1.default(this._vm, eei);\n            return [4\n            /*yield*/\n            , interpreter.run(message.code, opts)];\n\n          case 2:\n            interpreterRes = _b.sent();\n            result = eei._result;\n            gasUsed = message.gasLimit.sub(eei._gasLeft);\n\n            if (interpreterRes.exceptionError) {\n              if (interpreterRes.exceptionError.error !== exceptions_1.ERROR.REVERT) {\n                gasUsed = message.gasLimit;\n              } // Clear the result on error\n\n\n              result = __assign(__assign({}, result), {\n                logs: [],\n                selfdestruct: {}\n              }); // Revert gas refund if message failed\n\n              this._refund = oldRefund;\n            }\n\n            return [2\n            /*return*/\n            , __assign(__assign({}, result), {\n              runState: __assign(__assign(__assign({}, interpreterRes.runState), result), eei._env),\n              exceptionError: interpreterRes.exceptionError,\n              gas: eei._gasLeft,\n              gasUsed: gasUsed,\n              returnValue: result.returnValue ? result.returnValue : Buffer.alloc(0)\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Returns code for precompile at the given address, or undefined\n   * if no such precompile exists.\n   */\n\n\n  EVM.prototype.getPrecompile = function (address) {\n    return precompiles_1.getPrecompile(address.toString('hex'));\n  };\n  /**\n   * Executes a precompiled contract with given data and gas limit.\n   */\n\n\n  EVM.prototype.runPrecompile = function (code, data, gasLimit) {\n    if (typeof code !== 'function') {\n      throw new Error('Invalid precompile');\n    }\n\n    var opts = {\n      data: data,\n      gasLimit: gasLimit,\n      _common: this._vm._common\n    };\n    return code(opts);\n  };\n\n  EVM.prototype._loadCode = function (message) {\n    return __awaiter(this, void 0, void 0, function () {\n      var precompile, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!!message.code) return [3\n            /*break*/\n            , 3];\n            precompile = this.getPrecompile(message.codeAddress);\n            if (!precompile) return [3\n            /*break*/\n            , 1];\n            message.code = precompile;\n            message.isCompiled = true;\n            return [3\n            /*break*/\n            , 3];\n\n          case 1:\n            _a = message;\n            return [4\n            /*yield*/\n            , this._state.getContractCode(message.codeAddress)];\n\n          case 2:\n            _a.code = _b.sent();\n            message.isCompiled = false;\n            _b.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  EVM.prototype._generateAddress = function (message) {\n    return __awaiter(this, void 0, void 0, function () {\n      var addr, acc, newNonce;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!message.salt) return [3\n            /*break*/\n            , 1];\n            addr = ethereumjs_util_1.generateAddress2(message.caller, message.salt, message.code);\n            return [3\n            /*break*/\n            , 3];\n\n          case 1:\n            return [4\n            /*yield*/\n            , this._state.getAccount(message.caller)];\n\n          case 2:\n            acc = _a.sent();\n            newNonce = new BN(acc.nonce).subn(1);\n            addr = ethereumjs_util_1.generateAddress(message.caller, newNonce.toArrayLike(Buffer));\n            _a.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            , addr];\n        }\n      });\n    });\n  };\n\n  EVM.prototype._reduceSenderBalance = function (account, message) {\n    return __awaiter(this, void 0, void 0, function () {\n      var newBalance;\n      return __generator(this, function (_a) {\n        newBalance = new BN(account.balance).sub(message.value);\n        account.balance = ethereumjs_util_1.toBuffer(newBalance);\n        return [2\n        /*return*/\n        , this._state.putAccount(ethereumjs_util_1.toBuffer(message.caller), account)];\n      });\n    });\n  };\n\n  EVM.prototype._addToBalance = function (toAccount, message) {\n    return __awaiter(this, void 0, void 0, function () {\n      var newBalance;\n      return __generator(this, function (_a) {\n        newBalance = new BN(toAccount.balance).add(message.value);\n\n        if (newBalance.gt(ethereumjs_util_1.MAX_INTEGER)) {\n          throw new Error('Value overflow');\n        }\n\n        toAccount.balance = ethereumjs_util_1.toBuffer(newBalance); // putAccount as the nonce may have changed for contract creation\n\n        return [2\n        /*return*/\n        , this._state.putAccount(ethereumjs_util_1.toBuffer(message.to), toAccount)];\n      });\n    });\n  };\n\n  EVM.prototype._touchAccount = function (address) {\n    return __awaiter(this, void 0, void 0, function () {\n      var acc;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._state.getAccount(address)];\n\n          case 1:\n            acc = _a.sent();\n            return [2\n            /*return*/\n            , this._state.putAccount(address, acc)];\n        }\n      });\n    });\n  };\n\n  return EVM;\n}();\n\nexports.default = EVM;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AASA;;AAEA;;AAGA;;AACA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAArB;;AA6DA,SAAgBC,SAAhB,CAA0BC,QAA1B,EAAsC;EACpC,OAAO;IACLC,WAAW,EAAEC,MAAM,CAACC,KAAP,CAAa,CAAb,CADR;IAELC,OAAO,EAAEJ,QAFJ;IAGLK,cAAc,EAAE,IAAIC,oBAAJ,CAAYA,mBAAMC,UAAlB;EAHX,CAAP;AAKD;;AANDC;AAQA;;;;;;;AAMA;AAAA;AAAA;EAUE,aAAYC,EAAZ,EAAqBC,SAArB,EAA2CC,KAA3C,EAAqD;IACnD,KAAKC,GAAL,GAAWH,EAAX;IACA,KAAKI,MAAL,GAAc,KAAKD,GAAL,CAASE,aAAvB;IACA,KAAKC,GAAL,GAAWL,SAAX;IACA,KAAKM,MAAL,GAAcL,KAAd;IACA,KAAKM,OAAL,GAAe,IAAIC,EAAJ,CAAO,CAAP,CAAf;EACD;EAED;;;;;;;EAKMC,+BAAN,UAAqBC,OAArB,EAAqC;;;;;;YACnC;YAAA;YAAA,EAAM,KAAKR,GAAL,CAASS,KAAT,CAAe,eAAf,EAAgCD,OAAhC,CAAN;;;YAAAE;;YAEA;YAAA;YAAA,EAAM,KAAKT,MAAL,CAAYU,UAAZ,EAAN;;;YAAAD;;iBAGIF,OAAO,CAACI,IAAR;YAAA;YAAA;YACO;YAAA;YAAA,EAAM,KAAKC,YAAL,CAAkBL,OAAlB,CAAN;;;YAATM,MAAM,GAAGJ,SAAT;;;;;;YAES;YAAA;YAAA,EAAM,KAAKK,cAAL,CAAoBP,OAApB,CAAN;;;YAATM,MAAM,GAAGJ,SAAT;;;;YAEF;YACA;YACAI,MAAM,CAACE,UAAP,CAAkBC,SAAlB,GAA8B,KAAKZ,OAAL,CAAaa,KAAb,EAA9B;YAEMC,GAAG,GAAGL,MAAM,CAACE,UAAP,CAAkBvB,cAAxB;iBACF0B;YAAA;YAAA;YACFL,MAAM,CAACE,UAAP,CAAkBI,IAAlB,GAAyB,EAAzB;YACA;YAAA;YAAA,EAAM,KAAKnB,MAAL,CAAYoB,MAAZ,EAAN;;;YAAAX;;;;;;;YAEA;YAAA;YAAA,EAAM,KAAKT,MAAL,CAAYqB,MAAZ,EAAN;;;YAAAZ;;;;;YAGF;YAAA;YAAA,EAAM,KAAKV,GAAL,CAASS,KAAT,CAAe,cAAf,EAA+BK,MAA/B,CAAN;;;YAAAJ;;YAEA;YAAA;YAAA,EAAOI,MAAP;;;;EACD,CA1BK;;EA4BAP,6BAAN,UAAmBC,OAAnB,EAAmC;;;;;;YACjB;YAAA;YAAA,EAAM,KAAKP,MAAL,CAAYsB,UAAZ,CAAuBf,OAAO,CAACgB,MAA/B,CAAN,CAChB;YADgB;;;YAAVC,OAAO,GAAGf,SAAV;iBAEF,CAACF,OAAO,CAACkB,cAAT;YAAA;YAAA;YACF;YAAA;YAAA,EAAM,KAAKC,oBAAL,CAA0BF,OAA1B,EAAmCjB,OAAnC,CAAN;;;YAAAE;;;;;YAGgB;YAAA;YAAA,EAAM,KAAKT,MAAL,CAAYsB,UAAZ,CAAuBf,OAAO,CAACI,EAA/B,CAAN,CAClB;YADkB;;;YAAZgB,SAAS,GAAGlB,SAAZ;iBAEF,CAACF,OAAO,CAACkB,cAAT;YAAA;YAAA;YACF;YAAA;YAAA,EAAM,KAAKG,aAAL,CAAmBD,SAAnB,EAA8BpB,OAA9B,CAAN;;;YAAAE;;;;;YAGF;YACA;YAAA;YAAA,EAAM,KAAKoB,SAAL,CAAetB,OAAf,CAAN;;;YADA;YACAE;;YACA,IAAI,CAACF,OAAO,CAACuB,IAAT,IAAiBvB,OAAO,CAACuB,IAAR,CAAaC,MAAb,KAAwB,CAA7C,EAAgD;cAC9C;cAAA;cAAA,EAAO;gBACLxC,OAAO,EAAE,IAAIc,EAAJ,CAAO,CAAP,CADJ;gBAELU,UAAU,EAAE;kBACVxB,OAAO,EAAE,IAAIc,EAAJ,CAAO,CAAP,CADC;kBAEVjB,WAAW,EAAEC,MAAM,CAACC,KAAP,CAAa,CAAb;gBAFH;cAFP,CAAP;YAOD;;iBAGGiB,OAAO,CAACyB,YAAR;YAAA;YAAA;YACFnB,MAAM,GAAG,KAAKoB,aAAL,CAAmB1B,OAAO,CAACuB,IAA3B,EAAmDvB,OAAO,CAAC2B,IAA3D,EAAiE3B,OAAO,CAACpB,QAAzE,CAAT;;;;;;YAES;YAAA;YAAA,EAAM,KAAKgD,cAAL,CAAoB5B,OAApB,CAAN;;;YAATM,MAAM,GAAGJ,SAAT;;;;YAGF;YAAA;YAAA,EAAO;cACLlB,OAAO,EAAEsB,MAAM,CAACtB,OADX;cAELwB,UAAU,EAAEF;YAFP,CAAP;;;;EAID,CApCK;;EAsCAP,+BAAN,UAAqBC,OAArB,EAAqC;;;;;;;YACnB;YAAA;YAAA,EAAM,KAAKP,MAAL,CAAYsB,UAAZ,CAAuBf,OAAO,CAACgB,MAA/B,CAAN,CAChB;YADgB;;;YAAVC,OAAO,GAAGY,SAAV,EACN;;YACA;YAAA;YAAA,EAAM,KAAKV,oBAAL,CAA0BF,OAA1B,EAAmCjB,OAAnC,CAAN;;;YADA;YACA6B;;YAEA7B,OAAO,CAACuB,IAAR,GAAevB,OAAO,CAAC2B,IAAvB;YACA3B,OAAO,CAAC2B,IAAR,GAAe7C,MAAM,CAACC,KAAP,CAAa,CAAb,CAAf;YACAmB;YAAa;YAAA;YAAA,EAAM,KAAK4B,gBAAL,CAAsB9B,OAAtB,CAAN;;;YAAbE,GAAQE,EAAR,GAAayB,SAAb;YACgB;YAAA;YAAA,EAAM,KAAKpC,MAAL,CAAYsB,UAAZ,CAAuBf,OAAO,CAACI,EAA/B,CAAN,CAChB;YADgB;;;YAAZgB,SAAS,GAAGS,SAAZ,EACJ;;YACA,IACGT,SAAS,CAACW,KAAV,IAAmB,IAAIjC,EAAJ,CAAOsB,SAAS,CAACW,KAAjB,EAAwBC,GAAxB,CAA4B,CAA5B,CAApB,IACAZ,SAAS,CAACa,QAAV,CAAmBC,OAAnB,CAA2BC,gCAA3B,MAA+C,CAFjD,EAGE;cACA;cAAA;cAAA,EAAO;gBACLnD,OAAO,EAAEgB,OAAO,CAACpB,QADZ;gBAELwD,cAAc,EAAEpC,OAAO,CAACI,EAFnB;gBAGLI,UAAU,EAAE;kBACV3B,WAAW,EAAEC,MAAM,CAACC,KAAP,CAAa,CAAb,CADH;kBAEVE,cAAc,EAAE,IAAIC,oBAAJ,CAAYA,mBAAMmD,gBAAlB,CAFN;kBAGVrD,OAAO,EAAEgB,OAAO,CAACpB;gBAHP;cAHP,CAAP;YASD;;YAED;YAAA;YAAA,EAAM,KAAKa,MAAL,CAAY6C,oBAAZ,CAAiCtC,OAAO,CAACI,EAAzC,CAAN;;;YAAAyB;;YAEMU,gBAAgB,GAAqB;cACzCC,OAAO,EAAExC,OAAO,CAACI,EADwB;cAEzCmB,IAAI,EAAEvB,OAAO,CAACuB;YAF2B,CAArC;YAKN;YAAA;YAAA,EAAM,KAAK/B,GAAL,CAASS,KAAT,CAAe,aAAf,EAA8BsC,gBAA9B,CAAN;;;YAAAV;;YAEY;YAAA;YAAA,EAAM,KAAKpC,MAAL,CAAYsB,UAAZ,CAAuBf,OAAO,CAACI,EAA/B,CAAN;;;YAAZgB,SAAS,GAAGS,SAAZ;YACAT,SAAS,CAACW,KAAV,GAAkB,IAAIjC,EAAJ,CAAOsB,SAAS,CAACW,KAAjB,EAAwBU,IAAxB,CAA6B,CAA7B,EAAgCC,WAAhC,CAA4C5D,MAA5C,CAAlB,EAEA;;YACA;YAAA;YAAA,EAAM,KAAKuC,aAAL,CAAmBD,SAAnB,EAA8BpB,OAA9B,CAAN;;;YADA;YACA6B;;YAEA,IAAI,CAAC7B,OAAO,CAACuB,IAAT,IAAiBvB,OAAO,CAACuB,IAAR,CAAaC,MAAb,KAAwB,CAA7C,EAAgD;cAC9C;cAAA;cAAA,EAAO;gBACLxC,OAAO,EAAE,IAAIc,EAAJ,CAAO,CAAP,CADJ;gBAELsC,cAAc,EAAEpC,OAAO,CAACI,EAFnB;gBAGLI,UAAU,EAAE;kBACVxB,OAAO,EAAE,IAAIc,EAAJ,CAAO,CAAP,CADC;kBAEVjB,WAAW,EAAEC,MAAM,CAACC,KAAP,CAAa,CAAb;gBAFH;cAHP,CAAP;YAQD;;YAEY;YAAA;YAAA,EAAM,KAAK6C,cAAL,CAAoB5B,OAApB,CAAN,CAEb;YAFa;;;YAATM,MAAM,GAAGuB,SAAT;YAGAc,QAAQ,GAAGrC,MAAM,CAACtB,OAAlB;;YACJ,IAAI,CAACsB,MAAM,CAACrB,cAAZ,EAA4B;cACpB2D,SAAS,GAAG,IAAI9C,EAAJ,CAChBQ,MAAM,CAACzB,WAAP,CAAmB2C,MAAnB,GAA4B,KAAKhC,GAAL,CAASqD,OAAT,CAAiBC,KAAjB,CAAuB,WAAvB,EAAoC,YAApC,CADZ,CAAZ;cAGNH,QAAQ,GAAGA,QAAQ,CAACI,GAAT,CAAaH,SAAb,CAAX;YACD,EAED;;;YACA,IACED,QAAQ,CAACK,GAAT,CAAahD,OAAO,CAACpB,QAArB,MACC,KAAKY,GAAL,CAASyD,0BAAT,IAAuC3C,MAAM,CAACzB,WAAP,CAAmB2C,MAAnB,IAA6B,KADrE,CADF,EAGE;cACAlB,MAAM,CAACtB,OAAP,GAAiB2D,QAAjB;YACD,CALD,MAKO;cACLrC,MAAM,yBAAQA,MAAR,GAAmB3B,SAAS,CAACqB,OAAO,CAACpB,QAAT,CAA5B,CAAN;YACD;;kBAGG,CAAC0B,MAAM,CAACrB,cAAR,IAA0BqB,MAAM,CAACzB,WAAjC,IAAgDyB,MAAM,CAACzB,WAAP,CAAmBqE,QAAnB,OAAkC,KAAlF;YAAA;YAAA;YACF;YAAA;YAAA,EAAM,KAAKzD,MAAL,CAAY0D,eAAZ,CAA4BnD,OAAO,CAACI,EAApC,EAAwCE,MAAM,CAACzB,WAA/C,CAAN;;;YAAAgD;;;;;YAGF;YAAA;YAAA,EAAO;cACL7C,OAAO,EAAEsB,MAAM,CAACtB,OADX;cAELoD,cAAc,EAAEpC,OAAO,CAACI,EAFnB;cAGLI,UAAU,EAAEF;YAHP,CAAP;;;;EAKD,CAlFK;EAoFN;;;;;;EAIMP,+BAAN,UAAqBC,OAArB,EAAuCoD,IAAvC,EAAiE;IAA1B;MAAAA;IAA0B;;;;;;;;;cAE7DC,UAAU,EAAE,KAAK7D,GAAL,CAAS6D;cACrBb,OAAO,EAAExC,OAAO,CAACI,EAAR,IAAc+B,wBAAM,EAAN;cACvBnB,MAAM,EAAEhB,OAAO,CAACgB,MAAR,IAAkBmB,wBAAM,EAAN;cAC1BmB,QAAQ,EAAEtD,OAAO,CAAC2B,IAAR,IAAgB7C,MAAM,CAACyE,IAAP,CAAY,CAAC,CAAD,CAAZ;cAC1BC,SAAS,EAAExD,OAAO,CAACyD,KAAR,IAAiB,IAAI3D,EAAJ,CAAO,CAAP;cAC5ByB,IAAI,EAAEvB,OAAO,CAACuB;cACdmC,QAAQ,EAAE1D,OAAO,CAAC0D,QAAR,IAAoB;cAC9BC,KAAK,EAAE3D,OAAO,CAAC2D,KAAR,IAAiB;cACxBC,QAAQ,EAAE,KAAKjE,GAAL,CAASiE;cACnBC,MAAM,EAAE,KAAKlE,GAAL,CAASkE,MAAT,IAAmB7D,OAAO,CAACgB,MAA3B,IAAqCmB,wBAAM,EAAN;cAC7C5C,KAAK,EAAE,KAAKK,MAAL,IAAe,IAAInB,KAAJ;;YACZ;YAAA;YAAA,EAAM,KAAKgB,MAAL,CAAYsB,UAAZ,CAAuBf,OAAO,CAACI,EAAR,IAAc+B,wBAAM,EAAN,CAArC,CAAN;;;YAZN2B,GAAG,IAYP5D,cAAU2B,SAAV,EACA3B,iBAAaF,OAAO,CAAC+D,WADrB,IAZO,CAAH;YAeAC,GAAG,GAAG,IAAIC,aAAJ,CAAQH,GAAR,EAAa,KAAKrE,MAAlB,EAA0B,IAA1B,EAAgC,KAAKD,GAAL,CAASqD,OAAzC,EAAkD7C,OAAO,CAACpB,QAAR,CAAiB8B,KAAjB,EAAlD,CAAN;;YACN,IAAIV,OAAO,CAACkE,YAAZ,EAA0B;cACxBF,GAAG,CAACG,OAAJ,CAAYD,YAAZ,GAA2BlE,OAAO,CAACkE,YAAnC;YACD;;YAEKE,SAAS,GAAG,KAAKvE,OAAL,CAAaa,KAAb,EAAZ;YACA2D,WAAW,GAAG,IAAIC,qBAAJ,CAAgB,KAAK9E,GAArB,EAA0BwE,GAA1B,CAAd;YACiB;YAAA;YAAA,EAAMK,WAAW,CAACE,GAAZ,CAAgBvE,OAAO,CAACuB,IAAxB,EAAwC6B,IAAxC,CAAN;;;YAAjBoB,cAAc,GAAG3C,SAAjB;YAEFvB,MAAM,GAAG0D,GAAG,CAACG,OAAb;YACAnF,OAAO,GAAGgB,OAAO,CAACpB,QAAR,CAAiB6F,GAAjB,CAAqBT,GAAG,CAACU,QAAzB,CAAV;;YACJ,IAAIF,cAAc,CAACvF,cAAnB,EAAmC;cACjC,IAAIuF,cAAc,CAACvF,cAAf,CAA8B0F,KAA9B,KAAwCzF,mBAAM0F,MAAlD,EAA0D;gBACxD5F,OAAO,GAAGgB,OAAO,CAACpB,QAAlB;cACD,CAHgC,CAKjC;;;cACA0B,MAAM,yBACDA,MADC,GACK;gBACTM,IAAI,EAAE,EADG;gBAETsD,YAAY,EAAE;cAFL,CADL,CAAN,CANiC,CAWjC;;cACA,KAAKrE,OAAL,GAAeuE,SAAf;YACD;;YAED;YAAA;YAAA,wBACK9D,MADL,GACW;cACTuE,QAAQ,iCACHL,cAAc,CAACK,QADZ,GAEHvE,MAFG,GAGH0D,GAAG,CAACc,IAHD,CADC;cAMT7F,cAAc,EAAEuF,cAAc,CAACvF,cANtB;cAOT8F,GAAG,EAAEf,GAAG,CAACU,QAPA;cAQT1F,OAAO,SARE;cASTH,WAAW,EAAEyB,MAAM,CAACzB,WAAP,GAAqByB,MAAM,CAACzB,WAA5B,GAA0CC,MAAM,CAACC,KAAP,CAAa,CAAb;YAT9C,CADX;;;;EAYD,CAtDK;EAwDN;;;;;;EAIAgB,wCAAcyC,OAAd,EAA6B;IAC3B,OAAOwC,4BAAcxC,OAAO,CAACU,QAAR,CAAiB,KAAjB,CAAd,CAAP;EACD,CAFD;EAIA;;;;;EAGAnD,wCAAcwB,IAAd,EAAoCI,IAApC,EAAkD/C,QAAlD,EAA8D;IAC5D,IAAI,OAAO2C,IAAP,KAAgB,UAApB,EAAgC;MAC9B,MAAM,IAAI0D,KAAJ,CAAU,oBAAV,CAAN;IACD;;IAED,IAAM7B,IAAI,GAAG;MACXzB,IAAI,MADO;MAEX/C,QAAQ,UAFG;MAGXiE,OAAO,EAAE,KAAKrD,GAAL,CAASqD;IAHP,CAAb;IAMA,OAAOtB,IAAI,CAAC6B,IAAD,CAAX;EACD,CAZD;;EAcMrD,0BAAN,UAAgBC,OAAhB,EAAgC;;;;;;;iBAC1B,CAACA,OAAO,CAACuB,MAAT;YAAA;YAAA;YACI2D,UAAU,GAAG,KAAKC,aAAL,CAAmBnF,OAAO,CAAC+D,WAA3B,CAAb;iBACFmB;YAAA;YAAA;YACFlF,OAAO,CAACuB,IAAR,GAAe2D,UAAf;YACAlF,OAAO,CAACyB,UAAR,GAAqB,IAArB;;;;;;YAEAvB;YAAe;YAAA;YAAA,EAAM,KAAKT,MAAL,CAAY2F,eAAZ,CAA4BpF,OAAO,CAAC+D,WAApC,CAAN;;;YAAf7D,GAAQqB,IAAR,GAAeM,SAAf;YACA7B,OAAO,CAACyB,UAAR,GAAqB,KAArB;;;;;;;;;;EAGL,CAXK;;EAaA1B,iCAAN,UAAuBC,OAAvB,EAAuC;;;;;;iBAEjCA,OAAO,CAACqF,MAAR;YAAA;YAAA;YACFC,IAAI,GAAGnD,mCAAiBnC,OAAO,CAACgB,MAAzB,EAAiChB,OAAO,CAACqF,IAAzC,EAA+CrF,OAAO,CAACuB,IAAvD,CAAP;;;;;;YAEY;YAAA;YAAA,EAAM,KAAK9B,MAAL,CAAYsB,UAAZ,CAAuBf,OAAO,CAACgB,MAA/B,CAAN;;;YAANuE,GAAG,GAAGrF,SAAN;YACAsF,QAAQ,GAAG,IAAI1F,EAAJ,CAAOyF,GAAG,CAACxD,KAAX,EAAkB0D,IAAlB,CAAuB,CAAvB,CAAX;YACNH,IAAI,GAAGnD,kCAAgBnC,OAAO,CAACgB,MAAxB,EAAgCwE,QAAQ,CAAC9C,WAAT,CAAqB5D,MAArB,CAAhC,CAAP;;;;YAEF;YAAA;YAAA,EAAOwG,IAAP;;;;EACD,CAVK;;EAYAvF,qCAAN,UAA2BkB,OAA3B,EAA6CjB,OAA7C,EAA6D;;;;QACrD0F,UAAU,GAAG,IAAI5F,EAAJ,CAAOmB,OAAO,CAAC0E,OAAf,EAAwBlB,GAAxB,CAA4BzE,OAAO,CAACyD,KAApC,CAAb;QACNxC,OAAO,CAAC0E,OAAR,GAAkBxD,2BAASuD,UAAT,CAAlB;QACA;QAAA;QAAA,EAAO,KAAKjG,MAAL,CAAYmG,UAAZ,CAAuBzD,2BAASnC,OAAO,CAACgB,MAAjB,CAAvB,EAAiDC,OAAjD,CAAP;;;EACD,CAJK;;EAMAlB,8BAAN,UAAoBqB,SAApB,EAAwCpB,OAAxC,EAAwD;;;;QAChD0F,UAAU,GAAG,IAAI5F,EAAJ,CAAOsB,SAAS,CAACuE,OAAjB,EAA0B5C,GAA1B,CAA8B/C,OAAO,CAACyD,KAAtC,CAAb;;QACN,IAAIiC,UAAU,CAACG,EAAX,CAAc1D,6BAAd,CAAJ,EAAgC;UAC9B,MAAM,IAAI8C,KAAJ,CAAU,gBAAV,CAAN;QACD;;QACD7D,SAAS,CAACuE,OAAV,GAAoBxD,2BAASuD,UAAT,CAApB,EACA;;QACA;QAAA;QAAA,EAAO,KAAKjG,MAAL,CAAYmG,UAAZ,CAAuBzD,2BAASnC,OAAO,CAACI,EAAjB,CAAvB,EAA6CgB,SAA7C,CAAP;;;EACD,CARK;;EAUArB,8BAAN,UAAoByC,OAApB,EAAmC;;;;;;YACrB;YAAA;YAAA,EAAM,KAAK/C,MAAL,CAAYsB,UAAZ,CAAuByB,OAAvB,CAAN;;;YAAN+C,GAAG,GAAGrF,SAAN;YACN;YAAA;YAAA,EAAO,KAAKT,MAAL,CAAYmG,UAAZ,CAAuBpD,OAAvB,EAAgC+C,GAAhC,CAAP;;;;EACD,CAHK;;EAIR;AAAC,CA/SD","names":["Block","require","OOGResult","gasLimit","returnValue","Buffer","alloc","gasUsed","exceptionError","exceptions_1","OUT_OF_GAS","exports","vm","txContext","block","_vm","_state","pStateManager","_tx","_block","_refund","BN","EVM","message","_emit","_a","checkpoint","to","_executeCall","result","_executeCreate","execResult","gasRefund","clone","err","logs","revert","commit","getAccount","caller","account","delegatecall","_reduceSenderBalance","toAccount","_addToBalance","_loadCode","code","length","isCompiled","runPrecompile","data","runInterpreter","_b","_generateAddress","nonce","gtn","codeHash","compare","ethereumjs_util_1","createdAddress","CREATE_COLLISION","clearContractStorage","newContractEvent","address","addn","toArrayLike","totalGas","returnFee","_common","param","add","lte","allowUnlimitedContractSize","toString","putContractCode","opts","blockchain","callData","from","callValue","value","isStatic","depth","gasPrice","origin","env","codeAddress","eei","eei_1","selfdestruct","_result","oldRefund","interpreter","interpreter_1","run","interpreterRes","sub","_gasLeft","error","REVERT","runState","_env","gas","precompiles_1","Error","precompile","getPrecompile","getContractCode","salt","addr","acc","newNonce","subn","newBalance","balance","putAccount","gt"],"sources":["../../lib/evm/evm.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}