{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BN = require(\"bn.js\");\n\nvar evm_1 = require(\"../evm\");\n\nvar assert = require('assert');\n\nvar bn128 = require('rustbn.js');\n\nfunction default_1(opts) {\n  assert(opts.data);\n  var inputData = opts.data; // no need to care about non-divisible-by-192, because bn128.pairing will properly fail in that case\n\n  var inputDataSize = Math.floor(inputData.length / 192);\n  var gasUsed = new BN(opts._common.param('gasPrices', 'ecPairing') + inputDataSize * opts._common.param('gasPrices', 'ecPairingWord'));\n\n  if (opts.gasLimit.lt(gasUsed)) {\n    return evm_1.OOGResult(opts.gasLimit);\n  }\n\n  var returnData = bn128.pairing(inputData); // check ecpairing success or failure by comparing the output length\n\n  if (returnData.length !== 32) {\n    return evm_1.OOGResult(opts.gasLimit);\n  }\n\n  return {\n    gasUsed: gasUsed,\n    returnValue: returnData\n  };\n}\n\nexports.default = default_1;","map":{"version":3,"mappings":";;;;;;AAAA;;AAEA;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,WAAD,CAArB;;AAEA,mBAAwBE,IAAxB,EAA6C;EAC3CH,MAAM,CAACG,IAAI,CAACC,IAAN,CAAN;EAEA,IAAMC,SAAS,GAAGF,IAAI,CAACC,IAAvB,CAH2C,CAI3C;;EACA,IAAME,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWH,SAAS,CAACI,MAAV,GAAmB,GAA9B,CAAtB;EACA,IAAMC,OAAO,GAAG,IAAIC,EAAJ,CACdR,IAAI,CAACS,OAAL,CAAaC,KAAb,CAAmB,WAAnB,EAAgC,WAAhC,IACEP,aAAa,GAAGH,IAAI,CAACS,OAAL,CAAaC,KAAb,CAAmB,WAAnB,EAAgC,eAAhC,CAFJ,CAAhB;;EAKA,IAAIV,IAAI,CAACW,QAAL,CAAcC,EAAd,CAAiBL,OAAjB,CAAJ,EAA+B;IAC7B,OAAOM,gBAAUb,IAAI,CAACW,QAAf,CAAP;EACD;;EAED,IAAMG,UAAU,GAAGf,KAAK,CAACgB,OAAN,CAAcb,SAAd,CAAnB,CAf2C,CAiB3C;;EACA,IAAIY,UAAU,CAACR,MAAX,KAAsB,EAA1B,EAA8B;IAC5B,OAAOO,gBAAUb,IAAI,CAACW,QAAf,CAAP;EACD;;EAED,OAAO;IACLJ,OAAO,SADF;IAELS,WAAW,EAAEF;EAFR,CAAP;AAID;;AA1BDG","names":["assert","require","bn128","opts","data","inputData","inputDataSize","Math","floor","length","gasUsed","BN","_common","param","gasLimit","lt","evm_1","returnData","pairing","returnValue","exports"],"sources":["../../../lib/evm/precompiles/08-ecpairing.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}