{"ast":null,"code":"var utils = require(\"ethereumjs-util\");\n\nvar inherits = require(\"util\").inherits;\n\nvar StateManager = require(\"../statemanager.js\");\n\nvar to = require(\"../utils/to\");\n\nvar TXRejectedError = require(\"../utils/txrejectederror\");\n\nvar blockHelper = require(\"../utils/block_helper\");\n\nvar pkg = require(\"../../package.json\");\n\nconst {\n  BlockOutOfRangeError\n} = require(\"../utils/errorhelper\");\n\nvar Subprovider = require(\"web3-provider-engine/subproviders/subprovider.js\");\n\nconst maxSafeInt = \"0x\" + Number.MAX_SAFE_INTEGER.toString(16);\nconst vrs = [\"v\", \"r\", \"s\"];\ninherits(GethApiDouble, Subprovider);\n\nfunction GethApiDouble(options, provider) {\n  var self = this;\n  this.state = options.state || new StateManager(options, provider);\n  this.options = options;\n  this.initialized = false;\n  this.initialization_error = null;\n  this.post_initialization_callbacks = [];\n  this.state.initialize(function (err) {\n    if (err) {\n      self.initialization_error = err;\n    }\n\n    self.initialized = true;\n    var callbacks = self.post_initialization_callbacks;\n    self.post_initialization_callbacks = [];\n    callbacks.forEach(function (callback) {\n      setImmediate(function () {\n        callback(self.initialization_error, self.state);\n      });\n    });\n  });\n}\n\nGethApiDouble.prototype.waitForInitialization = function (callback) {\n  var self = this;\n\n  if (self.initialized === false) {\n    self.post_initialization_callbacks.push(callback);\n  } else {\n    callback(self.initialization_error, self.state);\n  }\n}; // Function to not pass methods through until initialization is finished\n\n\nGethApiDouble.prototype.handleRequest = function (payload, next, end) {\n  var self = this;\n\n  if (self.initialization_error != null) {\n    return end(self.initialization_error);\n  }\n\n  if (self.initialized === false) {\n    self.waitForInitialization(self.getDelayedHandler(payload, next, end));\n    return;\n  }\n\n  var method = self[payload.method];\n\n  if (method == null) {\n    return end(new Error(\"Method \" + payload.method + \" not supported.\"));\n  }\n\n  var params = payload.params || [];\n  var args = [].concat(params);\n  var addedBlockParam = false;\n\n  if (self.requiresDefaultBlockParameter(payload.method) && args.length < method.length - 1) {\n    args.push(\"latest\");\n    addedBlockParam = true;\n  }\n\n  args.push(end); // avoid crash by checking to make sure that we haven't specified too many arguments\n\n  if (args.length > method.length || method.minLength !== undefined && args.length < method.minLength || method.minLength === undefined && args.length < method.length) {\n    var errorMessage = `Incorrect number of arguments. Method '${payload.method}' requires `;\n\n    if (method.minLength) {\n      errorMessage += `between ${method.minLength - 1} and ${method.length - 1} arguments. `;\n    } else {\n      errorMessage += `exactly ${method.length - 1} arguments. `;\n    }\n\n    if (addedBlockParam) {\n      errorMessage += \"Including the implicit block argument, r\";\n    } else {\n      // new sentence, capitalize it.\n      errorMessage += \"R\";\n    }\n\n    errorMessage += `equest specified ${args.length - 1} arguments: ${JSON.stringify(args)}.`;\n    return end(new Error(errorMessage));\n  }\n\n  method.apply(self, args);\n};\n\nGethApiDouble.prototype.getDelayedHandler = function (payload, next, end) {\n  var self = this;\n  return function (err, state) {\n    if (err) {\n      end(err);\n    }\n\n    self.handleRequest(payload, next, end);\n  };\n};\n\nGethApiDouble.prototype.requiresDefaultBlockParameter = function (method) {\n  // object for O(1) lookup.\n  var methods = {\n    eth_getBalance: true,\n    eth_getCode: true,\n    eth_getTransactionCount: true,\n    eth_getStorageAt: true,\n    eth_call: true,\n    eth_estimateGas: true\n  };\n  return methods[method] === true;\n}; // Handle individual requests.\n\n\nGethApiDouble.prototype.eth_accounts = function (callback) {\n  callback(null, Object.keys(this.state.accounts));\n};\n\nGethApiDouble.prototype.eth_blockNumber = function (callback) {\n  this.state.blockNumber(function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n\n    callback(null, to.hex(result));\n  });\n};\n\nGethApiDouble.prototype.eth_chainId = function (callback) {\n  callback(null, to.hex(this.options._chainIdRpc));\n};\n\nGethApiDouble.prototype.eth_coinbase = function (callback) {\n  callback(null, this.state.coinbase);\n};\n\nGethApiDouble.prototype.eth_mining = function (callback) {\n  callback(null, this.state.is_mining);\n};\n\nGethApiDouble.prototype.eth_hashrate = function (callback) {\n  callback(null, \"0x0\");\n};\n\nGethApiDouble.prototype.eth_gasPrice = function (callback) {\n  callback(null, utils.addHexPrefix(this.state.gasPrice()));\n};\n\nGethApiDouble.prototype.eth_getBalance = function (address, blockNumber, callback) {\n  this.state.getBalance(address, blockNumber, callback);\n};\n\nGethApiDouble.prototype.eth_getCode = function (address, blockNumber, callback) {\n  this.state.getCode(address, blockNumber, callback);\n};\n\nGethApiDouble.prototype.eth_getBlockByNumber = function (blockNumber, includeFullTransactions, callback) {\n  this.state.blockchain.getBlock(blockNumber, function (err, block) {\n    if (err) {\n      if (err instanceof BlockOutOfRangeError) {\n        return callback(null, null);\n      } else {\n        return callback(err);\n      }\n    }\n\n    callback(null, blockHelper.toJSON(block, includeFullTransactions));\n  });\n};\n\nGethApiDouble.prototype.eth_getBlockByHash = function (txHash, includeFullTransactions, callback) {\n  this.eth_getBlockByNumber.apply(this, arguments);\n};\n\nGethApiDouble.prototype.eth_getBlockTransactionCountByNumber = function (blockNumber, callback) {\n  this.state.blockchain.getBlock(blockNumber, function (err, block) {\n    if (err) {\n      if (err instanceof BlockOutOfRangeError) {\n        // block doesn't exist\n        return callback(null, null);\n      }\n\n      return callback(err);\n    }\n\n    callback(null, to.rpcQuantityHexString(block.transactions.length));\n  });\n};\n\nGethApiDouble.prototype.eth_getBlockTransactionCountByHash = function (blockHash, callback) {\n  this.eth_getBlockTransactionCountByNumber.apply(this, arguments);\n};\n\nGethApiDouble.prototype.eth_getTransactionReceipt = function (hash, callback) {\n  this.state.getTransactionReceipt(hash, function (err, receipt) {\n    if (err) {\n      return callback(err);\n    }\n\n    var result = null;\n\n    if (receipt && receipt.block) {\n      result = receipt.toJSON();\n      vrs.forEach(element => {\n        delete result[element];\n      });\n    }\n\n    callback(null, result);\n  });\n};\n\nGethApiDouble.prototype.eth_getTransactionByHash = function (hash, callback) {\n  this.state.getTransactionReceipt(hash, function (err, receipt) {\n    if (err) {\n      return callback(err);\n    }\n\n    var result = null;\n\n    if (receipt) {\n      // if there is no block then the transaction is still pending\n      if (!receipt.block) {\n        // assemble the block object with null values for pending transactions\n        receipt.block = {\n          transactions: [],\n          hash: () => {\n            return null;\n          },\n          header: {\n            number: null\n          }\n        };\n        result = receipt.tx.toJsonRpc(receipt.block);\n      } else {\n        result = receipt.tx.toJsonRpc(receipt.block);\n      }\n    }\n\n    callback(null, result);\n  });\n};\n\nGethApiDouble.prototype.eth_getTransactionByBlockHashAndIndex = function (hashOrNumber, index, callback) {\n  index = to.number(index);\n  this.state.getBlock(hashOrNumber, function (err, block) {\n    if (err) {\n      // block doesn't exist by that hash\n      if (err.notFound) {\n        return callback(null, null);\n      } else {\n        return callback(err);\n      }\n    }\n\n    if (index >= block.transactions.length) {\n      return callback(new Error(\"Transaction at index \" + to.hex(index) + \" does not exist in block.\"));\n    }\n\n    var tx = block.transactions[index];\n    var result = tx.toJsonRpc(block);\n    callback(null, result);\n  });\n};\n\nGethApiDouble.prototype.eth_getTransactionByBlockNumberAndIndex = function (hashOrNumber, index, callback) {\n  this.eth_getTransactionByBlockHashAndIndex(hashOrNumber, index, callback);\n};\n\nGethApiDouble.prototype.eth_getTransactionCount = function (address, blockNumber, callback) {\n  this.state.getTransactionCount(address, blockNumber, (err, count) => {\n    if (err instanceof BlockOutOfRangeError) {\n      return callback(null, null);\n    }\n\n    return callback(err, count);\n  });\n};\n\nGethApiDouble.prototype.eth_sign = function (address, dataToSign, callback) {\n  var result;\n  var error;\n\n  try {\n    result = this.state.sign(address, dataToSign);\n  } catch (e) {\n    error = e;\n  }\n\n  callback(error, result);\n};\n\nGethApiDouble.prototype.eth_signTypedData = function (address, typedDataToSign, callback) {\n  var result;\n  var error;\n\n  try {\n    result = this.state.signTypedData(address, typedDataToSign);\n  } catch (e) {\n    error = e;\n  }\n\n  callback(error, result);\n};\n\nGethApiDouble.prototype.eth_sendTransaction = function (txData, callback) {\n  this.state.queueTransaction(\"eth_sendTransaction\", txData, null, callback);\n};\n\nGethApiDouble.prototype.eth_sendRawTransaction = function (rawTx, callback) {\n  let data;\n\n  if (rawTx) {\n    data = to.buffer(rawTx);\n  }\n\n  if (data === undefined) {\n    throw new TXRejectedError(\"rawTx must be a string, JSON-encoded Buffer, or Buffer.\");\n  }\n\n  this.state.queueRawTransaction(data, callback);\n};\n\nGethApiDouble.prototype._setCallGasLimit = function (txData) {\n  // if the caller didn't specify a gas limit make sure we set one\n  if (!txData.gas && !txData.gasLimit) {\n    const globalCallGasLimit = this.options.callGasLimit;\n\n    if (globalCallGasLimit != null) {\n      // if the user configured a global `callGasLimit` use it\n      txData.gas = globalCallGasLimit;\n    } else {\n      // otherwise, set a very high gas limit. We'd use Infinity, or some VM flag to ignore gasLimit checks like\n      // geth does, but the VM doesn't currently support that for `runTx`.\n      // https://github.com/ethereumjs/ethereumjs-vm/blob/4bbb6e394a344717890d618a6be1cf67b8e5b74d/lib/runTx.ts#L71\n      txData.gas = maxSafeInt;\n    }\n  }\n};\n\nGethApiDouble.prototype.eth_call = function (txData, blockNumber, callback) {\n  this._setCallGasLimit(txData);\n\n  this.state.queueTransaction(\"eth_call\", txData, blockNumber, callback);\n};\n\nGethApiDouble.prototype.eth_estimateGas = function (txData, blockNumber, callback) {\n  this._setCallGasLimit(txData);\n\n  this.state.queueTransaction(\"eth_estimateGas\", txData, blockNumber, callback);\n};\n\nGethApiDouble.prototype.eth_getStorageAt = function (address, position, blockNumber, callback) {\n  this.state.queueStorage(address, position, blockNumber, callback);\n};\n\nGethApiDouble.prototype.eth_newBlockFilter = function (callback) {\n  var filterId = utils.addHexPrefix(utils.intToHex(this.state.latestFilterId));\n  this.state.latestFilterId += 1;\n  callback(null, filterId);\n};\n\nGethApiDouble.prototype.eth_getFilterChanges = function (filterId, callback) {\n  var blockHash = this.state.latestBlock().hash().toString(\"hex\"); // Mine a block after each request to getFilterChanges so block filters work.\n\n  this.state.mine();\n  callback(null, [blockHash]);\n};\n\nGethApiDouble.prototype.eth_getLogs = function (filter, callback) {\n  this.state.getLogs(filter, callback);\n};\n\nGethApiDouble.prototype.eth_uninstallFilter = function (filterId, callback) {\n  callback(null, true);\n};\n\nGethApiDouble.prototype.eth_protocolVersion = function (callback) {\n  callback(null, \"63\");\n};\n\nGethApiDouble.prototype.bzz_hive = function (callback) {\n  callback(null, []);\n};\n\nGethApiDouble.prototype.bzz_info = function (callback) {\n  callback(null, []);\n};\n\nGethApiDouble.prototype.shh_version = function (callback) {\n  callback(null, \"2\");\n};\n\nGethApiDouble.prototype.eth_getCompilers = function (callback) {\n  callback(null, []);\n};\n\nGethApiDouble.prototype.eth_syncing = function (callback) {\n  callback(null, false);\n};\n\nGethApiDouble.prototype.net_listening = function (callback) {\n  callback(null, true);\n};\n\nGethApiDouble.prototype.net_peerCount = function (callback) {\n  callback(null, 0);\n};\n\nGethApiDouble.prototype.web3_clientVersion = function (callback) {\n  callback(null, \"EthereumJS TestRPC/v\" + pkg.version + \"/ethereum-js\");\n};\n\nGethApiDouble.prototype.web3_sha3 = function (string, callback) {\n  callback(null, to.hex(utils.keccak256(string)));\n};\n\nGethApiDouble.prototype.net_version = function (callback) {\n  // net_version returns a string containing a base 10 integer.\n  callback(null, this.state.net_version + \"\");\n};\n\nGethApiDouble.prototype.miner_start = function (threads, callback) {\n  if (!callback && typeof threads === \"function\") {\n    callback = threads;\n    threads = null;\n  }\n\n  this.state.startMining(function (err) {\n    callback(err, true);\n  });\n}; // indicate that `miner_start` only requires one argument (the callback)\n\n\nGethApiDouble.prototype.miner_start.minLength = 1;\n\nGethApiDouble.prototype.miner_stop = function (callback) {\n  this.state.stopMining(function (err) {\n    callback(err, true);\n  });\n};\n\nGethApiDouble.prototype.rpc_modules = function (callback) {\n  // returns the availible api modules and versions\n  callback(null, {\n    eth: \"1.0\",\n    net: \"1.0\",\n    rpc: \"1.0\",\n    web3: \"1.0\",\n    evm: \"1.0\",\n    personal: \"1.0\"\n  });\n};\n\nGethApiDouble.prototype.personal_listAccounts = function (callback) {\n  callback(null, Object.keys(this.state.personal_accounts));\n};\n\nGethApiDouble.prototype.personal_newAccount = function (password, callback) {\n  var account = this.state.createAccount({\n    generate: true\n  });\n  this.state.accounts[account.address.toLowerCase()] = account;\n  this.state.personal_accounts[account.address.toLowerCase()] = true;\n  this.state.account_passwords[account.address.toLowerCase()] = password;\n  callback(null, account.address);\n};\n\nGethApiDouble.prototype.personal_importRawKey = function (rawKey, password, callback) {\n  var account = this.state.createAccount({\n    secretKey: rawKey\n  });\n  this.state.accounts[account.address.toLowerCase()] = account;\n  this.state.personal_accounts[account.address.toLowerCase()] = true;\n  this.state.account_passwords[account.address.toLowerCase()] = password;\n  callback(null, account.address);\n};\n\nGethApiDouble.prototype.personal_lockAccount = function (address, callback) {\n  var account = this.state.personal_accounts[address.toLowerCase()];\n\n  if (account !== true) {\n    var error = \"Account not found\";\n    return callback(error);\n  }\n\n  delete this.state.unlocked_accounts[address.toLowerCase()];\n  callback(null, true);\n};\n\nGethApiDouble.prototype.personal_unlockAccount = function (address, password, duration, callback) {\n  // FIXME handle duration\n  var account = this.state.personal_accounts[address.toLowerCase()];\n\n  if (account !== true) {\n    var accountError = \"Account not found\";\n    return callback(accountError);\n  }\n\n  var storedPassword = this.state.account_passwords[address.toLowerCase()];\n\n  if (storedPassword !== undefined && storedPassword !== password) {\n    var passwordError = \"Invalid password\";\n    return callback(passwordError);\n  }\n\n  this.state.unlocked_accounts[address.toLowerCase()] = true;\n  callback(null, true);\n};\n\nGethApiDouble.prototype.personal_sendTransaction = function (txData, password, callback) {\n  if (txData.from == null) {\n    var error = \"Sender not found\";\n    callback(error);\n    return;\n  }\n\n  var from = utils.addHexPrefix(txData.from).toLowerCase();\n  var self = this;\n  self.personal_unlockAccount(from, password, null, function (err) {\n    if (err) {\n      return callback(err);\n    }\n\n    self.state.queueTransaction(\"eth_sendTransaction\", txData, null, function (err, ret) {\n      self.state.unlocked_accounts[from.toLowerCase()] = false;\n      callback(err, ret);\n    });\n  });\n};\n/* Functions for testing purposes only. */\n\n\nGethApiDouble.prototype.evm_snapshot = function (callback) {\n  this.state.snapshot(callback);\n};\n\nGethApiDouble.prototype.evm_revert = function (snapshotId, callback) {\n  this.state.revert(snapshotId, callback);\n};\n\nGethApiDouble.prototype.evm_increaseTime = function (seconds, callback) {\n  callback(null, this.state.blockchain.increaseTime(seconds));\n};\n\nGethApiDouble.prototype.evm_setTime = function (date, callback) {\n  callback(null, this.state.blockchain.setTime(new Date(date)));\n};\n\nGethApiDouble.prototype.evm_mine = function (timestamp, callback) {\n  if (typeof timestamp === \"function\") {\n    callback = timestamp;\n    timestamp = undefined;\n  }\n\n  this.state.processBlock(timestamp, function (err) {\n    if (err) {\n      return callback(err);\n    }\n\n    callback(err, \"0x0\");\n  });\n}; // indicate that `evm_mine` only requires one argument (the callback)\n\n\nGethApiDouble.prototype.evm_mine.minLength = 1;\n/**\n * Unlocks any unknown account.\n *\n * Note: accounts known to the `personal` namespace and accounts returned by\n * `eth_accounts` cannot be unlocked using this method.\n *\n * @param {*} address the address of the account to unlock\n * @param {*} callback\n * @returns `true` if the account was unlocked successfully, `false` if the\n * account was already unlocked. Throws an error if the account could not be\n * unlocked.\n */\n\nGethApiDouble.prototype.evm_unlockUnknownAccount = function (address, callback) {\n  // check if given address is already unlocked\n  address = address.toLowerCase();\n\n  if (this.state.unlocked_accounts[address] !== true) {\n    if (this.state.personal_accounts[address] !== true) {\n      // unlock the account\n      this.state.unlocked_accounts[address] = true;\n      return callback(null, true);\n    } else {\n      // if the account is known to the `personal` namespace we may not unlock\n      // it\n      return callback(new Error(\"cannot unlock known/personal account\"));\n    }\n  } // account was already unlocked, return `false`\n\n\n  callback(null, false);\n};\n/**\n * Locks any unknown account.\n *\n * Note: accounts known to the `personal` namespace and accounts returned by\n * `eth_accounts` cannot be locked using this method.\n *\n * @param {*} address the address of the account to lock\n * @param {*} callback\n * @returns `true` if the account was locked successfully, `false` if the\n * account was already locked. Throws an error if the account could not be\n * locked.\n */\n\n\nGethApiDouble.prototype.evm_lockUnknownAccount = function (address, callback) {\n  // Checks if given address is already unlocked\n  address = address.toLowerCase();\n\n  if (this.state.unlocked_accounts[address]) {\n    if (this.state.personal_accounts[address]) {\n      // if the account is known to the `personal` namespace we may not lock it\n      return callback(new Error(\"cannot lock known/personal account\"));\n    } else {\n      // unlock the account\n      delete this.state.unlocked_accounts[address];\n      return callback(null, true);\n    }\n  } // account wasn't locked to begin with, return `false`\n\n\n  callback(null, false);\n};\n\nGethApiDouble.prototype.debug_traceTransaction = function (txHash, params, callback) {\n  if (typeof params === \"function\") {\n    callback = params;\n    params = [];\n  }\n\n  this.state.queueTransactionTrace(txHash, params, callback);\n};\n/*\n  RPC AUDIT:\n  TODO ETH: eth_getUncleCountByBlockHash, eth_getUncleCountByBlockNumber, eth_getUncleByBlockHashAndIndex,\n        eth_getUncleByBlockNumberAndIndex, eth_getWork, eth_submitWork, eth_submitHashrate\n\n  TODO DB: db_putString, db_getString, db_putHex, db_getHex\n\n  TODO WHISPER: shh_post, shh_newIdentity, shh_hasIdentity, shh_newGroup, shh_addToGroup,\n        shh_newFilter, shh_uninstallFilter, shh_getFilterChanges, shh_getMessages\n*/\n\n/**\n * Returns the number of uncles in a block from a block matching the given block hash.\n *\n * @param {DATA, 32 Bytes} hash - hash of a block.\n * @callback callback\n * @param {error} err - Error Object\n * @param {QUANTITY} result - integer of the number of uncles in this block.\n */\n\n\nGethApiDouble.prototype.eth_getUncleCountByBlockHash = function (hash, callback) {\n  callback(null, \"0x0\");\n};\n/**\n * Returns the number of uncles in a block from a block matching the given block number.\n *\n * @param {QUANTITY} blockNumber -\n *  ^integer of a block number, or the string \"latest\", \"earliest\" or \"pending\". Ex: '0xe8', // 232\n * @callback callback\n * @param {error} err - Error Object\n * @param {QUANTITY} result - integer of the number of uncles in this block.\n */\n\n\nGethApiDouble.prototype.eth_getUncleCountByBlockNumber = function (blockNumber, callback) {\n  callback(null, \"0x0\");\n};\n/**\n * Returns information about a uncle of a block by hash and uncle index position.\n *\n * @param {DATA, 32 Bytes} hash - hash of a block\n * @param {QUANTITY} index - the uncle's index position.\n * @callback callback\n * @param {error} err - Error Object\n * @param {Object} result - A block object,\n */\n\n\nGethApiDouble.prototype.eth_getUncleByBlockHashAndIndex = function (hash, index, callback) {\n  callback(null, {});\n};\n/**\n * Returns information about a uncle of a block by number and uncle index position.\n *\n * @param {QUANTITY} blockNumber -\n * ^a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the default block parameter.\n * @param {QUANTITY} uncleIndex - the uncle's index position.\n * @callback callback\n * @param {error} err - Error object\n * @param {Object} resutl - A block object,\n */\n\n\nGethApiDouble.prototype.eth_getUncleByBlockNumberAndIndex = function (blockNumber, uncleIndex, callback) {\n  callback(null, {});\n};\n/**\n * Returns: An Array with the following elements\n * 1: DATA, 32 Bytes - current block header pow-hash\n * 2: DATA, 32 Bytes - the seed hash used for the DAG.\n * 3: DATA, 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.\n *\n * @param {QUANTITY} filterId - A filter id\n * @callback callback\n * @param {error} err - Error object\n * @param {Array} result - the hash of the current block, the seedHash, and the boundary condition to be met (\"target\").\n */\n\n\nGethApiDouble.prototype.eth_getWork = function (filterId, callback) {\n  callback(null, []);\n};\n/**\n * Used for submitting a proof-of-work solution\n *\n * @param {DATA, 8 Bytes} nonce - The nonce found (64 bits)\n * @param {DATA, 32 Bytes} powHash - The header's pow-hash (256 bits)\n * @param {DATA, 32 Bytes} digest - The mix digest (256 bits)\n * @callback callback\n * @param {error} err - Error object\n * @param {Boolean} result - returns true if the provided solution is valid, otherwise false.\n */\n\n\nGethApiDouble.prototype.eth_submitWork = function (nonce, powHash, digest, callback) {\n  callback(null, false);\n};\n/**\n * Used for submitting mining hashrate.\n *\n * @param {String} hashRate - a hexadecimal string representation (32 bytes) of the hash rate\n * @param {String} clientID - A random hexadecimal(32 bytes) ID identifying the client\n * @callback callback\n * @param {error} err - Error object\n * @param {Boolean} result - returns true if submitting went through succesfully and false otherwise.\n */\n\n\nGethApiDouble.prototype.eth_submitHashrate = function (hashRate, clientID, callback) {\n  callback(null, false);\n};\n/**\n * Stores a string in the local database.\n *\n * @param {String} dbName - Database name.\n * @param {String} key - Key name.\n * @param {String} value - String to store.\n * @callback callback\n * @param {error} err - Error object\n * @param {Boolean} result - returns true if the value was stored, otherwise false.\n */\n\n\nGethApiDouble.prototype.db_putString = function (dbName, key, value, callback) {\n  callback(null, false);\n};\n/**\n * Returns string from the local database\n *\n * @param {String} dbName - Database name.\n * @param {String} key - Key name.\n * @callback callback\n * @param {error} - Error Object\n * @param {String} result - The previously stored string.\n */\n\n\nGethApiDouble.prototype.db_getString = function (dbName, key, callback) {\n  callback(null, \"\");\n};\n/**\n * Stores binary data in the local database.\n *\n * @param {String} dbName - Database name.\n * @param {String} key - Key name.\n * @param {DATA} data - Data to store.\n * @callback callback\n * @param {error} err - Error Object\n * @param {Boolean} result - returns true if the value was stored, otherwise false.\n */\n\n\nGethApiDouble.prototype.db_putHex = function (dbName, key, data, callback) {\n  callback(null, false);\n};\n/**\n * Returns binary data from the local database\n *\n * @param {String} dbName - Database name.\n * @param {String} key - Key name.\n * @callback callback\n * @param {error} err - Error Object\n * @param {DATA} result - The previously stored data.\n */\n\n\nGethApiDouble.prototype.db_getHex = function (dbName, key, callback) {\n  callback(null, \"0x00\");\n};\n/**\n * Sends a whisper message.\n *\n * @param {DATA, 60 Bytes} from - (optional) The identity of the sender.\n * @param {DATA, 60 Bytes} to -\n *  ^(optional) The identity of the receiver. When present whisper will encrypt the message so that\n *  only the receiver can decrypt it.\n * @param {Array of DATA} topics - Array of DATA topics, for the receiver to identify messages.\n * @param {DATA} payload - The payload of the message.\n * @param {QUANTITY} priority - The integer of the priority in a range from ... (?).\n * @param {QUANTITY} ttl - integer of the time to live in seconds.\n * @callback callback\n * @param {error} err - Error Object\n * @param {Boolean} result - returns true if the message was sent, otherwise false.\n */\n\n\nGethApiDouble.prototype.shh_post = function (from, to, topics, payload, priority, ttl, callback) {\n  callback(null, false);\n};\n/**\n * Creates new whisper identity in the client.\n *\n * @callback callback\n * @param {error} err - Error Object\n * @param {DATA, 60 Bytes} result - the address of the new identiy.\n */\n\n\nGethApiDouble.prototype.shh_newIdentity = function (callback) {\n  callback(null, \"0x00\");\n};\n/**\n * Checks if the client hold the private keys for a given identity.\n *\n * @param {DATA, 60 Bytes} address - The identity address to check.\n * @callback callback\n * @param {error} err - Error Object\n * @param {Boolean} result - returns true if the client holds the privatekey for that identity, otherwise false.\n */\n\n\nGethApiDouble.prototype.shh_hasIdentity = function (address, callback) {\n  callback(null, false);\n};\n/**\n * Creates a new group.\n *\n * @callback callback\n * @param {error} err - Error Object\n * @param {DATA, 60 Bytes} result - the address of the new group.\n */\n\n\nGethApiDouble.prototype.shh_newGroup = function (callback) {\n  callback(null, \"0x00\");\n};\n/**\n * Adds a whisper identity to the group\n *\n * @param {DATA, 60 Bytes} - The identity address to add to a group.\n * @callback callback\n * @param {error} err - Error Object\n * @param {Boolean} result - returns true if the identity was successfully added to the group, otherwise false.\n */\n\n\nGethApiDouble.prototype.shh_addToGroup = function (address, callback) {\n  callback(null, false);\n};\n/**\n * Creates filter to notify, when client receives whisper message matching the filter options.\n *\n * @param {DATA, 60 Bytes} to -\n * ^(optional) Identity of the receiver. When present it will try to decrypt any incoming message\n *  if the client holds the private key to this identity.\n * @param {Array of DATA} topics - Array of DATA topics which the incoming message's topics should match.\n * @callback callback\n * @param {error} err - Error Object\n * @param {Boolean} result - returns true if the identity was successfully added to the group, otherwise false.\n */\n\n\nGethApiDouble.prototype.shh_newFilter = function (to, topics, callback) {\n  callback(null, false);\n};\n/**\n * Uninstalls a filter with given id. Should always be called when watch is no longer needed.\n * Additonally Filters timeout when they aren't requested with shh_getFilterChanges for a period of time.\n *\n * @param {QUANTITY} id - The filter id. Ex: \"0x7\"\n * @callback callback\n * @param {error} err - Error Object\n * @param {Boolean} result - true if the filter was successfully uninstalled, otherwise false.\n */\n\n\nGethApiDouble.prototype.shh_uninstallFilter = function (id, callback) {\n  callback(null, false);\n};\n/**\n * Polling method for whisper filters. Returns new messages since the last call of this method.\n *\n * @param {QUANTITY} id - The filter id. Ex: \"0x7\"\n * @callback callback\n * @param {error} err - Error Object\n * @param {Array} result - More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges\n */\n\n\nGethApiDouble.prototype.shh_getFilterChanges = function (id, callback) {\n  callback(null, []);\n};\n/**\n * Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages.\n *\n * @param {QUANTITY} id - The filter id. Ex: \"0x7\"\n * @callback callback\n * @param {error} err - Error Object\n * @param {Array} result - See: shh_getFilterChanges\n */\n\n\nGethApiDouble.prototype.shh_getMessages = function (id, callback) {\n  callback(null, false);\n};\n\nmodule.exports = GethApiDouble;","map":{"version":3,"names":["utils","require","inherits","StateManager","to","TXRejectedError","blockHelper","pkg","BlockOutOfRangeError","Subprovider","maxSafeInt","Number","MAX_SAFE_INTEGER","toString","vrs","GethApiDouble","options","provider","self","state","initialized","initialization_error","post_initialization_callbacks","initialize","err","callbacks","forEach","callback","setImmediate","prototype","waitForInitialization","push","handleRequest","payload","next","end","getDelayedHandler","method","Error","params","args","concat","addedBlockParam","requiresDefaultBlockParameter","length","minLength","undefined","errorMessage","JSON","stringify","apply","methods","eth_getBalance","eth_getCode","eth_getTransactionCount","eth_getStorageAt","eth_call","eth_estimateGas","eth_accounts","Object","keys","accounts","eth_blockNumber","blockNumber","result","hex","eth_chainId","_chainIdRpc","eth_coinbase","coinbase","eth_mining","is_mining","eth_hashrate","eth_gasPrice","addHexPrefix","gasPrice","address","getBalance","getCode","eth_getBlockByNumber","includeFullTransactions","blockchain","getBlock","block","toJSON","eth_getBlockByHash","txHash","arguments","eth_getBlockTransactionCountByNumber","rpcQuantityHexString","transactions","eth_getBlockTransactionCountByHash","blockHash","eth_getTransactionReceipt","hash","getTransactionReceipt","receipt","element","eth_getTransactionByHash","header","number","tx","toJsonRpc","eth_getTransactionByBlockHashAndIndex","hashOrNumber","index","notFound","eth_getTransactionByBlockNumberAndIndex","getTransactionCount","count","eth_sign","dataToSign","error","sign","e","eth_signTypedData","typedDataToSign","signTypedData","eth_sendTransaction","txData","queueTransaction","eth_sendRawTransaction","rawTx","data","buffer","queueRawTransaction","_setCallGasLimit","gas","gasLimit","globalCallGasLimit","callGasLimit","position","queueStorage","eth_newBlockFilter","filterId","intToHex","latestFilterId","eth_getFilterChanges","latestBlock","mine","eth_getLogs","filter","getLogs","eth_uninstallFilter","eth_protocolVersion","bzz_hive","bzz_info","shh_version","eth_getCompilers","eth_syncing","net_listening","net_peerCount","web3_clientVersion","version","web3_sha3","string","keccak256","net_version","miner_start","threads","startMining","miner_stop","stopMining","rpc_modules","eth","net","rpc","web3","evm","personal","personal_listAccounts","personal_accounts","personal_newAccount","password","account","createAccount","generate","toLowerCase","account_passwords","personal_importRawKey","rawKey","secretKey","personal_lockAccount","unlocked_accounts","personal_unlockAccount","duration","accountError","storedPassword","passwordError","personal_sendTransaction","from","ret","evm_snapshot","snapshot","evm_revert","snapshotId","revert","evm_increaseTime","seconds","increaseTime","evm_setTime","date","setTime","Date","evm_mine","timestamp","processBlock","evm_unlockUnknownAccount","evm_lockUnknownAccount","debug_traceTransaction","queueTransactionTrace","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_getUncleByBlockHashAndIndex","eth_getUncleByBlockNumberAndIndex","uncleIndex","eth_getWork","eth_submitWork","nonce","powHash","digest","eth_submitHashrate","hashRate","clientID","db_putString","dbName","key","value","db_getString","db_putHex","db_getHex","shh_post","topics","priority","ttl","shh_newIdentity","shh_hasIdentity","shh_newGroup","shh_addToGroup","shh_newFilter","shh_uninstallFilter","id","shh_getFilterChanges","shh_getMessages","module","exports"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/lib/subproviders/geth_api_double.js"],"sourcesContent":["var utils = require(\"ethereumjs-util\");\nvar inherits = require(\"util\").inherits;\nvar StateManager = require(\"../statemanager.js\");\nvar to = require(\"../utils/to\");\nvar TXRejectedError = require(\"../utils/txrejectederror\");\n\nvar blockHelper = require(\"../utils/block_helper\");\nvar pkg = require(\"../../package.json\");\nconst { BlockOutOfRangeError } = require(\"../utils/errorhelper\");\n\nvar Subprovider = require(\"web3-provider-engine/subproviders/subprovider.js\");\n\nconst maxSafeInt = \"0x\" + Number.MAX_SAFE_INTEGER.toString(16);\nconst vrs = [\"v\", \"r\", \"s\"];\n\ninherits(GethApiDouble, Subprovider);\n\nfunction GethApiDouble(options, provider) {\n  var self = this;\n\n  this.state = options.state || new StateManager(options, provider);\n  this.options = options;\n  this.initialized = false;\n\n  this.initialization_error = null;\n  this.post_initialization_callbacks = [];\n\n  this.state.initialize(function(err) {\n    if (err) {\n      self.initialization_error = err;\n    }\n    self.initialized = true;\n\n    var callbacks = self.post_initialization_callbacks;\n    self.post_initialization_callbacks = [];\n\n    callbacks.forEach(function(callback) {\n      setImmediate(function() {\n        callback(self.initialization_error, self.state);\n      });\n    });\n  });\n}\n\nGethApiDouble.prototype.waitForInitialization = function(callback) {\n  var self = this;\n  if (self.initialized === false) {\n    self.post_initialization_callbacks.push(callback);\n  } else {\n    callback(self.initialization_error, self.state);\n  }\n};\n\n// Function to not pass methods through until initialization is finished\nGethApiDouble.prototype.handleRequest = function(payload, next, end) {\n  var self = this;\n\n  if (self.initialization_error != null) {\n    return end(self.initialization_error);\n  }\n\n  if (self.initialized === false) {\n    self.waitForInitialization(self.getDelayedHandler(payload, next, end));\n    return;\n  }\n\n  var method = self[payload.method];\n\n  if (method == null) {\n    return end(new Error(\"Method \" + payload.method + \" not supported.\"));\n  }\n\n  var params = payload.params || [];\n  var args = [].concat(params);\n\n  var addedBlockParam = false;\n\n  if (self.requiresDefaultBlockParameter(payload.method) && args.length < method.length - 1) {\n    args.push(\"latest\");\n    addedBlockParam = true;\n  }\n\n  args.push(end);\n\n  // avoid crash by checking to make sure that we haven't specified too many arguments\n  if (\n    args.length > method.length ||\n    (method.minLength !== undefined && args.length < method.minLength) ||\n    (method.minLength === undefined && args.length < method.length)\n  ) {\n    var errorMessage = `Incorrect number of arguments. Method '${payload.method}' requires `;\n    if (method.minLength) {\n      errorMessage += `between ${method.minLength - 1} and ${method.length - 1} arguments. `;\n    } else {\n      errorMessage += `exactly ${method.length - 1} arguments. `;\n    }\n\n    if (addedBlockParam) {\n      errorMessage += \"Including the implicit block argument, r\";\n    } else {\n      // new sentence, capitalize it.\n      errorMessage += \"R\";\n    }\n    errorMessage += `equest specified ${args.length - 1} arguments: ${JSON.stringify(args)}.`;\n\n    return end(new Error(errorMessage));\n  }\n\n  method.apply(self, args);\n};\n\nGethApiDouble.prototype.getDelayedHandler = function(payload, next, end) {\n  var self = this;\n  return function(err, state) {\n    if (err) {\n      end(err);\n    }\n    self.handleRequest(payload, next, end);\n  };\n};\n\nGethApiDouble.prototype.requiresDefaultBlockParameter = function(method) {\n  // object for O(1) lookup.\n  var methods = {\n    eth_getBalance: true,\n    eth_getCode: true,\n    eth_getTransactionCount: true,\n    eth_getStorageAt: true,\n    eth_call: true,\n    eth_estimateGas: true\n  };\n\n  return methods[method] === true;\n};\n\n// Handle individual requests.\n\nGethApiDouble.prototype.eth_accounts = function(callback) {\n  callback(null, Object.keys(this.state.accounts));\n};\n\nGethApiDouble.prototype.eth_blockNumber = function(callback) {\n  this.state.blockNumber(function(err, result) {\n    if (err) {\n      return callback(err);\n    }\n    callback(null, to.hex(result));\n  });\n};\n\nGethApiDouble.prototype.eth_chainId = function(callback) {\n  callback(null, to.hex(this.options._chainIdRpc));\n};\n\nGethApiDouble.prototype.eth_coinbase = function(callback) {\n  callback(null, this.state.coinbase);\n};\n\nGethApiDouble.prototype.eth_mining = function(callback) {\n  callback(null, this.state.is_mining);\n};\n\nGethApiDouble.prototype.eth_hashrate = function(callback) {\n  callback(null, \"0x0\");\n};\n\nGethApiDouble.prototype.eth_gasPrice = function(callback) {\n  callback(null, utils.addHexPrefix(this.state.gasPrice()));\n};\n\nGethApiDouble.prototype.eth_getBalance = function(address, blockNumber, callback) {\n  this.state.getBalance(address, blockNumber, callback);\n};\n\nGethApiDouble.prototype.eth_getCode = function(address, blockNumber, callback) {\n  this.state.getCode(address, blockNumber, callback);\n};\n\nGethApiDouble.prototype.eth_getBlockByNumber = function(blockNumber, includeFullTransactions, callback) {\n  this.state.blockchain.getBlock(blockNumber, function(err, block) {\n    if (err) {\n      if (err instanceof BlockOutOfRangeError) {\n        return callback(null, null);\n      } else {\n        return callback(err);\n      }\n    }\n\n    callback(null, blockHelper.toJSON(block, includeFullTransactions));\n  });\n};\n\nGethApiDouble.prototype.eth_getBlockByHash = function(txHash, includeFullTransactions, callback) {\n  this.eth_getBlockByNumber.apply(this, arguments);\n};\n\nGethApiDouble.prototype.eth_getBlockTransactionCountByNumber = function(blockNumber, callback) {\n  this.state.blockchain.getBlock(blockNumber, function(err, block) {\n    if (err) {\n      if (err instanceof BlockOutOfRangeError) {\n        // block doesn't exist\n        return callback(null, null);\n      }\n      return callback(err);\n    }\n    callback(null, to.rpcQuantityHexString(block.transactions.length));\n  });\n};\n\nGethApiDouble.prototype.eth_getBlockTransactionCountByHash = function(blockHash, callback) {\n  this.eth_getBlockTransactionCountByNumber.apply(this, arguments);\n};\n\nGethApiDouble.prototype.eth_getTransactionReceipt = function(hash, callback) {\n  this.state.getTransactionReceipt(hash, function(err, receipt) {\n    if (err) {\n      return callback(err);\n    }\n\n    var result = null;\n\n    if (receipt && receipt.block) {\n      result = receipt.toJSON();\n      vrs.forEach((element) => {\n        delete result[element];\n      });\n    }\n    callback(null, result);\n  });\n};\n\nGethApiDouble.prototype.eth_getTransactionByHash = function(hash, callback) {\n  this.state.getTransactionReceipt(hash, function(err, receipt) {\n    if (err) {\n      return callback(err);\n    }\n\n    var result = null;\n\n    if (receipt) {\n      // if there is no block then the transaction is still pending\n      if (!receipt.block) {\n        // assemble the block object with null values for pending transactions\n        receipt.block = {\n          transactions: [],\n          hash: () => {\n            return null;\n          },\n          header: { number: null }\n        };\n\n        result = receipt.tx.toJsonRpc(receipt.block);\n      } else {\n        result = receipt.tx.toJsonRpc(receipt.block);\n      }\n    }\n    callback(null, result);\n  });\n};\n\nGethApiDouble.prototype.eth_getTransactionByBlockHashAndIndex = function(hashOrNumber, index, callback) {\n  index = to.number(index);\n\n  this.state.getBlock(hashOrNumber, function(err, block) {\n    if (err) {\n      // block doesn't exist by that hash\n      if (err.notFound) {\n        return callback(null, null);\n      } else {\n        return callback(err);\n      }\n    }\n\n    if (index >= block.transactions.length) {\n      return callback(new Error(\"Transaction at index \" + to.hex(index) + \" does not exist in block.\"));\n    }\n\n    var tx = block.transactions[index];\n    var result = tx.toJsonRpc(block);\n\n    callback(null, result);\n  });\n};\n\nGethApiDouble.prototype.eth_getTransactionByBlockNumberAndIndex = function(hashOrNumber, index, callback) {\n  this.eth_getTransactionByBlockHashAndIndex(hashOrNumber, index, callback);\n};\n\nGethApiDouble.prototype.eth_getTransactionCount = function(address, blockNumber, callback) {\n  this.state.getTransactionCount(address, blockNumber, (err, count) => {\n    if (err instanceof BlockOutOfRangeError) {\n      return callback(null, null);\n    }\n    return callback(err, count);\n  });\n};\n\nGethApiDouble.prototype.eth_sign = function(address, dataToSign, callback) {\n  var result;\n  var error;\n\n  try {\n    result = this.state.sign(address, dataToSign);\n  } catch (e) {\n    error = e;\n  }\n\n  callback(error, result);\n};\n\nGethApiDouble.prototype.eth_signTypedData = function(address, typedDataToSign, callback) {\n  var result;\n  var error;\n\n  try {\n    result = this.state.signTypedData(address, typedDataToSign);\n  } catch (e) {\n    error = e;\n  }\n\n  callback(error, result);\n};\n\nGethApiDouble.prototype.eth_sendTransaction = function(txData, callback) {\n  this.state.queueTransaction(\"eth_sendTransaction\", txData, null, callback);\n};\n\nGethApiDouble.prototype.eth_sendRawTransaction = function(rawTx, callback) {\n  let data;\n  if (rawTx) {\n    data = to.buffer(rawTx);\n  }\n\n  if (data === undefined) {\n    throw new TXRejectedError(\"rawTx must be a string, JSON-encoded Buffer, or Buffer.\");\n  }\n\n  this.state.queueRawTransaction(data, callback);\n};\n\nGethApiDouble.prototype._setCallGasLimit = function(txData) {\n  // if the caller didn't specify a gas limit make sure we set one\n  if (!txData.gas && !txData.gasLimit) {\n    const globalCallGasLimit = this.options.callGasLimit;\n    if (globalCallGasLimit != null) {\n      // if the user configured a global `callGasLimit` use it\n      txData.gas = globalCallGasLimit;\n    } else {\n      // otherwise, set a very high gas limit. We'd use Infinity, or some VM flag to ignore gasLimit checks like\n      // geth does, but the VM doesn't currently support that for `runTx`.\n      // https://github.com/ethereumjs/ethereumjs-vm/blob/4bbb6e394a344717890d618a6be1cf67b8e5b74d/lib/runTx.ts#L71\n      txData.gas = maxSafeInt;\n    }\n  }\n};\nGethApiDouble.prototype.eth_call = function(txData, blockNumber, callback) {\n  this._setCallGasLimit(txData);\n  this.state.queueTransaction(\"eth_call\", txData, blockNumber, callback);\n};\n\nGethApiDouble.prototype.eth_estimateGas = function(txData, blockNumber, callback) {\n  this._setCallGasLimit(txData);\n  this.state.queueTransaction(\"eth_estimateGas\", txData, blockNumber, callback);\n};\n\nGethApiDouble.prototype.eth_getStorageAt = function(address, position, blockNumber, callback) {\n  this.state.queueStorage(address, position, blockNumber, callback);\n};\n\nGethApiDouble.prototype.eth_newBlockFilter = function(callback) {\n  var filterId = utils.addHexPrefix(utils.intToHex(this.state.latestFilterId));\n  this.state.latestFilterId += 1;\n  callback(null, filterId);\n};\n\nGethApiDouble.prototype.eth_getFilterChanges = function(filterId, callback) {\n  var blockHash = this.state\n    .latestBlock()\n    .hash()\n    .toString(\"hex\");\n  // Mine a block after each request to getFilterChanges so block filters work.\n  this.state.mine();\n  callback(null, [blockHash]);\n};\n\nGethApiDouble.prototype.eth_getLogs = function(filter, callback) {\n  this.state.getLogs(filter, callback);\n};\n\nGethApiDouble.prototype.eth_uninstallFilter = function(filterId, callback) {\n  callback(null, true);\n};\n\nGethApiDouble.prototype.eth_protocolVersion = function(callback) {\n  callback(null, \"63\");\n};\n\nGethApiDouble.prototype.bzz_hive = function(callback) {\n  callback(null, []);\n};\n\nGethApiDouble.prototype.bzz_info = function(callback) {\n  callback(null, []);\n};\n\nGethApiDouble.prototype.shh_version = function(callback) {\n  callback(null, \"2\");\n};\n\nGethApiDouble.prototype.eth_getCompilers = function(callback) {\n  callback(null, []);\n};\n\nGethApiDouble.prototype.eth_syncing = function(callback) {\n  callback(null, false);\n};\n\nGethApiDouble.prototype.net_listening = function(callback) {\n  callback(null, true);\n};\n\nGethApiDouble.prototype.net_peerCount = function(callback) {\n  callback(null, 0);\n};\n\nGethApiDouble.prototype.web3_clientVersion = function(callback) {\n  callback(null, \"EthereumJS TestRPC/v\" + pkg.version + \"/ethereum-js\");\n};\n\nGethApiDouble.prototype.web3_sha3 = function(string, callback) {\n  callback(null, to.hex(utils.keccak256(string)));\n};\n\nGethApiDouble.prototype.net_version = function(callback) {\n  // net_version returns a string containing a base 10 integer.\n  callback(null, this.state.net_version + \"\");\n};\n\nGethApiDouble.prototype.miner_start = function(threads, callback) {\n  if (!callback && typeof threads === \"function\") {\n    callback = threads;\n    threads = null;\n  }\n\n  this.state.startMining(function(err) {\n    callback(err, true);\n  });\n};\n\n// indicate that `miner_start` only requires one argument (the callback)\nGethApiDouble.prototype.miner_start.minLength = 1;\n\nGethApiDouble.prototype.miner_stop = function(callback) {\n  this.state.stopMining(function(err) {\n    callback(err, true);\n  });\n};\n\nGethApiDouble.prototype.rpc_modules = function(callback) {\n  // returns the availible api modules and versions\n  callback(null, { eth: \"1.0\", net: \"1.0\", rpc: \"1.0\", web3: \"1.0\", evm: \"1.0\", personal: \"1.0\" });\n};\n\nGethApiDouble.prototype.personal_listAccounts = function(callback) {\n  callback(null, Object.keys(this.state.personal_accounts));\n};\n\nGethApiDouble.prototype.personal_newAccount = function(password, callback) {\n  var account = this.state.createAccount({ generate: true });\n  this.state.accounts[account.address.toLowerCase()] = account;\n  this.state.personal_accounts[account.address.toLowerCase()] = true;\n  this.state.account_passwords[account.address.toLowerCase()] = password;\n  callback(null, account.address);\n};\n\nGethApiDouble.prototype.personal_importRawKey = function(rawKey, password, callback) {\n  var account = this.state.createAccount({ secretKey: rawKey });\n  this.state.accounts[account.address.toLowerCase()] = account;\n  this.state.personal_accounts[account.address.toLowerCase()] = true;\n  this.state.account_passwords[account.address.toLowerCase()] = password;\n  callback(null, account.address);\n};\n\nGethApiDouble.prototype.personal_lockAccount = function(address, callback) {\n  var account = this.state.personal_accounts[address.toLowerCase()];\n  if (account !== true) {\n    var error = \"Account not found\";\n    return callback(error);\n  }\n  delete this.state.unlocked_accounts[address.toLowerCase()];\n  callback(null, true);\n};\n\nGethApiDouble.prototype.personal_unlockAccount = function(address, password, duration, callback) {\n  // FIXME handle duration\n  var account = this.state.personal_accounts[address.toLowerCase()];\n  if (account !== true) {\n    var accountError = \"Account not found\";\n    return callback(accountError);\n  }\n\n  var storedPassword = this.state.account_passwords[address.toLowerCase()];\n  if (storedPassword !== undefined && storedPassword !== password) {\n    var passwordError = \"Invalid password\";\n    return callback(passwordError);\n  }\n\n  this.state.unlocked_accounts[address.toLowerCase()] = true;\n  callback(null, true);\n};\n\nGethApiDouble.prototype.personal_sendTransaction = function(txData, password, callback) {\n  if (txData.from == null) {\n    var error = \"Sender not found\";\n    callback(error);\n    return;\n  }\n\n  var from = utils.addHexPrefix(txData.from).toLowerCase();\n\n  var self = this;\n  self.personal_unlockAccount(from, password, null, function(err) {\n    if (err) {\n      return callback(err);\n    }\n\n    self.state.queueTransaction(\"eth_sendTransaction\", txData, null, function(err, ret) {\n      self.state.unlocked_accounts[from.toLowerCase()] = false;\n      callback(err, ret);\n    });\n  });\n};\n\n/* Functions for testing purposes only. */\n\nGethApiDouble.prototype.evm_snapshot = function(callback) {\n  this.state.snapshot(callback);\n};\n\nGethApiDouble.prototype.evm_revert = function(snapshotId, callback) {\n  this.state.revert(snapshotId, callback);\n};\n\nGethApiDouble.prototype.evm_increaseTime = function(seconds, callback) {\n  callback(null, this.state.blockchain.increaseTime(seconds));\n};\n\nGethApiDouble.prototype.evm_setTime = function(date, callback) {\n  callback(null, this.state.blockchain.setTime(new Date(date)));\n};\n\nGethApiDouble.prototype.evm_mine = function(timestamp, callback) {\n  if (typeof timestamp === \"function\") {\n    callback = timestamp;\n    timestamp = undefined;\n  }\n  this.state.processBlock(timestamp, function(err) {\n    if (err) {\n      return callback(err);\n    }\n    callback(err, \"0x0\");\n  });\n};\n\n// indicate that `evm_mine` only requires one argument (the callback)\nGethApiDouble.prototype.evm_mine.minLength = 1;\n\n/**\n * Unlocks any unknown account.\n *\n * Note: accounts known to the `personal` namespace and accounts returned by\n * `eth_accounts` cannot be unlocked using this method.\n *\n * @param {*} address the address of the account to unlock\n * @param {*} callback\n * @returns `true` if the account was unlocked successfully, `false` if the\n * account was already unlocked. Throws an error if the account could not be\n * unlocked.\n */\nGethApiDouble.prototype.evm_unlockUnknownAccount = function(address, callback) {\n  // check if given address is already unlocked\n  address = address.toLowerCase();\n  if (this.state.unlocked_accounts[address] !== true) {\n    if (this.state.personal_accounts[address] !== true) {\n      // unlock the account\n      this.state.unlocked_accounts[address] = true;\n      return callback(null, true);\n    } else {\n      // if the account is known to the `personal` namespace we may not unlock\n      // it\n      return callback(new Error(\"cannot unlock known/personal account\"));\n    }\n  }\n  // account was already unlocked, return `false`\n  callback(null, false);\n};\n\n/**\n * Locks any unknown account.\n *\n * Note: accounts known to the `personal` namespace and accounts returned by\n * `eth_accounts` cannot be locked using this method.\n *\n * @param {*} address the address of the account to lock\n * @param {*} callback\n * @returns `true` if the account was locked successfully, `false` if the\n * account was already locked. Throws an error if the account could not be\n * locked.\n */\nGethApiDouble.prototype.evm_lockUnknownAccount = function(address, callback) {\n  // Checks if given address is already unlocked\n  address = address.toLowerCase();\n  if (this.state.unlocked_accounts[address]) {\n    if (this.state.personal_accounts[address]) {\n      // if the account is known to the `personal` namespace we may not lock it\n      return callback(new Error(\"cannot lock known/personal account\"));\n    } else {\n      // unlock the account\n      delete this.state.unlocked_accounts[address];\n      return callback(null, true);\n    }\n  }\n  // account wasn't locked to begin with, return `false`\n  callback(null, false);\n};\n\nGethApiDouble.prototype.debug_traceTransaction = function(txHash, params, callback) {\n  if (typeof params === \"function\") {\n    callback = params;\n    params = [];\n  }\n\n  this.state.queueTransactionTrace(txHash, params, callback);\n};\n\n/*\n  RPC AUDIT:\n  TODO ETH: eth_getUncleCountByBlockHash, eth_getUncleCountByBlockNumber, eth_getUncleByBlockHashAndIndex,\n        eth_getUncleByBlockNumberAndIndex, eth_getWork, eth_submitWork, eth_submitHashrate\n\n  TODO DB: db_putString, db_getString, db_putHex, db_getHex\n\n  TODO WHISPER: shh_post, shh_newIdentity, shh_hasIdentity, shh_newGroup, shh_addToGroup,\n        shh_newFilter, shh_uninstallFilter, shh_getFilterChanges, shh_getMessages\n*/\n\n/**\n * Returns the number of uncles in a block from a block matching the given block hash.\n *\n * @param {DATA, 32 Bytes} hash - hash of a block.\n * @callback callback\n * @param {error} err - Error Object\n * @param {QUANTITY} result - integer of the number of uncles in this block.\n */\nGethApiDouble.prototype.eth_getUncleCountByBlockHash = function(hash, callback) {\n  callback(null, \"0x0\");\n};\n\n/**\n * Returns the number of uncles in a block from a block matching the given block number.\n *\n * @param {QUANTITY} blockNumber -\n *  ^integer of a block number, or the string \"latest\", \"earliest\" or \"pending\". Ex: '0xe8', // 232\n * @callback callback\n * @param {error} err - Error Object\n * @param {QUANTITY} result - integer of the number of uncles in this block.\n */\nGethApiDouble.prototype.eth_getUncleCountByBlockNumber = function(blockNumber, callback) {\n  callback(null, \"0x0\");\n};\n\n/**\n * Returns information about a uncle of a block by hash and uncle index position.\n *\n * @param {DATA, 32 Bytes} hash - hash of a block\n * @param {QUANTITY} index - the uncle's index position.\n * @callback callback\n * @param {error} err - Error Object\n * @param {Object} result - A block object,\n */\nGethApiDouble.prototype.eth_getUncleByBlockHashAndIndex = function(hash, index, callback) {\n  callback(null, {});\n};\n\n/**\n * Returns information about a uncle of a block by number and uncle index position.\n *\n * @param {QUANTITY} blockNumber -\n * ^a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the default block parameter.\n * @param {QUANTITY} uncleIndex - the uncle's index position.\n * @callback callback\n * @param {error} err - Error object\n * @param {Object} resutl - A block object,\n */\nGethApiDouble.prototype.eth_getUncleByBlockNumberAndIndex = function(blockNumber, uncleIndex, callback) {\n  callback(null, {});\n};\n\n/**\n * Returns: An Array with the following elements\n * 1: DATA, 32 Bytes - current block header pow-hash\n * 2: DATA, 32 Bytes - the seed hash used for the DAG.\n * 3: DATA, 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.\n *\n * @param {QUANTITY} filterId - A filter id\n * @callback callback\n * @param {error} err - Error object\n * @param {Array} result - the hash of the current block, the seedHash, and the boundary condition to be met (\"target\").\n */\nGethApiDouble.prototype.eth_getWork = function(filterId, callback) {\n  callback(null, []);\n};\n\n/**\n * Used for submitting a proof-of-work solution\n *\n * @param {DATA, 8 Bytes} nonce - The nonce found (64 bits)\n * @param {DATA, 32 Bytes} powHash - The header's pow-hash (256 bits)\n * @param {DATA, 32 Bytes} digest - The mix digest (256 bits)\n * @callback callback\n * @param {error} err - Error object\n * @param {Boolean} result - returns true if the provided solution is valid, otherwise false.\n */\nGethApiDouble.prototype.eth_submitWork = function(nonce, powHash, digest, callback) {\n  callback(null, false);\n};\n\n/**\n * Used for submitting mining hashrate.\n *\n * @param {String} hashRate - a hexadecimal string representation (32 bytes) of the hash rate\n * @param {String} clientID - A random hexadecimal(32 bytes) ID identifying the client\n * @callback callback\n * @param {error} err - Error object\n * @param {Boolean} result - returns true if submitting went through succesfully and false otherwise.\n */\nGethApiDouble.prototype.eth_submitHashrate = function(hashRate, clientID, callback) {\n  callback(null, false);\n};\n\n/**\n * Stores a string in the local database.\n *\n * @param {String} dbName - Database name.\n * @param {String} key - Key name.\n * @param {String} value - String to store.\n * @callback callback\n * @param {error} err - Error object\n * @param {Boolean} result - returns true if the value was stored, otherwise false.\n */\nGethApiDouble.prototype.db_putString = function(dbName, key, value, callback) {\n  callback(null, false);\n};\n\n/**\n * Returns string from the local database\n *\n * @param {String} dbName - Database name.\n * @param {String} key - Key name.\n * @callback callback\n * @param {error} - Error Object\n * @param {String} result - The previously stored string.\n */\nGethApiDouble.prototype.db_getString = function(dbName, key, callback) {\n  callback(null, \"\");\n};\n\n/**\n * Stores binary data in the local database.\n *\n * @param {String} dbName - Database name.\n * @param {String} key - Key name.\n * @param {DATA} data - Data to store.\n * @callback callback\n * @param {error} err - Error Object\n * @param {Boolean} result - returns true if the value was stored, otherwise false.\n */\nGethApiDouble.prototype.db_putHex = function(dbName, key, data, callback) {\n  callback(null, false);\n};\n\n/**\n * Returns binary data from the local database\n *\n * @param {String} dbName - Database name.\n * @param {String} key - Key name.\n * @callback callback\n * @param {error} err - Error Object\n * @param {DATA} result - The previously stored data.\n */\nGethApiDouble.prototype.db_getHex = function(dbName, key, callback) {\n  callback(null, \"0x00\");\n};\n\n/**\n * Sends a whisper message.\n *\n * @param {DATA, 60 Bytes} from - (optional) The identity of the sender.\n * @param {DATA, 60 Bytes} to -\n *  ^(optional) The identity of the receiver. When present whisper will encrypt the message so that\n *  only the receiver can decrypt it.\n * @param {Array of DATA} topics - Array of DATA topics, for the receiver to identify messages.\n * @param {DATA} payload - The payload of the message.\n * @param {QUANTITY} priority - The integer of the priority in a range from ... (?).\n * @param {QUANTITY} ttl - integer of the time to live in seconds.\n * @callback callback\n * @param {error} err - Error Object\n * @param {Boolean} result - returns true if the message was sent, otherwise false.\n */\nGethApiDouble.prototype.shh_post = function(from, to, topics, payload, priority, ttl, callback) {\n  callback(null, false);\n};\n\n/**\n * Creates new whisper identity in the client.\n *\n * @callback callback\n * @param {error} err - Error Object\n * @param {DATA, 60 Bytes} result - the address of the new identiy.\n */\nGethApiDouble.prototype.shh_newIdentity = function(callback) {\n  callback(null, \"0x00\");\n};\n\n/**\n * Checks if the client hold the private keys for a given identity.\n *\n * @param {DATA, 60 Bytes} address - The identity address to check.\n * @callback callback\n * @param {error} err - Error Object\n * @param {Boolean} result - returns true if the client holds the privatekey for that identity, otherwise false.\n */\nGethApiDouble.prototype.shh_hasIdentity = function(address, callback) {\n  callback(null, false);\n};\n\n/**\n * Creates a new group.\n *\n * @callback callback\n * @param {error} err - Error Object\n * @param {DATA, 60 Bytes} result - the address of the new group.\n */\nGethApiDouble.prototype.shh_newGroup = function(callback) {\n  callback(null, \"0x00\");\n};\n\n/**\n * Adds a whisper identity to the group\n *\n * @param {DATA, 60 Bytes} - The identity address to add to a group.\n * @callback callback\n * @param {error} err - Error Object\n * @param {Boolean} result - returns true if the identity was successfully added to the group, otherwise false.\n */\nGethApiDouble.prototype.shh_addToGroup = function(address, callback) {\n  callback(null, false);\n};\n\n/**\n * Creates filter to notify, when client receives whisper message matching the filter options.\n *\n * @param {DATA, 60 Bytes} to -\n * ^(optional) Identity of the receiver. When present it will try to decrypt any incoming message\n *  if the client holds the private key to this identity.\n * @param {Array of DATA} topics - Array of DATA topics which the incoming message's topics should match.\n * @callback callback\n * @param {error} err - Error Object\n * @param {Boolean} result - returns true if the identity was successfully added to the group, otherwise false.\n */\nGethApiDouble.prototype.shh_newFilter = function(to, topics, callback) {\n  callback(null, false);\n};\n\n/**\n * Uninstalls a filter with given id. Should always be called when watch is no longer needed.\n * Additonally Filters timeout when they aren't requested with shh_getFilterChanges for a period of time.\n *\n * @param {QUANTITY} id - The filter id. Ex: \"0x7\"\n * @callback callback\n * @param {error} err - Error Object\n * @param {Boolean} result - true if the filter was successfully uninstalled, otherwise false.\n */\nGethApiDouble.prototype.shh_uninstallFilter = function(id, callback) {\n  callback(null, false);\n};\n\n/**\n * Polling method for whisper filters. Returns new messages since the last call of this method.\n *\n * @param {QUANTITY} id - The filter id. Ex: \"0x7\"\n * @callback callback\n * @param {error} err - Error Object\n * @param {Array} result - More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges\n */\nGethApiDouble.prototype.shh_getFilterChanges = function(id, callback) {\n  callback(null, []);\n};\n\n/**\n * Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages.\n *\n * @param {QUANTITY} id - The filter id. Ex: \"0x7\"\n * @callback callback\n * @param {error} err - Error Object\n * @param {Array} result - See: shh_getFilterChanges\n */\nGethApiDouble.prototype.shh_getMessages = function(id, callback) {\n  callback(null, false);\n};\n\nmodule.exports = GethApiDouble;\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,iBAAD,CAAnB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,MAAD,CAAP,CAAgBC,QAA/B;;AACA,IAAIC,YAAY,GAAGF,OAAO,CAAC,oBAAD,CAA1B;;AACA,IAAIG,EAAE,GAAGH,OAAO,CAAC,aAAD,CAAhB;;AACA,IAAII,eAAe,GAAGJ,OAAO,CAAC,0BAAD,CAA7B;;AAEA,IAAIK,WAAW,GAAGL,OAAO,CAAC,uBAAD,CAAzB;;AACA,IAAIM,GAAG,GAAGN,OAAO,CAAC,oBAAD,CAAjB;;AACA,MAAM;EAAEO;AAAF,IAA2BP,OAAO,CAAC,sBAAD,CAAxC;;AAEA,IAAIQ,WAAW,GAAGR,OAAO,CAAC,kDAAD,CAAzB;;AAEA,MAAMS,UAAU,GAAG,OAAOC,MAAM,CAACC,gBAAP,CAAwBC,QAAxB,CAAiC,EAAjC,CAA1B;AACA,MAAMC,GAAG,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAZ;AAEAZ,QAAQ,CAACa,aAAD,EAAgBN,WAAhB,CAAR;;AAEA,SAASM,aAAT,CAAuBC,OAAvB,EAAgCC,QAAhC,EAA0C;EACxC,IAAIC,IAAI,GAAG,IAAX;EAEA,KAAKC,KAAL,GAAaH,OAAO,CAACG,KAAR,IAAiB,IAAIhB,YAAJ,CAAiBa,OAAjB,EAA0BC,QAA1B,CAA9B;EACA,KAAKD,OAAL,GAAeA,OAAf;EACA,KAAKI,WAAL,GAAmB,KAAnB;EAEA,KAAKC,oBAAL,GAA4B,IAA5B;EACA,KAAKC,6BAAL,GAAqC,EAArC;EAEA,KAAKH,KAAL,CAAWI,UAAX,CAAsB,UAASC,GAAT,EAAc;IAClC,IAAIA,GAAJ,EAAS;MACPN,IAAI,CAACG,oBAAL,GAA4BG,GAA5B;IACD;;IACDN,IAAI,CAACE,WAAL,GAAmB,IAAnB;IAEA,IAAIK,SAAS,GAAGP,IAAI,CAACI,6BAArB;IACAJ,IAAI,CAACI,6BAAL,GAAqC,EAArC;IAEAG,SAAS,CAACC,OAAV,CAAkB,UAASC,QAAT,EAAmB;MACnCC,YAAY,CAAC,YAAW;QACtBD,QAAQ,CAACT,IAAI,CAACG,oBAAN,EAA4BH,IAAI,CAACC,KAAjC,CAAR;MACD,CAFW,CAAZ;IAGD,CAJD;EAKD,CAdD;AAeD;;AAEDJ,aAAa,CAACc,SAAd,CAAwBC,qBAAxB,GAAgD,UAASH,QAAT,EAAmB;EACjE,IAAIT,IAAI,GAAG,IAAX;;EACA,IAAIA,IAAI,CAACE,WAAL,KAAqB,KAAzB,EAAgC;IAC9BF,IAAI,CAACI,6BAAL,CAAmCS,IAAnC,CAAwCJ,QAAxC;EACD,CAFD,MAEO;IACLA,QAAQ,CAACT,IAAI,CAACG,oBAAN,EAA4BH,IAAI,CAACC,KAAjC,CAAR;EACD;AACF,CAPD,C,CASA;;;AACAJ,aAAa,CAACc,SAAd,CAAwBG,aAAxB,GAAwC,UAASC,OAAT,EAAkBC,IAAlB,EAAwBC,GAAxB,EAA6B;EACnE,IAAIjB,IAAI,GAAG,IAAX;;EAEA,IAAIA,IAAI,CAACG,oBAAL,IAA6B,IAAjC,EAAuC;IACrC,OAAOc,GAAG,CAACjB,IAAI,CAACG,oBAAN,CAAV;EACD;;EAED,IAAIH,IAAI,CAACE,WAAL,KAAqB,KAAzB,EAAgC;IAC9BF,IAAI,CAACY,qBAAL,CAA2BZ,IAAI,CAACkB,iBAAL,CAAuBH,OAAvB,EAAgCC,IAAhC,EAAsCC,GAAtC,CAA3B;IACA;EACD;;EAED,IAAIE,MAAM,GAAGnB,IAAI,CAACe,OAAO,CAACI,MAAT,CAAjB;;EAEA,IAAIA,MAAM,IAAI,IAAd,EAAoB;IAClB,OAAOF,GAAG,CAAC,IAAIG,KAAJ,CAAU,YAAYL,OAAO,CAACI,MAApB,GAA6B,iBAAvC,CAAD,CAAV;EACD;;EAED,IAAIE,MAAM,GAAGN,OAAO,CAACM,MAAR,IAAkB,EAA/B;EACA,IAAIC,IAAI,GAAG,GAAGC,MAAH,CAAUF,MAAV,CAAX;EAEA,IAAIG,eAAe,GAAG,KAAtB;;EAEA,IAAIxB,IAAI,CAACyB,6BAAL,CAAmCV,OAAO,CAACI,MAA3C,KAAsDG,IAAI,CAACI,MAAL,GAAcP,MAAM,CAACO,MAAP,GAAgB,CAAxF,EAA2F;IACzFJ,IAAI,CAACT,IAAL,CAAU,QAAV;IACAW,eAAe,GAAG,IAAlB;EACD;;EAEDF,IAAI,CAACT,IAAL,CAAUI,GAAV,EA5BmE,CA8BnE;;EACA,IACEK,IAAI,CAACI,MAAL,GAAcP,MAAM,CAACO,MAArB,IACCP,MAAM,CAACQ,SAAP,KAAqBC,SAArB,IAAkCN,IAAI,CAACI,MAAL,GAAcP,MAAM,CAACQ,SADxD,IAECR,MAAM,CAACQ,SAAP,KAAqBC,SAArB,IAAkCN,IAAI,CAACI,MAAL,GAAcP,MAAM,CAACO,MAH1D,EAIE;IACA,IAAIG,YAAY,GAAI,0CAAyCd,OAAO,CAACI,MAAO,aAA5E;;IACA,IAAIA,MAAM,CAACQ,SAAX,EAAsB;MACpBE,YAAY,IAAK,WAAUV,MAAM,CAACQ,SAAP,GAAmB,CAAE,QAAOR,MAAM,CAACO,MAAP,GAAgB,CAAE,cAAzE;IACD,CAFD,MAEO;MACLG,YAAY,IAAK,WAAUV,MAAM,CAACO,MAAP,GAAgB,CAAE,cAA7C;IACD;;IAED,IAAIF,eAAJ,EAAqB;MACnBK,YAAY,IAAI,0CAAhB;IACD,CAFD,MAEO;MACL;MACAA,YAAY,IAAI,GAAhB;IACD;;IACDA,YAAY,IAAK,oBAAmBP,IAAI,CAACI,MAAL,GAAc,CAAE,eAAcI,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAqB,GAAvF;IAEA,OAAOL,GAAG,CAAC,IAAIG,KAAJ,CAAUS,YAAV,CAAD,CAAV;EACD;;EAEDV,MAAM,CAACa,KAAP,CAAahC,IAAb,EAAmBsB,IAAnB;AACD,CAvDD;;AAyDAzB,aAAa,CAACc,SAAd,CAAwBO,iBAAxB,GAA4C,UAASH,OAAT,EAAkBC,IAAlB,EAAwBC,GAAxB,EAA6B;EACvE,IAAIjB,IAAI,GAAG,IAAX;EACA,OAAO,UAASM,GAAT,EAAcL,KAAd,EAAqB;IAC1B,IAAIK,GAAJ,EAAS;MACPW,GAAG,CAACX,GAAD,CAAH;IACD;;IACDN,IAAI,CAACc,aAAL,CAAmBC,OAAnB,EAA4BC,IAA5B,EAAkCC,GAAlC;EACD,CALD;AAMD,CARD;;AAUApB,aAAa,CAACc,SAAd,CAAwBc,6BAAxB,GAAwD,UAASN,MAAT,EAAiB;EACvE;EACA,IAAIc,OAAO,GAAG;IACZC,cAAc,EAAE,IADJ;IAEZC,WAAW,EAAE,IAFD;IAGZC,uBAAuB,EAAE,IAHb;IAIZC,gBAAgB,EAAE,IAJN;IAKZC,QAAQ,EAAE,IALE;IAMZC,eAAe,EAAE;EANL,CAAd;EASA,OAAON,OAAO,CAACd,MAAD,CAAP,KAAoB,IAA3B;AACD,CAZD,C,CAcA;;;AAEAtB,aAAa,CAACc,SAAd,CAAwB6B,YAAxB,GAAuC,UAAS/B,QAAT,EAAmB;EACxDA,QAAQ,CAAC,IAAD,EAAOgC,MAAM,CAACC,IAAP,CAAY,KAAKzC,KAAL,CAAW0C,QAAvB,CAAP,CAAR;AACD,CAFD;;AAIA9C,aAAa,CAACc,SAAd,CAAwBiC,eAAxB,GAA0C,UAASnC,QAAT,EAAmB;EAC3D,KAAKR,KAAL,CAAW4C,WAAX,CAAuB,UAASvC,GAAT,EAAcwC,MAAd,EAAsB;IAC3C,IAAIxC,GAAJ,EAAS;MACP,OAAOG,QAAQ,CAACH,GAAD,CAAf;IACD;;IACDG,QAAQ,CAAC,IAAD,EAAOvB,EAAE,CAAC6D,GAAH,CAAOD,MAAP,CAAP,CAAR;EACD,CALD;AAMD,CAPD;;AASAjD,aAAa,CAACc,SAAd,CAAwBqC,WAAxB,GAAsC,UAASvC,QAAT,EAAmB;EACvDA,QAAQ,CAAC,IAAD,EAAOvB,EAAE,CAAC6D,GAAH,CAAO,KAAKjD,OAAL,CAAamD,WAApB,CAAP,CAAR;AACD,CAFD;;AAIApD,aAAa,CAACc,SAAd,CAAwBuC,YAAxB,GAAuC,UAASzC,QAAT,EAAmB;EACxDA,QAAQ,CAAC,IAAD,EAAO,KAAKR,KAAL,CAAWkD,QAAlB,CAAR;AACD,CAFD;;AAIAtD,aAAa,CAACc,SAAd,CAAwByC,UAAxB,GAAqC,UAAS3C,QAAT,EAAmB;EACtDA,QAAQ,CAAC,IAAD,EAAO,KAAKR,KAAL,CAAWoD,SAAlB,CAAR;AACD,CAFD;;AAIAxD,aAAa,CAACc,SAAd,CAAwB2C,YAAxB,GAAuC,UAAS7C,QAAT,EAAmB;EACxDA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwB4C,YAAxB,GAAuC,UAAS9C,QAAT,EAAmB;EACxDA,QAAQ,CAAC,IAAD,EAAO3B,KAAK,CAAC0E,YAAN,CAAmB,KAAKvD,KAAL,CAAWwD,QAAX,EAAnB,CAAP,CAAR;AACD,CAFD;;AAIA5D,aAAa,CAACc,SAAd,CAAwBuB,cAAxB,GAAyC,UAASwB,OAAT,EAAkBb,WAAlB,EAA+BpC,QAA/B,EAAyC;EAChF,KAAKR,KAAL,CAAW0D,UAAX,CAAsBD,OAAtB,EAA+Bb,WAA/B,EAA4CpC,QAA5C;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwBwB,WAAxB,GAAsC,UAASuB,OAAT,EAAkBb,WAAlB,EAA+BpC,QAA/B,EAAyC;EAC7E,KAAKR,KAAL,CAAW2D,OAAX,CAAmBF,OAAnB,EAA4Bb,WAA5B,EAAyCpC,QAAzC;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwBkD,oBAAxB,GAA+C,UAAShB,WAAT,EAAsBiB,uBAAtB,EAA+CrD,QAA/C,EAAyD;EACtG,KAAKR,KAAL,CAAW8D,UAAX,CAAsBC,QAAtB,CAA+BnB,WAA/B,EAA4C,UAASvC,GAAT,EAAc2D,KAAd,EAAqB;IAC/D,IAAI3D,GAAJ,EAAS;MACP,IAAIA,GAAG,YAAYhB,oBAAnB,EAAyC;QACvC,OAAOmB,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;MACD,CAFD,MAEO;QACL,OAAOA,QAAQ,CAACH,GAAD,CAAf;MACD;IACF;;IAEDG,QAAQ,CAAC,IAAD,EAAOrB,WAAW,CAAC8E,MAAZ,CAAmBD,KAAnB,EAA0BH,uBAA1B,CAAP,CAAR;EACD,CAVD;AAWD,CAZD;;AAcAjE,aAAa,CAACc,SAAd,CAAwBwD,kBAAxB,GAA6C,UAASC,MAAT,EAAiBN,uBAAjB,EAA0CrD,QAA1C,EAAoD;EAC/F,KAAKoD,oBAAL,CAA0B7B,KAA1B,CAAgC,IAAhC,EAAsCqC,SAAtC;AACD,CAFD;;AAIAxE,aAAa,CAACc,SAAd,CAAwB2D,oCAAxB,GAA+D,UAASzB,WAAT,EAAsBpC,QAAtB,EAAgC;EAC7F,KAAKR,KAAL,CAAW8D,UAAX,CAAsBC,QAAtB,CAA+BnB,WAA/B,EAA4C,UAASvC,GAAT,EAAc2D,KAAd,EAAqB;IAC/D,IAAI3D,GAAJ,EAAS;MACP,IAAIA,GAAG,YAAYhB,oBAAnB,EAAyC;QACvC;QACA,OAAOmB,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;MACD;;MACD,OAAOA,QAAQ,CAACH,GAAD,CAAf;IACD;;IACDG,QAAQ,CAAC,IAAD,EAAOvB,EAAE,CAACqF,oBAAH,CAAwBN,KAAK,CAACO,YAAN,CAAmB9C,MAA3C,CAAP,CAAR;EACD,CATD;AAUD,CAXD;;AAaA7B,aAAa,CAACc,SAAd,CAAwB8D,kCAAxB,GAA6D,UAASC,SAAT,EAAoBjE,QAApB,EAA8B;EACzF,KAAK6D,oCAAL,CAA0CtC,KAA1C,CAAgD,IAAhD,EAAsDqC,SAAtD;AACD,CAFD;;AAIAxE,aAAa,CAACc,SAAd,CAAwBgE,yBAAxB,GAAoD,UAASC,IAAT,EAAenE,QAAf,EAAyB;EAC3E,KAAKR,KAAL,CAAW4E,qBAAX,CAAiCD,IAAjC,EAAuC,UAAStE,GAAT,EAAcwE,OAAd,EAAuB;IAC5D,IAAIxE,GAAJ,EAAS;MACP,OAAOG,QAAQ,CAACH,GAAD,CAAf;IACD;;IAED,IAAIwC,MAAM,GAAG,IAAb;;IAEA,IAAIgC,OAAO,IAAIA,OAAO,CAACb,KAAvB,EAA8B;MAC5BnB,MAAM,GAAGgC,OAAO,CAACZ,MAAR,EAAT;MACAtE,GAAG,CAACY,OAAJ,CAAauE,OAAD,IAAa;QACvB,OAAOjC,MAAM,CAACiC,OAAD,CAAb;MACD,CAFD;IAGD;;IACDtE,QAAQ,CAAC,IAAD,EAAOqC,MAAP,CAAR;EACD,CAdD;AAeD,CAhBD;;AAkBAjD,aAAa,CAACc,SAAd,CAAwBqE,wBAAxB,GAAmD,UAASJ,IAAT,EAAenE,QAAf,EAAyB;EAC1E,KAAKR,KAAL,CAAW4E,qBAAX,CAAiCD,IAAjC,EAAuC,UAAStE,GAAT,EAAcwE,OAAd,EAAuB;IAC5D,IAAIxE,GAAJ,EAAS;MACP,OAAOG,QAAQ,CAACH,GAAD,CAAf;IACD;;IAED,IAAIwC,MAAM,GAAG,IAAb;;IAEA,IAAIgC,OAAJ,EAAa;MACX;MACA,IAAI,CAACA,OAAO,CAACb,KAAb,EAAoB;QAClB;QACAa,OAAO,CAACb,KAAR,GAAgB;UACdO,YAAY,EAAE,EADA;UAEdI,IAAI,EAAE,MAAM;YACV,OAAO,IAAP;UACD,CAJa;UAKdK,MAAM,EAAE;YAAEC,MAAM,EAAE;UAAV;QALM,CAAhB;QAQApC,MAAM,GAAGgC,OAAO,CAACK,EAAR,CAAWC,SAAX,CAAqBN,OAAO,CAACb,KAA7B,CAAT;MACD,CAXD,MAWO;QACLnB,MAAM,GAAGgC,OAAO,CAACK,EAAR,CAAWC,SAAX,CAAqBN,OAAO,CAACb,KAA7B,CAAT;MACD;IACF;;IACDxD,QAAQ,CAAC,IAAD,EAAOqC,MAAP,CAAR;EACD,CAzBD;AA0BD,CA3BD;;AA6BAjD,aAAa,CAACc,SAAd,CAAwB0E,qCAAxB,GAAgE,UAASC,YAAT,EAAuBC,KAAvB,EAA8B9E,QAA9B,EAAwC;EACtG8E,KAAK,GAAGrG,EAAE,CAACgG,MAAH,CAAUK,KAAV,CAAR;EAEA,KAAKtF,KAAL,CAAW+D,QAAX,CAAoBsB,YAApB,EAAkC,UAAShF,GAAT,EAAc2D,KAAd,EAAqB;IACrD,IAAI3D,GAAJ,EAAS;MACP;MACA,IAAIA,GAAG,CAACkF,QAAR,EAAkB;QAChB,OAAO/E,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;MACD,CAFD,MAEO;QACL,OAAOA,QAAQ,CAACH,GAAD,CAAf;MACD;IACF;;IAED,IAAIiF,KAAK,IAAItB,KAAK,CAACO,YAAN,CAAmB9C,MAAhC,EAAwC;MACtC,OAAOjB,QAAQ,CAAC,IAAIW,KAAJ,CAAU,0BAA0BlC,EAAE,CAAC6D,GAAH,CAAOwC,KAAP,CAA1B,GAA0C,2BAApD,CAAD,CAAf;IACD;;IAED,IAAIJ,EAAE,GAAGlB,KAAK,CAACO,YAAN,CAAmBe,KAAnB,CAAT;IACA,IAAIzC,MAAM,GAAGqC,EAAE,CAACC,SAAH,CAAanB,KAAb,CAAb;IAEAxD,QAAQ,CAAC,IAAD,EAAOqC,MAAP,CAAR;EACD,CAlBD;AAmBD,CAtBD;;AAwBAjD,aAAa,CAACc,SAAd,CAAwB8E,uCAAxB,GAAkE,UAASH,YAAT,EAAuBC,KAAvB,EAA8B9E,QAA9B,EAAwC;EACxG,KAAK4E,qCAAL,CAA2CC,YAA3C,EAAyDC,KAAzD,EAAgE9E,QAAhE;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwByB,uBAAxB,GAAkD,UAASsB,OAAT,EAAkBb,WAAlB,EAA+BpC,QAA/B,EAAyC;EACzF,KAAKR,KAAL,CAAWyF,mBAAX,CAA+BhC,OAA/B,EAAwCb,WAAxC,EAAqD,CAACvC,GAAD,EAAMqF,KAAN,KAAgB;IACnE,IAAIrF,GAAG,YAAYhB,oBAAnB,EAAyC;MACvC,OAAOmB,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;IACD;;IACD,OAAOA,QAAQ,CAACH,GAAD,EAAMqF,KAAN,CAAf;EACD,CALD;AAMD,CAPD;;AASA9F,aAAa,CAACc,SAAd,CAAwBiF,QAAxB,GAAmC,UAASlC,OAAT,EAAkBmC,UAAlB,EAA8BpF,QAA9B,EAAwC;EACzE,IAAIqC,MAAJ;EACA,IAAIgD,KAAJ;;EAEA,IAAI;IACFhD,MAAM,GAAG,KAAK7C,KAAL,CAAW8F,IAAX,CAAgBrC,OAAhB,EAAyBmC,UAAzB,CAAT;EACD,CAFD,CAEE,OAAOG,CAAP,EAAU;IACVF,KAAK,GAAGE,CAAR;EACD;;EAEDvF,QAAQ,CAACqF,KAAD,EAAQhD,MAAR,CAAR;AACD,CAXD;;AAaAjD,aAAa,CAACc,SAAd,CAAwBsF,iBAAxB,GAA4C,UAASvC,OAAT,EAAkBwC,eAAlB,EAAmCzF,QAAnC,EAA6C;EACvF,IAAIqC,MAAJ;EACA,IAAIgD,KAAJ;;EAEA,IAAI;IACFhD,MAAM,GAAG,KAAK7C,KAAL,CAAWkG,aAAX,CAAyBzC,OAAzB,EAAkCwC,eAAlC,CAAT;EACD,CAFD,CAEE,OAAOF,CAAP,EAAU;IACVF,KAAK,GAAGE,CAAR;EACD;;EAEDvF,QAAQ,CAACqF,KAAD,EAAQhD,MAAR,CAAR;AACD,CAXD;;AAaAjD,aAAa,CAACc,SAAd,CAAwByF,mBAAxB,GAA8C,UAASC,MAAT,EAAiB5F,QAAjB,EAA2B;EACvE,KAAKR,KAAL,CAAWqG,gBAAX,CAA4B,qBAA5B,EAAmDD,MAAnD,EAA2D,IAA3D,EAAiE5F,QAAjE;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwB4F,sBAAxB,GAAiD,UAASC,KAAT,EAAgB/F,QAAhB,EAA0B;EACzE,IAAIgG,IAAJ;;EACA,IAAID,KAAJ,EAAW;IACTC,IAAI,GAAGvH,EAAE,CAACwH,MAAH,CAAUF,KAAV,CAAP;EACD;;EAED,IAAIC,IAAI,KAAK7E,SAAb,EAAwB;IACtB,MAAM,IAAIzC,eAAJ,CAAoB,yDAApB,CAAN;EACD;;EAED,KAAKc,KAAL,CAAW0G,mBAAX,CAA+BF,IAA/B,EAAqChG,QAArC;AACD,CAXD;;AAaAZ,aAAa,CAACc,SAAd,CAAwBiG,gBAAxB,GAA2C,UAASP,MAAT,EAAiB;EAC1D;EACA,IAAI,CAACA,MAAM,CAACQ,GAAR,IAAe,CAACR,MAAM,CAACS,QAA3B,EAAqC;IACnC,MAAMC,kBAAkB,GAAG,KAAKjH,OAAL,CAAakH,YAAxC;;IACA,IAAID,kBAAkB,IAAI,IAA1B,EAAgC;MAC9B;MACAV,MAAM,CAACQ,GAAP,GAAaE,kBAAb;IACD,CAHD,MAGO;MACL;MACA;MACA;MACAV,MAAM,CAACQ,GAAP,GAAarH,UAAb;IACD;EACF;AACF,CAdD;;AAeAK,aAAa,CAACc,SAAd,CAAwB2B,QAAxB,GAAmC,UAAS+D,MAAT,EAAiBxD,WAAjB,EAA8BpC,QAA9B,EAAwC;EACzE,KAAKmG,gBAAL,CAAsBP,MAAtB;;EACA,KAAKpG,KAAL,CAAWqG,gBAAX,CAA4B,UAA5B,EAAwCD,MAAxC,EAAgDxD,WAAhD,EAA6DpC,QAA7D;AACD,CAHD;;AAKAZ,aAAa,CAACc,SAAd,CAAwB4B,eAAxB,GAA0C,UAAS8D,MAAT,EAAiBxD,WAAjB,EAA8BpC,QAA9B,EAAwC;EAChF,KAAKmG,gBAAL,CAAsBP,MAAtB;;EACA,KAAKpG,KAAL,CAAWqG,gBAAX,CAA4B,iBAA5B,EAA+CD,MAA/C,EAAuDxD,WAAvD,EAAoEpC,QAApE;AACD,CAHD;;AAKAZ,aAAa,CAACc,SAAd,CAAwB0B,gBAAxB,GAA2C,UAASqB,OAAT,EAAkBuD,QAAlB,EAA4BpE,WAA5B,EAAyCpC,QAAzC,EAAmD;EAC5F,KAAKR,KAAL,CAAWiH,YAAX,CAAwBxD,OAAxB,EAAiCuD,QAAjC,EAA2CpE,WAA3C,EAAwDpC,QAAxD;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwBwG,kBAAxB,GAA6C,UAAS1G,QAAT,EAAmB;EAC9D,IAAI2G,QAAQ,GAAGtI,KAAK,CAAC0E,YAAN,CAAmB1E,KAAK,CAACuI,QAAN,CAAe,KAAKpH,KAAL,CAAWqH,cAA1B,CAAnB,CAAf;EACA,KAAKrH,KAAL,CAAWqH,cAAX,IAA6B,CAA7B;EACA7G,QAAQ,CAAC,IAAD,EAAO2G,QAAP,CAAR;AACD,CAJD;;AAMAvH,aAAa,CAACc,SAAd,CAAwB4G,oBAAxB,GAA+C,UAASH,QAAT,EAAmB3G,QAAnB,EAA6B;EAC1E,IAAIiE,SAAS,GAAG,KAAKzE,KAAL,CACbuH,WADa,GAEb5C,IAFa,GAGbjF,QAHa,CAGJ,KAHI,CAAhB,CAD0E,CAK1E;;EACA,KAAKM,KAAL,CAAWwH,IAAX;EACAhH,QAAQ,CAAC,IAAD,EAAO,CAACiE,SAAD,CAAP,CAAR;AACD,CARD;;AAUA7E,aAAa,CAACc,SAAd,CAAwB+G,WAAxB,GAAsC,UAASC,MAAT,EAAiBlH,QAAjB,EAA2B;EAC/D,KAAKR,KAAL,CAAW2H,OAAX,CAAmBD,MAAnB,EAA2BlH,QAA3B;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwBkH,mBAAxB,GAA8C,UAAST,QAAT,EAAmB3G,QAAnB,EAA6B;EACzEA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwBmH,mBAAxB,GAA8C,UAASrH,QAAT,EAAmB;EAC/DA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwBoH,QAAxB,GAAmC,UAAStH,QAAT,EAAmB;EACpDA,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAR;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwBqH,QAAxB,GAAmC,UAASvH,QAAT,EAAmB;EACpDA,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAR;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwBsH,WAAxB,GAAsC,UAASxH,QAAT,EAAmB;EACvDA,QAAQ,CAAC,IAAD,EAAO,GAAP,CAAR;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwBuH,gBAAxB,GAA2C,UAASzH,QAAT,EAAmB;EAC5DA,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAR;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwBwH,WAAxB,GAAsC,UAAS1H,QAAT,EAAmB;EACvDA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwByH,aAAxB,GAAwC,UAAS3H,QAAT,EAAmB;EACzDA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwB0H,aAAxB,GAAwC,UAAS5H,QAAT,EAAmB;EACzDA,QAAQ,CAAC,IAAD,EAAO,CAAP,CAAR;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwB2H,kBAAxB,GAA6C,UAAS7H,QAAT,EAAmB;EAC9DA,QAAQ,CAAC,IAAD,EAAO,yBAAyBpB,GAAG,CAACkJ,OAA7B,GAAuC,cAA9C,CAAR;AACD,CAFD;;AAIA1I,aAAa,CAACc,SAAd,CAAwB6H,SAAxB,GAAoC,UAASC,MAAT,EAAiBhI,QAAjB,EAA2B;EAC7DA,QAAQ,CAAC,IAAD,EAAOvB,EAAE,CAAC6D,GAAH,CAAOjE,KAAK,CAAC4J,SAAN,CAAgBD,MAAhB,CAAP,CAAP,CAAR;AACD,CAFD;;AAIA5I,aAAa,CAACc,SAAd,CAAwBgI,WAAxB,GAAsC,UAASlI,QAAT,EAAmB;EACvD;EACAA,QAAQ,CAAC,IAAD,EAAO,KAAKR,KAAL,CAAW0I,WAAX,GAAyB,EAAhC,CAAR;AACD,CAHD;;AAKA9I,aAAa,CAACc,SAAd,CAAwBiI,WAAxB,GAAsC,UAASC,OAAT,EAAkBpI,QAAlB,EAA4B;EAChE,IAAI,CAACA,QAAD,IAAa,OAAOoI,OAAP,KAAmB,UAApC,EAAgD;IAC9CpI,QAAQ,GAAGoI,OAAX;IACAA,OAAO,GAAG,IAAV;EACD;;EAED,KAAK5I,KAAL,CAAW6I,WAAX,CAAuB,UAASxI,GAAT,EAAc;IACnCG,QAAQ,CAACH,GAAD,EAAM,IAAN,CAAR;EACD,CAFD;AAGD,CATD,C,CAWA;;;AACAT,aAAa,CAACc,SAAd,CAAwBiI,WAAxB,CAAoCjH,SAApC,GAAgD,CAAhD;;AAEA9B,aAAa,CAACc,SAAd,CAAwBoI,UAAxB,GAAqC,UAAStI,QAAT,EAAmB;EACtD,KAAKR,KAAL,CAAW+I,UAAX,CAAsB,UAAS1I,GAAT,EAAc;IAClCG,QAAQ,CAACH,GAAD,EAAM,IAAN,CAAR;EACD,CAFD;AAGD,CAJD;;AAMAT,aAAa,CAACc,SAAd,CAAwBsI,WAAxB,GAAsC,UAASxI,QAAT,EAAmB;EACvD;EACAA,QAAQ,CAAC,IAAD,EAAO;IAAEyI,GAAG,EAAE,KAAP;IAAcC,GAAG,EAAE,KAAnB;IAA0BC,GAAG,EAAE,KAA/B;IAAsCC,IAAI,EAAE,KAA5C;IAAmDC,GAAG,EAAE,KAAxD;IAA+DC,QAAQ,EAAE;EAAzE,CAAP,CAAR;AACD,CAHD;;AAKA1J,aAAa,CAACc,SAAd,CAAwB6I,qBAAxB,GAAgD,UAAS/I,QAAT,EAAmB;EACjEA,QAAQ,CAAC,IAAD,EAAOgC,MAAM,CAACC,IAAP,CAAY,KAAKzC,KAAL,CAAWwJ,iBAAvB,CAAP,CAAR;AACD,CAFD;;AAIA5J,aAAa,CAACc,SAAd,CAAwB+I,mBAAxB,GAA8C,UAASC,QAAT,EAAmBlJ,QAAnB,EAA6B;EACzE,IAAImJ,OAAO,GAAG,KAAK3J,KAAL,CAAW4J,aAAX,CAAyB;IAAEC,QAAQ,EAAE;EAAZ,CAAzB,CAAd;EACA,KAAK7J,KAAL,CAAW0C,QAAX,CAAoBiH,OAAO,CAAClG,OAAR,CAAgBqG,WAAhB,EAApB,IAAqDH,OAArD;EACA,KAAK3J,KAAL,CAAWwJ,iBAAX,CAA6BG,OAAO,CAAClG,OAAR,CAAgBqG,WAAhB,EAA7B,IAA8D,IAA9D;EACA,KAAK9J,KAAL,CAAW+J,iBAAX,CAA6BJ,OAAO,CAAClG,OAAR,CAAgBqG,WAAhB,EAA7B,IAA8DJ,QAA9D;EACAlJ,QAAQ,CAAC,IAAD,EAAOmJ,OAAO,CAAClG,OAAf,CAAR;AACD,CAND;;AAQA7D,aAAa,CAACc,SAAd,CAAwBsJ,qBAAxB,GAAgD,UAASC,MAAT,EAAiBP,QAAjB,EAA2BlJ,QAA3B,EAAqC;EACnF,IAAImJ,OAAO,GAAG,KAAK3J,KAAL,CAAW4J,aAAX,CAAyB;IAAEM,SAAS,EAAED;EAAb,CAAzB,CAAd;EACA,KAAKjK,KAAL,CAAW0C,QAAX,CAAoBiH,OAAO,CAAClG,OAAR,CAAgBqG,WAAhB,EAApB,IAAqDH,OAArD;EACA,KAAK3J,KAAL,CAAWwJ,iBAAX,CAA6BG,OAAO,CAAClG,OAAR,CAAgBqG,WAAhB,EAA7B,IAA8D,IAA9D;EACA,KAAK9J,KAAL,CAAW+J,iBAAX,CAA6BJ,OAAO,CAAClG,OAAR,CAAgBqG,WAAhB,EAA7B,IAA8DJ,QAA9D;EACAlJ,QAAQ,CAAC,IAAD,EAAOmJ,OAAO,CAAClG,OAAf,CAAR;AACD,CAND;;AAQA7D,aAAa,CAACc,SAAd,CAAwByJ,oBAAxB,GAA+C,UAAS1G,OAAT,EAAkBjD,QAAlB,EAA4B;EACzE,IAAImJ,OAAO,GAAG,KAAK3J,KAAL,CAAWwJ,iBAAX,CAA6B/F,OAAO,CAACqG,WAAR,EAA7B,CAAd;;EACA,IAAIH,OAAO,KAAK,IAAhB,EAAsB;IACpB,IAAI9D,KAAK,GAAG,mBAAZ;IACA,OAAOrF,QAAQ,CAACqF,KAAD,CAAf;EACD;;EACD,OAAO,KAAK7F,KAAL,CAAWoK,iBAAX,CAA6B3G,OAAO,CAACqG,WAAR,EAA7B,CAAP;EACAtJ,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACD,CARD;;AAUAZ,aAAa,CAACc,SAAd,CAAwB2J,sBAAxB,GAAiD,UAAS5G,OAAT,EAAkBiG,QAAlB,EAA4BY,QAA5B,EAAsC9J,QAAtC,EAAgD;EAC/F;EACA,IAAImJ,OAAO,GAAG,KAAK3J,KAAL,CAAWwJ,iBAAX,CAA6B/F,OAAO,CAACqG,WAAR,EAA7B,CAAd;;EACA,IAAIH,OAAO,KAAK,IAAhB,EAAsB;IACpB,IAAIY,YAAY,GAAG,mBAAnB;IACA,OAAO/J,QAAQ,CAAC+J,YAAD,CAAf;EACD;;EAED,IAAIC,cAAc,GAAG,KAAKxK,KAAL,CAAW+J,iBAAX,CAA6BtG,OAAO,CAACqG,WAAR,EAA7B,CAArB;;EACA,IAAIU,cAAc,KAAK7I,SAAnB,IAAgC6I,cAAc,KAAKd,QAAvD,EAAiE;IAC/D,IAAIe,aAAa,GAAG,kBAApB;IACA,OAAOjK,QAAQ,CAACiK,aAAD,CAAf;EACD;;EAED,KAAKzK,KAAL,CAAWoK,iBAAX,CAA6B3G,OAAO,CAACqG,WAAR,EAA7B,IAAsD,IAAtD;EACAtJ,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACD,CAhBD;;AAkBAZ,aAAa,CAACc,SAAd,CAAwBgK,wBAAxB,GAAmD,UAAStE,MAAT,EAAiBsD,QAAjB,EAA2BlJ,QAA3B,EAAqC;EACtF,IAAI4F,MAAM,CAACuE,IAAP,IAAe,IAAnB,EAAyB;IACvB,IAAI9E,KAAK,GAAG,kBAAZ;IACArF,QAAQ,CAACqF,KAAD,CAAR;IACA;EACD;;EAED,IAAI8E,IAAI,GAAG9L,KAAK,CAAC0E,YAAN,CAAmB6C,MAAM,CAACuE,IAA1B,EAAgCb,WAAhC,EAAX;EAEA,IAAI/J,IAAI,GAAG,IAAX;EACAA,IAAI,CAACsK,sBAAL,CAA4BM,IAA5B,EAAkCjB,QAAlC,EAA4C,IAA5C,EAAkD,UAASrJ,GAAT,EAAc;IAC9D,IAAIA,GAAJ,EAAS;MACP,OAAOG,QAAQ,CAACH,GAAD,CAAf;IACD;;IAEDN,IAAI,CAACC,KAAL,CAAWqG,gBAAX,CAA4B,qBAA5B,EAAmDD,MAAnD,EAA2D,IAA3D,EAAiE,UAAS/F,GAAT,EAAcuK,GAAd,EAAmB;MAClF7K,IAAI,CAACC,KAAL,CAAWoK,iBAAX,CAA6BO,IAAI,CAACb,WAAL,EAA7B,IAAmD,KAAnD;MACAtJ,QAAQ,CAACH,GAAD,EAAMuK,GAAN,CAAR;IACD,CAHD;EAID,CATD;AAUD,CApBD;AAsBA;;;AAEAhL,aAAa,CAACc,SAAd,CAAwBmK,YAAxB,GAAuC,UAASrK,QAAT,EAAmB;EACxD,KAAKR,KAAL,CAAW8K,QAAX,CAAoBtK,QAApB;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwBqK,UAAxB,GAAqC,UAASC,UAAT,EAAqBxK,QAArB,EAA+B;EAClE,KAAKR,KAAL,CAAWiL,MAAX,CAAkBD,UAAlB,EAA8BxK,QAA9B;AACD,CAFD;;AAIAZ,aAAa,CAACc,SAAd,CAAwBwK,gBAAxB,GAA2C,UAASC,OAAT,EAAkB3K,QAAlB,EAA4B;EACrEA,QAAQ,CAAC,IAAD,EAAO,KAAKR,KAAL,CAAW8D,UAAX,CAAsBsH,YAAtB,CAAmCD,OAAnC,CAAP,CAAR;AACD,CAFD;;AAIAvL,aAAa,CAACc,SAAd,CAAwB2K,WAAxB,GAAsC,UAASC,IAAT,EAAe9K,QAAf,EAAyB;EAC7DA,QAAQ,CAAC,IAAD,EAAO,KAAKR,KAAL,CAAW8D,UAAX,CAAsByH,OAAtB,CAA8B,IAAIC,IAAJ,CAASF,IAAT,CAA9B,CAAP,CAAR;AACD,CAFD;;AAIA1L,aAAa,CAACc,SAAd,CAAwB+K,QAAxB,GAAmC,UAASC,SAAT,EAAoBlL,QAApB,EAA8B;EAC/D,IAAI,OAAOkL,SAAP,KAAqB,UAAzB,EAAqC;IACnClL,QAAQ,GAAGkL,SAAX;IACAA,SAAS,GAAG/J,SAAZ;EACD;;EACD,KAAK3B,KAAL,CAAW2L,YAAX,CAAwBD,SAAxB,EAAmC,UAASrL,GAAT,EAAc;IAC/C,IAAIA,GAAJ,EAAS;MACP,OAAOG,QAAQ,CAACH,GAAD,CAAf;IACD;;IACDG,QAAQ,CAACH,GAAD,EAAM,KAAN,CAAR;EACD,CALD;AAMD,CAXD,C,CAaA;;;AACAT,aAAa,CAACc,SAAd,CAAwB+K,QAAxB,CAAiC/J,SAAjC,GAA6C,CAA7C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA9B,aAAa,CAACc,SAAd,CAAwBkL,wBAAxB,GAAmD,UAASnI,OAAT,EAAkBjD,QAAlB,EAA4B;EAC7E;EACAiD,OAAO,GAAGA,OAAO,CAACqG,WAAR,EAAV;;EACA,IAAI,KAAK9J,KAAL,CAAWoK,iBAAX,CAA6B3G,OAA7B,MAA0C,IAA9C,EAAoD;IAClD,IAAI,KAAKzD,KAAL,CAAWwJ,iBAAX,CAA6B/F,OAA7B,MAA0C,IAA9C,EAAoD;MAClD;MACA,KAAKzD,KAAL,CAAWoK,iBAAX,CAA6B3G,OAA7B,IAAwC,IAAxC;MACA,OAAOjD,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;IACD,CAJD,MAIO;MACL;MACA;MACA,OAAOA,QAAQ,CAAC,IAAIW,KAAJ,CAAU,sCAAV,CAAD,CAAf;IACD;EACF,CAb4E,CAc7E;;;EACAX,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAhBD;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBmL,sBAAxB,GAAiD,UAASpI,OAAT,EAAkBjD,QAAlB,EAA4B;EAC3E;EACAiD,OAAO,GAAGA,OAAO,CAACqG,WAAR,EAAV;;EACA,IAAI,KAAK9J,KAAL,CAAWoK,iBAAX,CAA6B3G,OAA7B,CAAJ,EAA2C;IACzC,IAAI,KAAKzD,KAAL,CAAWwJ,iBAAX,CAA6B/F,OAA7B,CAAJ,EAA2C;MACzC;MACA,OAAOjD,QAAQ,CAAC,IAAIW,KAAJ,CAAU,oCAAV,CAAD,CAAf;IACD,CAHD,MAGO;MACL;MACA,OAAO,KAAKnB,KAAL,CAAWoK,iBAAX,CAA6B3G,OAA7B,CAAP;MACA,OAAOjD,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;IACD;EACF,CAZ0E,CAa3E;;;EACAA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAfD;;AAiBAZ,aAAa,CAACc,SAAd,CAAwBoL,sBAAxB,GAAiD,UAAS3H,MAAT,EAAiB/C,MAAjB,EAAyBZ,QAAzB,EAAmC;EAClF,IAAI,OAAOY,MAAP,KAAkB,UAAtB,EAAkC;IAChCZ,QAAQ,GAAGY,MAAX;IACAA,MAAM,GAAG,EAAT;EACD;;EAED,KAAKpB,KAAL,CAAW+L,qBAAX,CAAiC5H,MAAjC,EAAyC/C,MAAzC,EAAiDZ,QAAjD;AACD,CAPD;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBsL,4BAAxB,GAAuD,UAASrH,IAAT,EAAenE,QAAf,EAAyB;EAC9EA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBuL,8BAAxB,GAAyD,UAASrJ,WAAT,EAAsBpC,QAAtB,EAAgC;EACvFA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBwL,+BAAxB,GAA0D,UAASvH,IAAT,EAAeW,KAAf,EAAsB9E,QAAtB,EAAgC;EACxFA,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwByL,iCAAxB,GAA4D,UAASvJ,WAAT,EAAsBwJ,UAAtB,EAAkC5L,QAAlC,EAA4C;EACtGA,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwB2L,WAAxB,GAAsC,UAASlF,QAAT,EAAmB3G,QAAnB,EAA6B;EACjEA,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwB4L,cAAxB,GAAyC,UAASC,KAAT,EAAgBC,OAAhB,EAAyBC,MAAzB,EAAiCjM,QAAjC,EAA2C;EAClFA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBgM,kBAAxB,GAA6C,UAASC,QAAT,EAAmBC,QAAnB,EAA6BpM,QAA7B,EAAuC;EAClFA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBmM,YAAxB,GAAuC,UAASC,MAAT,EAAiBC,GAAjB,EAAsBC,KAAtB,EAA6BxM,QAA7B,EAAuC;EAC5EA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBuM,YAAxB,GAAuC,UAASH,MAAT,EAAiBC,GAAjB,EAAsBvM,QAAtB,EAAgC;EACrEA,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBwM,SAAxB,GAAoC,UAASJ,MAAT,EAAiBC,GAAjB,EAAsBvG,IAAtB,EAA4BhG,QAA5B,EAAsC;EACxEA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwByM,SAAxB,GAAoC,UAASL,MAAT,EAAiBC,GAAjB,EAAsBvM,QAAtB,EAAgC;EAClEA,QAAQ,CAAC,IAAD,EAAO,MAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwB0M,QAAxB,GAAmC,UAASzC,IAAT,EAAe1L,EAAf,EAAmBoO,MAAnB,EAA2BvM,OAA3B,EAAoCwM,QAApC,EAA8CC,GAA9C,EAAmD/M,QAAnD,EAA6D;EAC9FA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwB8M,eAAxB,GAA0C,UAAShN,QAAT,EAAmB;EAC3DA,QAAQ,CAAC,IAAD,EAAO,MAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwB+M,eAAxB,GAA0C,UAAShK,OAAT,EAAkBjD,QAAlB,EAA4B;EACpEA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBgN,YAAxB,GAAuC,UAASlN,QAAT,EAAmB;EACxDA,QAAQ,CAAC,IAAD,EAAO,MAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBiN,cAAxB,GAAyC,UAASlK,OAAT,EAAkBjD,QAAlB,EAA4B;EACnEA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBkN,aAAxB,GAAwC,UAAS3O,EAAT,EAAaoO,MAAb,EAAqB7M,QAArB,EAA+B;EACrEA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBmN,mBAAxB,GAA8C,UAASC,EAAT,EAAatN,QAAb,EAAuB;EACnEA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBqN,oBAAxB,GAA+C,UAASD,EAAT,EAAatN,QAAb,EAAuB;EACpEA,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAR;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACc,SAAd,CAAwBsN,eAAxB,GAA0C,UAASF,EAAT,EAAatN,QAAb,EAAuB;EAC/DA,QAAQ,CAAC,IAAD,EAAO,KAAP,CAAR;AACD,CAFD;;AAIAyN,MAAM,CAACC,OAAP,GAAiBtO,aAAjB"},"metadata":{},"sourceType":"script"}