{"ast":null,"code":"const ethUtil = require('ethereumjs-util');\n\nconst MR = require('miller-rabin');\n\nconst BN = ethUtil.BN;\nexports.params = {\n  DATASET_BYTES_INIT: 1073741824,\n  // 2^30\n  DATASET_BYTES_GROWTH: 8388608,\n  // 2 ^ 23\n  CACHE_BYTES_INIT: 16777216,\n  // 2**24 number of bytes in dataset at genesis\n  CACHE_BYTES_GROWTH: 131072,\n  // 2**17 cache growth per epoch\n  CACHE_MULTIPLIER: 1024,\n  // Size of the DAG relative to the cache\n  EPOCH_LENGTH: 30000,\n  // blocks per epoch\n  MIX_BYTES: 128,\n  // width of mix\n  HASH_BYTES: 64,\n  // hash length in bytes\n  DATASET_PARENTS: 256,\n  // number of parents of each dataset element\n  CACHE_ROUNDS: 3,\n  // number of rounds in cache production\n  ACCESSES: 64,\n  WORD_BYTES: 4\n};\n\nexports.getCacheSize = function (epoc) {\n  var mr = new MR();\n  var sz = exports.params.CACHE_BYTES_INIT + exports.params.CACHE_BYTES_GROWTH * epoc;\n  sz -= exports.params.HASH_BYTES;\n\n  while (!mr.test(new BN(sz / exports.params.HASH_BYTES))) {\n    sz -= 2 * exports.params.HASH_BYTES;\n  }\n\n  return sz;\n};\n\nexports.getFullSize = function (epoc) {\n  var mr = new MR();\n  var sz = exports.params.DATASET_BYTES_INIT + exports.params.DATASET_BYTES_GROWTH * epoc;\n  sz -= exports.params.MIX_BYTES;\n\n  while (!mr.test(new BN(sz / exports.params.MIX_BYTES))) {\n    sz -= 2 * exports.params.MIX_BYTES;\n  }\n\n  return sz;\n};\n\nexports.getEpoc = function (blockNumber) {\n  return Math.floor(blockNumber / exports.params.EPOCH_LENGTH);\n};\n/**\n * Generates a seed give the end epoc and optional the begining epoc and the\n * begining epoc seed\n * @method getSeed\n * @param end Number\n * @param begin Number\n * @param seed Buffer\n */\n\n\nexports.getSeed = function (seed, begin, end) {\n  for (var i = begin; i < end; i++) {\n    seed = ethUtil.keccak256(seed);\n  }\n\n  return seed;\n};\n\nvar fnv = exports.fnv = function (x, y) {\n  return ((x * 0x01000000 | 0) + (x * 0x193 | 0) ^ y) >>> 0;\n};\n\nexports.fnvBuffer = function (a, b) {\n  var r = Buffer.alloc(a.length);\n\n  for (var i = 0; i < a.length; i = i + 4) {\n    r.writeUInt32LE(fnv(a.readUInt32LE(i), b.readUInt32LE(i)), i);\n  }\n\n  return r;\n};\n\nexports.bufReverse = function (a) {\n  const length = a.length;\n  var b = Buffer.alloc(length);\n\n  for (var i = 0; i < length; i++) {\n    b[i] = a[length - i - 1];\n  }\n\n  return b;\n};","map":{"version":3,"names":["ethUtil","require","MR","BN","exports","params","DATASET_BYTES_INIT","DATASET_BYTES_GROWTH","CACHE_BYTES_INIT","CACHE_BYTES_GROWTH","CACHE_MULTIPLIER","EPOCH_LENGTH","MIX_BYTES","HASH_BYTES","DATASET_PARENTS","CACHE_ROUNDS","ACCESSES","WORD_BYTES","getCacheSize","epoc","mr","sz","test","getFullSize","getEpoc","blockNumber","Math","floor","getSeed","seed","begin","end","i","keccak256","fnv","x","y","fnvBuffer","a","b","r","Buffer","alloc","length","writeUInt32LE","readUInt32LE","bufReverse"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/node_modules/ethashjs/util.js"],"sourcesContent":["const ethUtil = require('ethereumjs-util')\nconst MR = require('miller-rabin')\nconst BN = ethUtil.BN\n\nexports.params = {\n  DATASET_BYTES_INIT: 1073741824, // 2^30\n  DATASET_BYTES_GROWTH: 8388608, // 2 ^ 23\n  CACHE_BYTES_INIT: 16777216, // 2**24 number of bytes in dataset at genesis\n  CACHE_BYTES_GROWTH: 131072, // 2**17 cache growth per epoch\n  CACHE_MULTIPLIER: 1024, // Size of the DAG relative to the cache\n  EPOCH_LENGTH: 30000, // blocks per epoch\n  MIX_BYTES: 128, // width of mix\n  HASH_BYTES: 64, // hash length in bytes\n  DATASET_PARENTS: 256, // number of parents of each dataset element\n  CACHE_ROUNDS: 3, // number of rounds in cache production\n  ACCESSES: 64,\n  WORD_BYTES: 4\n}\n\nexports.getCacheSize = function (epoc) {\n  var mr = new MR()\n  var sz =\n    exports.params.CACHE_BYTES_INIT + exports.params.CACHE_BYTES_GROWTH * epoc\n  sz -= exports.params.HASH_BYTES\n  while (!mr.test(new BN(sz / exports.params.HASH_BYTES))) {\n    sz -= 2 * exports.params.HASH_BYTES\n  }\n  return sz\n}\n\nexports.getFullSize = function (epoc) {\n  var mr = new MR()\n  var sz =\n    exports.params.DATASET_BYTES_INIT +\n    exports.params.DATASET_BYTES_GROWTH * epoc\n  sz -= exports.params.MIX_BYTES\n  while (!mr.test(new BN(sz / exports.params.MIX_BYTES))) {\n    sz -= 2 * exports.params.MIX_BYTES\n  }\n  return sz\n}\n\nexports.getEpoc = function (blockNumber) {\n  return Math.floor(blockNumber / exports.params.EPOCH_LENGTH)\n}\n\n/**\n * Generates a seed give the end epoc and optional the begining epoc and the\n * begining epoc seed\n * @method getSeed\n * @param end Number\n * @param begin Number\n * @param seed Buffer\n */\nexports.getSeed = function (seed, begin, end) {\n  for (var i = begin; i < end; i++) {\n    seed = ethUtil.keccak256(seed)\n  }\n  return seed\n}\n\nvar fnv = (exports.fnv = function (x, y) {\n  return ((((x * 0x01000000) | 0) + ((x * 0x193) | 0)) ^ y) >>> 0\n})\n\nexports.fnvBuffer = function (a, b) {\n  var r = Buffer.alloc(a.length)\n  for (var i = 0; i < a.length; i = i + 4) {\n    r.writeUInt32LE(fnv(a.readUInt32LE(i), b.readUInt32LE(i)), i)\n  }\n  return r\n}\n\nexports.bufReverse = function (a) {\n  const length = a.length\n  var b = Buffer.alloc(length)\n  for (var i = 0; i < length; i++) {\n    b[i] = a[length - i - 1]\n  }\n  return b\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}