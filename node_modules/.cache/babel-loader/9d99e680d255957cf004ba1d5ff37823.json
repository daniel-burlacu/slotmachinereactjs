{"ast":null,"code":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar ethUtil = require('ethereumjs-util');\n\nvar crypto = require('crypto');\n\nvar randomBytes = require('randombytes');\n\nvar scryptsy = require('scryptsy');\n\nvar uuidv4 = require('uuid/v4');\n\nvar bs58check = require('bs58check');\n\nfunction assert(val, msg) {\n  if (!val) {\n    throw new Error(msg || 'Assertion failed');\n  }\n}\n\nfunction runCipherBuffer(cipher, data) {\n  return Buffer.concat([cipher.update(data), cipher.final()]);\n}\n\nvar Wallet = function Wallet(priv, pub) {\n  if (priv && pub) {\n    throw new Error('Cannot supply both a private and a public key to the constructor');\n  }\n\n  if (priv && !ethUtil.isValidPrivate(priv)) {\n    throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n  }\n\n  if (pub && !ethUtil.isValidPublic(pub)) {\n    throw new Error('Invalid public key');\n  }\n\n  this._privKey = priv;\n  this._pubKey = pub;\n};\n\nObject.defineProperty(Wallet.prototype, 'privKey', {\n  get: function get() {\n    assert(this._privKey, 'This is a public key only wallet');\n    return this._privKey;\n  }\n});\nObject.defineProperty(Wallet.prototype, 'pubKey', {\n  get: function get() {\n    if (!this._pubKey) {\n      this._pubKey = ethUtil.privateToPublic(this.privKey);\n    }\n\n    return this._pubKey;\n  }\n});\n\nWallet.generate = function (icapDirect) {\n  if (icapDirect) {\n    var max = new ethUtil.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\n\n    while (true) {\n      var privKey = randomBytes(32);\n\n      if (new ethUtil.BN(ethUtil.privateToAddress(privKey)).lte(max)) {\n        return new Wallet(privKey);\n      }\n    }\n  } else {\n    return new Wallet(randomBytes(32));\n  }\n};\n\nWallet.generateVanityAddress = function (pattern) {\n  if ((typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) !== 'object') {\n    pattern = new RegExp(pattern);\n  }\n\n  while (true) {\n    var privKey = randomBytes(32);\n    var address = ethUtil.privateToAddress(privKey);\n\n    if (pattern.test(address.toString('hex'))) {\n      return new Wallet(privKey);\n    }\n  }\n};\n\nWallet.prototype.getPrivateKey = function () {\n  return this.privKey;\n};\n\nWallet.prototype.getPrivateKeyString = function () {\n  return ethUtil.bufferToHex(this.getPrivateKey());\n};\n\nWallet.prototype.getPublicKey = function () {\n  return this.pubKey;\n};\n\nWallet.prototype.getPublicKeyString = function () {\n  return ethUtil.bufferToHex(this.getPublicKey());\n};\n\nWallet.prototype.getAddress = function () {\n  return ethUtil.publicToAddress(this.pubKey);\n};\n\nWallet.prototype.getAddressString = function () {\n  return ethUtil.bufferToHex(this.getAddress());\n};\n\nWallet.prototype.getChecksumAddressString = function () {\n  return ethUtil.toChecksumAddress(this.getAddressString());\n}; // https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n\n\nWallet.prototype.toV3 = function (password, opts) {\n  assert(this._privKey, 'This is a public key only wallet');\n  opts = opts || {};\n  var salt = opts.salt || randomBytes(32);\n  var iv = opts.iv || randomBytes(16);\n  var derivedKey;\n  var kdf = opts.kdf || 'scrypt';\n  var kdfparams = {\n    dklen: opts.dklen || 32,\n    salt: salt.toString('hex')\n  };\n\n  if (kdf === 'pbkdf2') {\n    kdfparams.c = opts.c || 262144;\n    kdfparams.prf = 'hmac-sha256';\n    derivedKey = crypto.pbkdf2Sync(Buffer.from(password), salt, kdfparams.c, kdfparams.dklen, 'sha256');\n  } else if (kdf === 'scrypt') {\n    // FIXME: support progress reporting callback\n    kdfparams.n = opts.n || 262144;\n    kdfparams.r = opts.r || 8;\n    kdfparams.p = opts.p || 1;\n    derivedKey = scryptsy(Buffer.from(password), salt, kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else {\n    throw new Error('Unsupported kdf');\n  }\n\n  var cipher = crypto.createCipheriv(opts.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n\n  if (!cipher) {\n    throw new Error('Unsupported cipher');\n  }\n\n  var ciphertext = runCipherBuffer(cipher, this.privKey);\n  var mac = ethUtil.keccak256(Buffer.concat([derivedKey.slice(16, 32), Buffer.from(ciphertext, 'hex')]));\n  return {\n    version: 3,\n    id: uuidv4({\n      random: opts.uuid || randomBytes(16)\n    }),\n    address: this.getAddress().toString('hex'),\n    crypto: {\n      ciphertext: ciphertext.toString('hex'),\n      cipherparams: {\n        iv: iv.toString('hex')\n      },\n      cipher: opts.cipher || 'aes-128-ctr',\n      kdf: kdf,\n      kdfparams: kdfparams,\n      mac: mac.toString('hex')\n    }\n  };\n};\n\nWallet.prototype.getV3Filename = function (timestamp) {\n  /*\n   * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n   * is a pain in Javascript, everbody knows that. We could use moment.js,\n   * but decide to do it manually in order to save space.\n   *\n   * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n   * but does it really matter?\n   *\n   * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n   *\n   */\n  var ts = timestamp ? new Date(timestamp) : new Date();\n  return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\n};\n\nWallet.prototype.toV3String = function (password, opts) {\n  return JSON.stringify(this.toV3(password, opts));\n};\n\nWallet.fromPublicKey = function (pub, nonStrict) {\n  if (nonStrict) {\n    pub = ethUtil.importPublic(pub);\n  }\n\n  return new Wallet(null, pub);\n};\n\nWallet.fromExtendedPublicKey = function (pub) {\n  assert(pub.slice(0, 4) === 'xpub', 'Not an extended public key');\n  pub = bs58check.decode(pub).slice(45); // Convert to an Ethereum public key\n\n  return Wallet.fromPublicKey(pub, true);\n};\n\nWallet.fromPrivateKey = function (priv) {\n  return new Wallet(priv);\n};\n\nWallet.fromExtendedPrivateKey = function (priv) {\n  assert(priv.slice(0, 4) === 'xprv', 'Not an extended private key');\n  var tmp = bs58check.decode(priv);\n  assert(tmp[45] === 0, 'Invalid extended private key');\n  return Wallet.fromPrivateKey(tmp.slice(46));\n}; // https://github.com/ethereum/go-ethereum/wiki/Passphrase-protected-key-store-spec\n\n\nWallet.fromV1 = function (input, password) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(input);\n\n  if (json.Version !== '1') {\n    throw new Error('Not a V1 wallet');\n  }\n\n  if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n    throw new Error('Unsupported key derivation scheme');\n  }\n\n  var kdfparams = json.Crypto.KeyHeader.KdfParams;\n  var derivedKey = scryptsy(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen);\n  var ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\n  var mac = ethUtil.keccak256(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n\n  if (mac.toString('hex') !== json.Crypto.MAC) {\n    throw new Error('Key derivation failed - possibly wrong passphrase');\n  }\n\n  var decipher = crypto.createDecipheriv('aes-128-cbc', ethUtil.keccak256(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\n  var seed = runCipherBuffer(decipher, ciphertext);\n  return new Wallet(seed);\n};\n\nWallet.fromV3 = function (input, password, nonStrict) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n\n  if (json.version !== 3) {\n    throw new Error('Not a V3 wallet');\n  }\n\n  var derivedKey;\n  var kdfparams;\n\n  if (json.crypto.kdf === 'scrypt') {\n    kdfparams = json.crypto.kdfparams; // FIXME: support progress reporting callback\n\n    derivedKey = scryptsy(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else if (json.crypto.kdf === 'pbkdf2') {\n    kdfparams = json.crypto.kdfparams;\n\n    if (kdfparams.prf !== 'hmac-sha256') {\n      throw new Error('Unsupported parameters to PBKDF2');\n    }\n\n    derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else {\n    throw new Error('Unsupported key derivation scheme');\n  }\n\n  var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n  var mac = ethUtil.keccak256(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n\n  if (mac.toString('hex') !== json.crypto.mac) {\n    throw new Error('Key derivation failed - possibly wrong passphrase');\n  }\n\n  var decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n  var seed = runCipherBuffer(decipher, ciphertext);\n  return new Wallet(seed);\n};\n/*\n * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n * JSON fields: encseed, ethaddr, btcaddr, email\n */\n\n\nWallet.fromEthSale = function (input, password) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(input);\n  var encseed = Buffer.from(json.encseed, 'hex'); // key derivation\n\n  var derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16); // seed decoding (IV is first 16 bytes)\n  // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n  //       see also http://stackoverflow.com/a/31614770/4964819\n\n  var decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\n  var seed = runCipherBuffer(decipher, encseed.slice(16));\n  var wallet = new Wallet(ethUtil.keccak256(seed));\n\n  if (wallet.getAddress().toString('hex') !== json.ethaddr) {\n    throw new Error('Decoded key mismatch - possibly wrong passphrase');\n  }\n\n  return wallet;\n};\n\nmodule.exports = Wallet;","map":{"version":3,"names":["_typeof","Symbol","iterator","obj","constructor","prototype","Buffer","require","ethUtil","crypto","randomBytes","scryptsy","uuidv4","bs58check","assert","val","msg","Error","runCipherBuffer","cipher","data","concat","update","final","Wallet","priv","pub","isValidPrivate","isValidPublic","_privKey","_pubKey","Object","defineProperty","get","privateToPublic","privKey","generate","icapDirect","max","BN","privateToAddress","lte","generateVanityAddress","pattern","RegExp","address","test","toString","getPrivateKey","getPrivateKeyString","bufferToHex","getPublicKey","pubKey","getPublicKeyString","getAddress","publicToAddress","getAddressString","getChecksumAddressString","toChecksumAddress","toV3","password","opts","salt","iv","derivedKey","kdf","kdfparams","dklen","c","prf","pbkdf2Sync","from","n","r","p","createCipheriv","slice","ciphertext","mac","keccak256","version","id","random","uuid","cipherparams","getV3Filename","timestamp","ts","Date","toJSON","replace","join","toV3String","JSON","stringify","fromPublicKey","nonStrict","importPublic","fromExtendedPublicKey","decode","fromPrivateKey","fromExtendedPrivateKey","tmp","fromV1","input","json","parse","Version","Crypto","KeyHeader","Kdf","KdfParams","Salt","N","R","P","DkLen","CipherText","MAC","decipher","createDecipheriv","IV","seed","fromV3","toLowerCase","fromEthSale","encseed","wallet","ethaddr","module","exports"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/node_modules/ethereumjs-wallet/index.js"],"sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar Buffer = require('safe-buffer').Buffer;\nvar ethUtil = require('ethereumjs-util');\nvar crypto = require('crypto');\nvar randomBytes = require('randombytes');\nvar scryptsy = require('scryptsy');\nvar uuidv4 = require('uuid/v4');\nvar bs58check = require('bs58check');\n\nfunction assert(val, msg) {\n  if (!val) {\n    throw new Error(msg || 'Assertion failed');\n  }\n}\n\nfunction runCipherBuffer(cipher, data) {\n  return Buffer.concat([cipher.update(data), cipher.final()]);\n}\n\nvar Wallet = function Wallet(priv, pub) {\n  if (priv && pub) {\n    throw new Error('Cannot supply both a private and a public key to the constructor');\n  }\n\n  if (priv && !ethUtil.isValidPrivate(priv)) {\n    throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n  }\n\n  if (pub && !ethUtil.isValidPublic(pub)) {\n    throw new Error('Invalid public key');\n  }\n\n  this._privKey = priv;\n  this._pubKey = pub;\n};\n\nObject.defineProperty(Wallet.prototype, 'privKey', {\n  get: function get() {\n    assert(this._privKey, 'This is a public key only wallet');\n    return this._privKey;\n  }\n});\n\nObject.defineProperty(Wallet.prototype, 'pubKey', {\n  get: function get() {\n    if (!this._pubKey) {\n      this._pubKey = ethUtil.privateToPublic(this.privKey);\n    }\n    return this._pubKey;\n  }\n});\n\nWallet.generate = function (icapDirect) {\n  if (icapDirect) {\n    var max = new ethUtil.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\n    while (true) {\n      var privKey = randomBytes(32);\n      if (new ethUtil.BN(ethUtil.privateToAddress(privKey)).lte(max)) {\n        return new Wallet(privKey);\n      }\n    }\n  } else {\n    return new Wallet(randomBytes(32));\n  }\n};\n\nWallet.generateVanityAddress = function (pattern) {\n  if ((typeof pattern === 'undefined' ? 'undefined' : _typeof(pattern)) !== 'object') {\n    pattern = new RegExp(pattern);\n  }\n\n  while (true) {\n    var privKey = randomBytes(32);\n    var address = ethUtil.privateToAddress(privKey);\n\n    if (pattern.test(address.toString('hex'))) {\n      return new Wallet(privKey);\n    }\n  }\n};\n\nWallet.prototype.getPrivateKey = function () {\n  return this.privKey;\n};\n\nWallet.prototype.getPrivateKeyString = function () {\n  return ethUtil.bufferToHex(this.getPrivateKey());\n};\n\nWallet.prototype.getPublicKey = function () {\n  return this.pubKey;\n};\n\nWallet.prototype.getPublicKeyString = function () {\n  return ethUtil.bufferToHex(this.getPublicKey());\n};\n\nWallet.prototype.getAddress = function () {\n  return ethUtil.publicToAddress(this.pubKey);\n};\n\nWallet.prototype.getAddressString = function () {\n  return ethUtil.bufferToHex(this.getAddress());\n};\n\nWallet.prototype.getChecksumAddressString = function () {\n  return ethUtil.toChecksumAddress(this.getAddressString());\n};\n\n// https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\nWallet.prototype.toV3 = function (password, opts) {\n  assert(this._privKey, 'This is a public key only wallet');\n\n  opts = opts || {};\n  var salt = opts.salt || randomBytes(32);\n  var iv = opts.iv || randomBytes(16);\n\n  var derivedKey;\n  var kdf = opts.kdf || 'scrypt';\n  var kdfparams = {\n    dklen: opts.dklen || 32,\n    salt: salt.toString('hex')\n  };\n\n  if (kdf === 'pbkdf2') {\n    kdfparams.c = opts.c || 262144;\n    kdfparams.prf = 'hmac-sha256';\n    derivedKey = crypto.pbkdf2Sync(Buffer.from(password), salt, kdfparams.c, kdfparams.dklen, 'sha256');\n  } else if (kdf === 'scrypt') {\n    // FIXME: support progress reporting callback\n    kdfparams.n = opts.n || 262144;\n    kdfparams.r = opts.r || 8;\n    kdfparams.p = opts.p || 1;\n    derivedKey = scryptsy(Buffer.from(password), salt, kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else {\n    throw new Error('Unsupported kdf');\n  }\n\n  var cipher = crypto.createCipheriv(opts.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n  if (!cipher) {\n    throw new Error('Unsupported cipher');\n  }\n\n  var ciphertext = runCipherBuffer(cipher, this.privKey);\n\n  var mac = ethUtil.keccak256(Buffer.concat([derivedKey.slice(16, 32), Buffer.from(ciphertext, 'hex')]));\n\n  return {\n    version: 3,\n    id: uuidv4({ random: opts.uuid || randomBytes(16) }),\n    address: this.getAddress().toString('hex'),\n    crypto: {\n      ciphertext: ciphertext.toString('hex'),\n      cipherparams: {\n        iv: iv.toString('hex')\n      },\n      cipher: opts.cipher || 'aes-128-ctr',\n      kdf: kdf,\n      kdfparams: kdfparams,\n      mac: mac.toString('hex')\n    }\n  };\n};\n\nWallet.prototype.getV3Filename = function (timestamp) {\n  /*\n   * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n   * is a pain in Javascript, everbody knows that. We could use moment.js,\n   * but decide to do it manually in order to save space.\n   *\n   * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n   * but does it really matter?\n   *\n   * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n   *\n   */\n  var ts = timestamp ? new Date(timestamp) : new Date();\n\n  return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\n};\n\nWallet.prototype.toV3String = function (password, opts) {\n  return JSON.stringify(this.toV3(password, opts));\n};\n\nWallet.fromPublicKey = function (pub, nonStrict) {\n  if (nonStrict) {\n    pub = ethUtil.importPublic(pub);\n  }\n  return new Wallet(null, pub);\n};\n\nWallet.fromExtendedPublicKey = function (pub) {\n  assert(pub.slice(0, 4) === 'xpub', 'Not an extended public key');\n  pub = bs58check.decode(pub).slice(45);\n  // Convert to an Ethereum public key\n  return Wallet.fromPublicKey(pub, true);\n};\n\nWallet.fromPrivateKey = function (priv) {\n  return new Wallet(priv);\n};\n\nWallet.fromExtendedPrivateKey = function (priv) {\n  assert(priv.slice(0, 4) === 'xprv', 'Not an extended private key');\n  var tmp = bs58check.decode(priv);\n  assert(tmp[45] === 0, 'Invalid extended private key');\n  return Wallet.fromPrivateKey(tmp.slice(46));\n};\n\n// https://github.com/ethereum/go-ethereum/wiki/Passphrase-protected-key-store-spec\nWallet.fromV1 = function (input, password) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(input);\n\n  if (json.Version !== '1') {\n    throw new Error('Not a V1 wallet');\n  }\n\n  if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n    throw new Error('Unsupported key derivation scheme');\n  }\n\n  var kdfparams = json.Crypto.KeyHeader.KdfParams;\n  var derivedKey = scryptsy(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen);\n\n  var ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\n\n  var mac = ethUtil.keccak256(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n\n  if (mac.toString('hex') !== json.Crypto.MAC) {\n    throw new Error('Key derivation failed - possibly wrong passphrase');\n  }\n\n  var decipher = crypto.createDecipheriv('aes-128-cbc', ethUtil.keccak256(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\n  var seed = runCipherBuffer(decipher, ciphertext);\n\n  return new Wallet(seed);\n};\n\nWallet.fromV3 = function (input, password, nonStrict) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n\n  if (json.version !== 3) {\n    throw new Error('Not a V3 wallet');\n  }\n\n  var derivedKey;\n  var kdfparams;\n  if (json.crypto.kdf === 'scrypt') {\n    kdfparams = json.crypto.kdfparams;\n\n    // FIXME: support progress reporting callback\n    derivedKey = scryptsy(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else if (json.crypto.kdf === 'pbkdf2') {\n    kdfparams = json.crypto.kdfparams;\n\n    if (kdfparams.prf !== 'hmac-sha256') {\n      throw new Error('Unsupported parameters to PBKDF2');\n    }\n\n    derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else {\n    throw new Error('Unsupported key derivation scheme');\n  }\n\n  var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n\n  var mac = ethUtil.keccak256(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n  if (mac.toString('hex') !== json.crypto.mac) {\n    throw new Error('Key derivation failed - possibly wrong passphrase');\n  }\n\n  var decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n  var seed = runCipherBuffer(decipher, ciphertext);\n\n  return new Wallet(seed);\n};\n\n/*\n * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n * JSON fields: encseed, ethaddr, btcaddr, email\n */\nWallet.fromEthSale = function (input, password) {\n  assert(typeof password === 'string');\n  var json = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? input : JSON.parse(input);\n\n  var encseed = Buffer.from(json.encseed, 'hex');\n\n  // key derivation\n  var derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16);\n\n  // seed decoding (IV is first 16 bytes)\n  // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n  //       see also http://stackoverflow.com/a/31614770/4964819\n  var decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\n  var seed = runCipherBuffer(decipher, encseed.slice(16));\n\n  var wallet = new Wallet(ethUtil.keccak256(seed));\n  if (wallet.getAddress().toString('hex') !== json.ethaddr) {\n    throw new Error('Decoded key mismatch - possibly wrong passphrase');\n  }\n  return wallet;\n};\n\nmodule.exports = Wallet;"],"mappings":"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"},"metadata":{},"sourceType":"script"}