{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportProperHex = void 0;\n\nfunction supportProperHex(Assertion) {\n  Assertion.addMethod('properHex', function (length) {\n    const subject = this._obj;\n    const regexp = new RegExp(`^0x[0-9-a-fA-F]{${length}}$`);\n    this.assert(regexp.test(subject), `Expected \"${subject}\" to be a proper hex of length ${length}`, `Expected \"${subject}\" not to be a proper hex of length ${length}, but it was`, 'proper address (eg.: 0x1234567890123456789012345678901234567890)', subject);\n  });\n}\n\nexports.supportProperHex = supportProperHex;","map":{"version":3,"names":["Object","defineProperty","exports","value","supportProperHex","Assertion","addMethod","length","subject","_obj","regexp","RegExp","assert","test"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/chai/dist/cjs/matchers/properHex.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.supportProperHex = void 0;\nfunction supportProperHex(Assertion) {\n    Assertion.addMethod('properHex', function (length) {\n        const subject = this._obj;\n        const regexp = new RegExp(`^0x[0-9-a-fA-F]{${length}}$`);\n        this.assert(regexp.test(subject), `Expected \"${subject}\" to be a proper hex of length ${length}`, `Expected \"${subject}\" not to be a proper hex of length ${length}, but it was`, 'proper address (eg.: 0x1234567890123456789012345678901234567890)', subject);\n    });\n}\nexports.supportProperHex = supportProperHex;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC;;AACA,SAASA,gBAAT,CAA0BC,SAA1B,EAAqC;EACjCA,SAAS,CAACC,SAAV,CAAoB,WAApB,EAAiC,UAAUC,MAAV,EAAkB;IAC/C,MAAMC,OAAO,GAAG,KAAKC,IAArB;IACA,MAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAY,mBAAkBJ,MAAO,IAArC,CAAf;IACA,KAAKK,MAAL,CAAYF,MAAM,CAACG,IAAP,CAAYL,OAAZ,CAAZ,EAAmC,aAAYA,OAAQ,kCAAiCD,MAAO,EAA/F,EAAmG,aAAYC,OAAQ,sCAAqCD,MAAO,cAAnK,EAAkL,kEAAlL,EAAsPC,OAAtP;EACH,CAJD;AAKH;;AACDN,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B"},"metadata":{},"sourceType":"script"}