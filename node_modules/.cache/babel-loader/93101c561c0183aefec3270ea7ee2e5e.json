{"ast":null,"code":"var _jsxFileName = \"F:\\\\Games\\\\slotmachinereact\\\\src\\\\components\\\\ReelSet.js\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useEffect, useRef, useState } from \"react\";\nimport Constants from \"../Constants\";\nimport Bet from \"./Bet\";\nimport Withdrawal from \"./Withdrawal\";\nimport \"../assets/css/App.css\";\nimport Reel from \"./Reel\";\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet score = 2;\nlet bet = 0;\n\nconst ReelSet = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [rolling, setRolling] = useState(false);\n  const [gameOn, setGameOn] = useState(0);\n  const [reels, setReels] = useState([]);\n  const reel = useRef(); //const reels= [];\n\n  const randomBetween = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) - min);\n  };\n\n  useEffect(() => {\n    console.log(\"My reels are: \" + reel.current.childNodes[0].children);\n  }, [score]);\n\n  const renderReels = () => {\n    return Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(Reel, {\n        reel: el,\n        index: idx,\n        game: gameOn,\n        opacity: 1,\n        createArray: callbackCreateArray\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  const spinReel = () => {\n    let reelList = [];\n\n    if (gameOn === 0) {\n      reelList = renderReels();\n      setGameOn(gameOn + 1);\n    } else if (gameOn > 0) {\n      reelList = renderReels();\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: reelList\n    }, void 0, false);\n  };\n\n  const callbackBet = () => {};\n\n  const callbackCreateArray = reel => {\n    console.log(\"Receiving callback Array: \" + reel); //  reels.push(reel);\n\n    setReels(reels);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      id: \"jackpot\",\n      children: [\"Jackpot: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"playContainer\",\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"reelSet\",\n          ref: reel,\n          children: spinReel()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !rolling ? \"roll rolling\" : \"roll\",\n        onClick: () => {\n          spinReel();\n        },\n        disabled: rolling,\n        children: rolling ? \"Rolling...\" : \"ROLL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Withdrawal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Bet, {\n        score: score,\n        setBet: callbackBet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Score:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"score\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"54Sn59Ie70PyvLyoEHCXGYIdPfE=\")), \"54Sn59Ie70PyvLyoEHCXGYIdPfE=\");\n\n_c2 = ReelSet;\nexport default ReelSet;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReelSet$forwardRef\");\n$RefreshReg$(_c2, \"ReelSet\");","map":{"version":3,"names":["React","forwardRef","useEffect","useRef","useState","Constants","Bet","Withdrawal","Reel","motion","score","bet","ReelSet","props","ref","rolling","setRolling","gameOn","setGameOn","reels","setReels","reel","randomBetween","min","max","Math","floor","random","console","log","current","childNodes","children","renderReels","Array","apply","REELS","map","el","idx","callbackCreateArray","spinReel","reelList","callbackBet"],"sources":["F:/Games/slotmachinereact/src/components/ReelSet.js"],"sourcesContent":["import React, { forwardRef, useEffect, useRef, useState} from \"react\";\r\nimport Constants from \"../Constants\";\r\nimport Bet from \"./Bet\";\r\nimport Withdrawal from \"./Withdrawal\";\r\nimport \"../assets/css/App.css\";\r\nimport Reel from \"./Reel\";\r\nimport {motion} from 'framer-motion';\r\n\r\nlet score=2;\r\nlet bet=0;\r\n\r\nconst ReelSet = forwardRef((props, ref) => {\r\n  const [rolling, setRolling] = useState(false);\r\n  const [gameOn, setGameOn] = useState(0);\r\n  const [reels, setReels] = useState([]);\r\n\r\n  const reel= useRef();\r\n  //const reels= [];\r\n\r\n  const randomBetween = (min, max) => {\r\n    return Math.floor(Math.random()*(max-min+1)-min);\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n    console.log(\"My reels are: \"+reel.current.childNodes[0].children );\r\n\r\n  },[score])\r\n\r\n  const renderReels=()=>{\r\n    return Array.apply(null, Array(Constants.REELS)).map((el, idx) => {\r\n      return <Reel reel={el} key={idx} index={idx} game={gameOn} opacity={1} createArray={callbackCreateArray}/>});\r\n  }\r\n\r\n  const spinReel = () => {\r\n    let reelList=[];\r\n    if(gameOn===0 ){\r\n      reelList= renderReels();\r\n      setGameOn(gameOn + 1);\r\n    }else if(gameOn>0){\r\n      reelList=renderReels();\r\n    }\r\n    return <>{reelList}</>\r\n  }\r\n\r\n  const callbackBet = () => {\r\n\r\n  }\r\n\r\n  const callbackCreateArray = (reel) => {\r\n    console.log(\"Receiving callback Array: \"+reel);\r\n  //  reels.push(reel);\r\n  setReels(reels);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <motion.div id=\"jackpot\" >\r\n    Jackpot: <span>100</span>\r\n  </motion.div>\r\n      <motion.div className=\"container\" >\r\n        <motion.div className=\"playContainer\">\r\n          <motion.div  className=\"reelSet\" ref={reel}>\r\n            {spinReel()}\r\n          </motion.div>\r\n        </motion.div>\r\n      </motion.div>\r\n            <div id=\"controls\">\r\n            <div\r\n              className={!rolling ? \"roll rolling\" : \"roll\"}\r\n              onClick={() => {\r\n                spinReel();\r\n              }}\r\n              disabled={rolling} >\r\n              {rolling ? \"Rolling...\" : \"ROLL\"}\r\n            </div>\r\n            <Withdrawal/>\r\n            <Bet score={score} setBet={callbackBet} />\r\n            <label>\r\n              Score:<span id=\"score\">{score}</span>\r\n            </label>\r\n          </div>\r\n          </>\r\n  );\r\n});\r\n\r\nexport default ReelSet;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}