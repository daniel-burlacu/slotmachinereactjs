{"ast":null,"code":"const async = require('async');\n\nmodule.exports = {\n  matchingNibbleLength: matchingNibbleLength,\n  callTogether: callTogether,\n  asyncFirstSeries: asyncFirstSeries,\n  doKeysMatch: doKeysMatch\n};\n/**\n * Returns the number of in order matching nibbles of two give nibble arrayes\n * @method matchingNibbleLength\n * @param {Array} nib1\n * @param {Array} nib2\n */\n\nfunction matchingNibbleLength(nib1, nib2) {\n  var i = 0;\n\n  while (nib1[i] === nib2[i] && nib1.length > i) {\n    i++;\n  }\n\n  return i;\n}\n/**\n * Compare two 'nibble array' keys\n */\n\n\nfunction doKeysMatch(keyA, keyB) {\n  var length = matchingNibbleLength(keyA, keyB);\n  return length === keyA.length && length === keyB.length;\n}\n/**\n * Take two or more functions and returns a function  that will execute all of\n * the given functions\n */\n\n\nfunction callTogether() {\n  var funcs = arguments;\n  var length = funcs.length;\n  var index = length;\n\n  if (!length) {\n    return function () {};\n  }\n\n  return function () {\n    length = index;\n\n    while (length--) {\n      var fn = funcs[length];\n\n      if (typeof fn === 'function') {\n        var result = funcs[length].apply(this, arguments);\n      }\n    }\n\n    return result;\n  };\n}\n/**\n * Take a collection of async fns, call the cb on the first to return a truthy value.\n * If all run without a truthy result, return undefined\n */\n\n\nfunction asyncFirstSeries(array, iterator, cb) {\n  var didComplete = false;\n  async.eachSeries(array, function (item, next) {\n    if (didComplete) return next;\n    iterator(item, function (err, result) {\n      if (result) {\n        didComplete = true;\n        process.nextTick(cb.bind(null, null, result));\n      }\n\n      next(err);\n    });\n  }, function () {\n    if (!didComplete) {\n      cb();\n    }\n  });\n}","map":{"version":3,"names":["async","require","module","exports","matchingNibbleLength","callTogether","asyncFirstSeries","doKeysMatch","nib1","nib2","i","length","keyA","keyB","funcs","arguments","index","fn","result","apply","array","iterator","cb","didComplete","eachSeries","item","next","err","process","nextTick","bind"],"sources":["F:/Games/slotmachinereact/node_modules/ganache-core/node_modules/ethereumjs-block/node_modules/merkle-patricia-tree/util.js"],"sourcesContent":["const async = require('async')\n\nmodule.exports = {\n  matchingNibbleLength: matchingNibbleLength,\n  callTogether: callTogether,\n  asyncFirstSeries: asyncFirstSeries,\n  doKeysMatch: doKeysMatch\n}\n\n/**\n * Returns the number of in order matching nibbles of two give nibble arrayes\n * @method matchingNibbleLength\n * @param {Array} nib1\n * @param {Array} nib2\n */\nfunction matchingNibbleLength (nib1, nib2) {\n  var i = 0\n  while (nib1[i] === nib2[i] && nib1.length > i) {\n    i++\n  }\n  return i\n}\n\n/**\n * Compare two 'nibble array' keys\n */\nfunction doKeysMatch (keyA, keyB) {\n  var length = matchingNibbleLength(keyA, keyB)\n  return length === keyA.length && length === keyB.length\n}\n\n/**\n * Take two or more functions and returns a function  that will execute all of\n * the given functions\n */\nfunction callTogether () {\n  var funcs = arguments\n  var length = funcs.length\n  var index = length\n\n  if (!length) {\n    return function () {}\n  }\n\n  return function () {\n    length = index\n\n    while (length--) {\n      var fn = funcs[length]\n      if (typeof fn === 'function') {\n        var result = funcs[length].apply(this, arguments)\n      }\n    }\n    return result\n  }\n}\n\n/**\n * Take a collection of async fns, call the cb on the first to return a truthy value.\n * If all run without a truthy result, return undefined\n */\nfunction asyncFirstSeries (array, iterator, cb) {\n  var didComplete = false\n  async.eachSeries(array, function (item, next) {\n    if (didComplete) return next\n    iterator(item, function (err, result) {\n      if (result) {\n        didComplete = true\n        process.nextTick(cb.bind(null, null, result))\n      }\n      next(err)\n    })\n  }, function () {\n    if (!didComplete) {\n      cb()\n    }\n  })\n}\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACfC,oBAAoB,EAAEA,oBADP;EAEfC,YAAY,EAAEA,YAFC;EAGfC,gBAAgB,EAAEA,gBAHH;EAIfC,WAAW,EAAEA;AAJE,CAAjB;AAOA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASH,oBAAT,CAA+BI,IAA/B,EAAqCC,IAArC,EAA2C;EACzC,IAAIC,CAAC,GAAG,CAAR;;EACA,OAAOF,IAAI,CAACE,CAAD,CAAJ,KAAYD,IAAI,CAACC,CAAD,CAAhB,IAAuBF,IAAI,CAACG,MAAL,GAAcD,CAA5C,EAA+C;IAC7CA,CAAC;EACF;;EACD,OAAOA,CAAP;AACD;AAED;AACA;AACA;;;AACA,SAASH,WAAT,CAAsBK,IAAtB,EAA4BC,IAA5B,EAAkC;EAChC,IAAIF,MAAM,GAAGP,oBAAoB,CAACQ,IAAD,EAAOC,IAAP,CAAjC;EACA,OAAOF,MAAM,KAAKC,IAAI,CAACD,MAAhB,IAA0BA,MAAM,KAAKE,IAAI,CAACF,MAAjD;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASN,YAAT,GAAyB;EACvB,IAAIS,KAAK,GAAGC,SAAZ;EACA,IAAIJ,MAAM,GAAGG,KAAK,CAACH,MAAnB;EACA,IAAIK,KAAK,GAAGL,MAAZ;;EAEA,IAAI,CAACA,MAAL,EAAa;IACX,OAAO,YAAY,CAAE,CAArB;EACD;;EAED,OAAO,YAAY;IACjBA,MAAM,GAAGK,KAAT;;IAEA,OAAOL,MAAM,EAAb,EAAiB;MACf,IAAIM,EAAE,GAAGH,KAAK,CAACH,MAAD,CAAd;;MACA,IAAI,OAAOM,EAAP,KAAc,UAAlB,EAA8B;QAC5B,IAAIC,MAAM,GAAGJ,KAAK,CAACH,MAAD,CAAL,CAAcQ,KAAd,CAAoB,IAApB,EAA0BJ,SAA1B,CAAb;MACD;IACF;;IACD,OAAOG,MAAP;EACD,CAVD;AAWD;AAED;AACA;AACA;AACA;;;AACA,SAASZ,gBAAT,CAA2Bc,KAA3B,EAAkCC,QAAlC,EAA4CC,EAA5C,EAAgD;EAC9C,IAAIC,WAAW,GAAG,KAAlB;EACAvB,KAAK,CAACwB,UAAN,CAAiBJ,KAAjB,EAAwB,UAAUK,IAAV,EAAgBC,IAAhB,EAAsB;IAC5C,IAAIH,WAAJ,EAAiB,OAAOG,IAAP;IACjBL,QAAQ,CAACI,IAAD,EAAO,UAAUE,GAAV,EAAeT,MAAf,EAAuB;MACpC,IAAIA,MAAJ,EAAY;QACVK,WAAW,GAAG,IAAd;QACAK,OAAO,CAACC,QAAR,CAAiBP,EAAE,CAACQ,IAAH,CAAQ,IAAR,EAAc,IAAd,EAAoBZ,MAApB,CAAjB;MACD;;MACDQ,IAAI,CAACC,GAAD,CAAJ;IACD,CANO,CAAR;EAOD,CATD,EASG,YAAY;IACb,IAAI,CAACJ,WAAL,EAAkB;MAChBD,EAAE;IACH;EACF,CAbD;AAcD"},"metadata":{},"sourceType":"script"}