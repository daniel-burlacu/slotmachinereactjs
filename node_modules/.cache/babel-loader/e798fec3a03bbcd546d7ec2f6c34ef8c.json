{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportRevertedWith = void 0;\n\nfunction supportRevertedWith(Assertion) {\n  Assertion.addMethod('revertedWith', function (revertReason) {\n    const promise = this._obj;\n\n    const onSuccess = value => {\n      this.assert(false, 'Expected transaction to be reverted', 'Expected transaction NOT to be reverted', 'Transaction reverted.', 'Transaction NOT reverted.');\n      return value;\n    };\n\n    const onError = error => {\n      // See https://github.com/ethers-io/ethers.js/issues/829\n      const isEstimateGasError = error instanceof Object && error.code === 'UNPREDICTABLE_GAS_LIMIT' && 'error' in error;\n\n      if (isEstimateGasError) {\n        error = error.error;\n      }\n\n      const reasonsList = error.results && Object.values(error.results).map(o => o.reason);\n      const message = error instanceof Object && 'message' in error ? error.message : JSON.stringify(error);\n      const isReverted = reasonsList ? reasonsList.some(r => r === revertReason) : message.includes('revert') && message.includes(revertReason);\n      const isThrown = message.search('invalid opcode') >= 0 && revertReason === '';\n      this.assert(isReverted || isThrown, `Expected transaction to be reverted with ${revertReason}, but other exception was thrown: ${error}`, `Expected transaction NOT to be reverted with ${revertReason}`, `Transaction reverted with ${revertReason}.`, error);\n      return error;\n    };\n\n    const derivedPromise = promise.then(onSuccess, onError);\n    this.then = derivedPromise.then.bind(derivedPromise);\n    this.catch = derivedPromise.catch.bind(derivedPromise);\n    return this;\n  });\n}\n\nexports.supportRevertedWith = supportRevertedWith;","map":{"version":3,"names":["Object","defineProperty","exports","value","supportRevertedWith","Assertion","addMethod","revertReason","promise","_obj","onSuccess","assert","onError","error","isEstimateGasError","code","reasonsList","results","values","map","o","reason","message","JSON","stringify","isReverted","some","r","includes","isThrown","search","derivedPromise","then","bind","catch"],"sources":["F:/Games/slotmachinereact/node_modules/@ethereum-waffle/chai/dist/cjs/matchers/revertedWith.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.supportRevertedWith = void 0;\nfunction supportRevertedWith(Assertion) {\n    Assertion.addMethod('revertedWith', function (revertReason) {\n        const promise = this._obj;\n        const onSuccess = (value) => {\n            this.assert(false, 'Expected transaction to be reverted', 'Expected transaction NOT to be reverted', 'Transaction reverted.', 'Transaction NOT reverted.');\n            return value;\n        };\n        const onError = (error) => {\n            // See https://github.com/ethers-io/ethers.js/issues/829\n            const isEstimateGasError = error instanceof Object &&\n                error.code === 'UNPREDICTABLE_GAS_LIMIT' &&\n                'error' in error;\n            if (isEstimateGasError) {\n                error = error.error;\n            }\n            const reasonsList = error.results && Object.values(error.results).map((o) => o.reason);\n            const message = (error instanceof Object && 'message' in error) ? error.message : JSON.stringify(error);\n            const isReverted = reasonsList\n                ? reasonsList.some((r) => r === revertReason)\n                : message.includes('revert') && message.includes(revertReason);\n            const isThrown = message.search('invalid opcode') >= 0 && revertReason === '';\n            this.assert(isReverted || isThrown, `Expected transaction to be reverted with ${revertReason}, but other exception was thrown: ${error}`, `Expected transaction NOT to be reverted with ${revertReason}`, `Transaction reverted with ${revertReason}.`, error);\n            return error;\n        };\n        const derivedPromise = promise.then(onSuccess, onError);\n        this.then = derivedPromise.then.bind(derivedPromise);\n        this.catch = derivedPromise.catch.bind(derivedPromise);\n        return this;\n    });\n}\nexports.supportRevertedWith = supportRevertedWith;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,mBAAR,GAA8B,KAAK,CAAnC;;AACA,SAASA,mBAAT,CAA6BC,SAA7B,EAAwC;EACpCA,SAAS,CAACC,SAAV,CAAoB,cAApB,EAAoC,UAAUC,YAAV,EAAwB;IACxD,MAAMC,OAAO,GAAG,KAAKC,IAArB;;IACA,MAAMC,SAAS,GAAIP,KAAD,IAAW;MACzB,KAAKQ,MAAL,CAAY,KAAZ,EAAmB,qCAAnB,EAA0D,yCAA1D,EAAqG,uBAArG,EAA8H,2BAA9H;MACA,OAAOR,KAAP;IACH,CAHD;;IAIA,MAAMS,OAAO,GAAIC,KAAD,IAAW;MACvB;MACA,MAAMC,kBAAkB,GAAGD,KAAK,YAAYb,MAAjB,IACvBa,KAAK,CAACE,IAAN,KAAe,yBADQ,IAEvB,WAAWF,KAFf;;MAGA,IAAIC,kBAAJ,EAAwB;QACpBD,KAAK,GAAGA,KAAK,CAACA,KAAd;MACH;;MACD,MAAMG,WAAW,GAAGH,KAAK,CAACI,OAAN,IAAiBjB,MAAM,CAACkB,MAAP,CAAcL,KAAK,CAACI,OAApB,EAA6BE,GAA7B,CAAkCC,CAAD,IAAOA,CAAC,CAACC,MAA1C,CAArC;MACA,MAAMC,OAAO,GAAIT,KAAK,YAAYb,MAAjB,IAA2B,aAAaa,KAAzC,GAAkDA,KAAK,CAACS,OAAxD,GAAkEC,IAAI,CAACC,SAAL,CAAeX,KAAf,CAAlF;MACA,MAAMY,UAAU,GAAGT,WAAW,GACxBA,WAAW,CAACU,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,KAAKpB,YAA9B,CADwB,GAExBe,OAAO,CAACM,QAAR,CAAiB,QAAjB,KAA8BN,OAAO,CAACM,QAAR,CAAiBrB,YAAjB,CAFpC;MAGA,MAAMsB,QAAQ,GAAGP,OAAO,CAACQ,MAAR,CAAe,gBAAf,KAAoC,CAApC,IAAyCvB,YAAY,KAAK,EAA3E;MACA,KAAKI,MAAL,CAAYc,UAAU,IAAII,QAA1B,EAAqC,4CAA2CtB,YAAa,qCAAoCM,KAAM,EAAvI,EAA2I,gDAA+CN,YAAa,EAAvM,EAA2M,6BAA4BA,YAAa,GAApP,EAAwPM,KAAxP;MACA,OAAOA,KAAP;IACH,CAhBD;;IAiBA,MAAMkB,cAAc,GAAGvB,OAAO,CAACwB,IAAR,CAAatB,SAAb,EAAwBE,OAAxB,CAAvB;IACA,KAAKoB,IAAL,GAAYD,cAAc,CAACC,IAAf,CAAoBC,IAApB,CAAyBF,cAAzB,CAAZ;IACA,KAAKG,KAAL,GAAaH,cAAc,CAACG,KAAf,CAAqBD,IAArB,CAA0BF,cAA1B,CAAb;IACA,OAAO,IAAP;EACH,CA3BD;AA4BH;;AACD7B,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B"},"metadata":{},"sourceType":"script"}